FROM node:24-alpine AS builder

WORKDIR /app

# Copy root package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml turbo.json ./

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Copy all workspace packages
COPY packages ./packages
COPY apps/backend ./apps/backend

# Set CI environment variable for pnpm
ENV CI=true

# Install dependencies and build
RUN pnpm install --frozen-lockfile
RUN pnpm build --filter shared
RUN pnpm build --filter backend

# Production stage
FROM node:24-alpine AS runner
WORKDIR /app

RUN corepack enable && corepack prepare pnpm@latest --activate

# Copy root dependencies config
COPY --from=builder /app/package.json /app/pnpm-lock.yaml /app/pnpm-workspace.yaml ./

# Copy built shared package
COPY --from=builder /app/packages ./packages

# Copy ONLY the built backend dist + package.json
COPY --from=builder /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder /app/apps/backend/package.json ./apps/backend/package.json

# COPY any assets if needed
COPY --from=builder /app/apps/backend/assets ./apps/backend/assets