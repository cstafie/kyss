<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="6771"><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="0.0000%" y="933" width="0.0443%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.61%)</title><rect x="0.0443%" y="933" width="0.6055%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="41"/><text x="0.2943%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="0.6498%" y="933" width="0.0295%" height="15" fill="rgb(221,193,54)" fg:x="44" fg:w="2"/><text x="0.8998%" y="943.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="0.6794%" y="933" width="0.0886%" height="15" fill="rgb(248,212,6)" fg:x="46" fg:w="6"/><text x="0.9294%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="0.7680%" y="933" width="0.0148%" height="15" fill="rgb(208,68,35)" fg:x="52" fg:w="1"/><text x="1.0180%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (67 samples, 0.99%)</title><rect x="0.7827%" y="933" width="0.9895%" height="15" fill="rgb(232,128,0)" fg:x="53" fg:w="67"/><text x="1.0327%" y="943.50"></text></g><g><title>csv_core::reader::Reader::read_record (1 samples, 0.01%)</title><rect x="1.7723%" y="933" width="0.0148%" height="15" fill="rgb(207,160,47)" fg:x="120" fg:w="1"/><text x="2.0223%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (53 samples, 0.78%)</title><rect x="1.7870%" y="933" width="0.7827%" height="15" fill="rgb(228,23,34)" fg:x="121" fg:w="53"/><text x="2.0370%" y="943.50"></text></g><g><title>xWord_generator::generate_xWords (1 samples, 0.01%)</title><rect x="2.5698%" y="933" width="0.0148%" height="15" fill="rgb(218,30,26)" fg:x="174" fg:w="1"/><text x="2.8198%" y="943.50"></text></g><g><title>[[heap]] (192 samples, 2.84%)</title><rect x="0.0000%" y="949" width="2.8356%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="192"/><text x="0.2500%" y="959.50">[[..</text></g><g><title>xWord_generator::get_matching_words (17 samples, 0.25%)</title><rect x="2.5846%" y="933" width="0.2511%" height="15" fill="rgb(250,228,42)" fg:x="175" fg:w="17"/><text x="2.8346%" y="943.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="2.8356%" y="933" width="0.0443%" height="15" fill="rgb(240,193,28)" fg:x="192" fg:w="3"/><text x="3.0856%" y="943.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="2.8799%" y="933" width="0.0148%" height="15" fill="rgb(216,20,37)" fg:x="195" fg:w="1"/><text x="3.1299%" y="943.50"></text></g><g><title>&lt;char as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="2.8947%" y="933" width="0.0148%" height="15" fill="rgb(206,188,39)" fg:x="196" fg:w="1"/><text x="3.1447%" y="943.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.01%)</title><rect x="2.8947%" y="917" width="0.0148%" height="15" fill="rgb(217,207,13)" fg:x="196" fg:w="1"/><text x="3.1447%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.07%)</title><rect x="2.9095%" y="933" width="0.0738%" height="15" fill="rgb(231,73,38)" fg:x="197" fg:w="5"/><text x="3.1595%" y="943.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (4 samples, 0.06%)</title><rect x="3.0276%" y="869" width="0.0591%" height="15" fill="rgb(225,20,46)" fg:x="205" fg:w="4"/><text x="3.2776%" y="879.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (4 samples, 0.06%)</title><rect x="3.0276%" y="853" width="0.0591%" height="15" fill="rgb(210,31,41)" fg:x="205" fg:w="4"/><text x="3.2776%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.06%)</title><rect x="3.0276%" y="837" width="0.0591%" height="15" fill="rgb(221,200,47)" fg:x="205" fg:w="4"/><text x="3.2776%" y="847.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.13%)</title><rect x="2.9833%" y="933" width="0.1329%" height="15" fill="rgb(226,26,5)" fg:x="202" fg:w="9"/><text x="3.2333%" y="943.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="3.0276%" y="917" width="0.0886%" height="15" fill="rgb(249,33,26)" fg:x="205" fg:w="6"/><text x="3.2776%" y="927.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="3.0276%" y="901" width="0.0886%" height="15" fill="rgb(235,183,28)" fg:x="205" fg:w="6"/><text x="3.2776%" y="911.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="3.0276%" y="885" width="0.0886%" height="15" fill="rgb(221,5,38)" fg:x="205" fg:w="6"/><text x="3.2776%" y="895.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="3.0867%" y="869" width="0.0295%" height="15" fill="rgb(247,18,42)" fg:x="209" fg:w="2"/><text x="3.3367%" y="879.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="3.0867%" y="853" width="0.0295%" height="15" fill="rgb(241,131,45)" fg:x="209" fg:w="2"/><text x="3.3367%" y="863.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="3.0867%" y="837" width="0.0295%" height="15" fill="rgb(249,31,29)" fg:x="209" fg:w="2"/><text x="3.3367%" y="847.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="3.1162%" y="933" width="0.0443%" height="15" fill="rgb(225,111,53)" fg:x="211" fg:w="3"/><text x="3.3662%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="3.1605%" y="933" width="0.0148%" height="15" fill="rgb(238,160,17)" fg:x="214" fg:w="1"/><text x="3.4105%" y="943.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (3 samples, 0.04%)</title><rect x="3.1753%" y="933" width="0.0443%" height="15" fill="rgb(214,148,48)" fg:x="215" fg:w="3"/><text x="3.4253%" y="943.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (3 samples, 0.04%)</title><rect x="3.1753%" y="917" width="0.0443%" height="15" fill="rgb(232,36,49)" fg:x="215" fg:w="3"/><text x="3.4253%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.04%)</title><rect x="3.1753%" y="901" width="0.0443%" height="15" fill="rgb(209,103,24)" fg:x="215" fg:w="3"/><text x="3.4253%" y="911.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (3 samples, 0.04%)</title><rect x="3.1753%" y="885" width="0.0443%" height="15" fill="rgb(229,88,8)" fg:x="215" fg:w="3"/><text x="3.4253%" y="895.50"></text></g><g><title>[[stack]] (33 samples, 0.49%)</title><rect x="2.8356%" y="949" width="0.4874%" height="15" fill="rgb(213,181,19)" fg:x="192" fg:w="33"/><text x="3.0856%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.10%)</title><rect x="3.2196%" y="933" width="0.1034%" height="15" fill="rgb(254,191,54)" fg:x="218" fg:w="7"/><text x="3.4696%" y="943.50"></text></g><g><title>[ld-2.31.so] (6 samples, 0.09%)</title><rect x="3.3230%" y="949" width="0.0886%" height="15" fill="rgb(241,83,37)" fg:x="225" fg:w="6"/><text x="3.5730%" y="959.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="933" width="0.0148%" height="15" fill="rgb(233,36,39)" fg:x="230" fg:w="1"/><text x="3.6468%" y="943.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="917" width="0.0148%" height="15" fill="rgb(226,3,54)" fg:x="230" fg:w="1"/><text x="3.6468%" y="927.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="901" width="0.0148%" height="15" fill="rgb(245,192,40)" fg:x="230" fg:w="1"/><text x="3.6468%" y="911.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="885" width="0.0148%" height="15" fill="rgb(238,167,29)" fg:x="230" fg:w="1"/><text x="3.6468%" y="895.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="3.3968%" y="869" width="0.0148%" height="15" fill="rgb(232,182,51)" fg:x="230" fg:w="1"/><text x="3.6468%" y="879.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="853" width="0.0148%" height="15" fill="rgb(231,60,39)" fg:x="230" fg:w="1"/><text x="3.6468%" y="863.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="837" width="0.0148%" height="15" fill="rgb(208,69,12)" fg:x="230" fg:w="1"/><text x="3.6468%" y="847.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="821" width="0.0148%" height="15" fill="rgb(235,93,37)" fg:x="230" fg:w="1"/><text x="3.6468%" y="831.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="3.3968%" y="805" width="0.0148%" height="15" fill="rgb(213,116,39)" fg:x="230" fg:w="1"/><text x="3.6468%" y="815.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="3.4116%" y="949" width="0.0148%" height="15" fill="rgb(222,207,29)" fg:x="231" fg:w="1"/><text x="3.6616%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (6 samples, 0.09%)</title><rect x="3.4264%" y="933" width="0.0886%" height="15" fill="rgb(206,96,30)" fg:x="232" fg:w="6"/><text x="3.6764%" y="943.50"></text></g><g><title>&lt;char as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="3.5150%" y="933" width="0.0148%" height="15" fill="rgb(218,138,4)" fg:x="238" fg:w="1"/><text x="3.7650%" y="943.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.01%)</title><rect x="3.5150%" y="917" width="0.0148%" height="15" fill="rgb(250,191,14)" fg:x="238" fg:w="1"/><text x="3.7650%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.59%)</title><rect x="3.5298%" y="933" width="0.5908%" height="15" fill="rgb(239,60,40)" fg:x="239" fg:w="40"/><text x="3.7798%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="4.1205%" y="933" width="0.0443%" height="15" fill="rgb(206,27,48)" fg:x="279" fg:w="3"/><text x="4.3705%" y="943.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="4.2977%" y="869" width="0.0443%" height="15" fill="rgb(225,35,8)" fg:x="291" fg:w="3"/><text x="4.5477%" y="879.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (3 samples, 0.04%)</title><rect x="4.2977%" y="853" width="0.0443%" height="15" fill="rgb(250,213,24)" fg:x="291" fg:w="3"/><text x="4.5477%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="4.2977%" y="837" width="0.0443%" height="15" fill="rgb(247,123,22)" fg:x="291" fg:w="3"/><text x="4.5477%" y="847.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (14 samples, 0.21%)</title><rect x="4.1648%" y="933" width="0.2068%" height="15" fill="rgb(231,138,38)" fg:x="282" fg:w="14"/><text x="4.4148%" y="943.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="4.2977%" y="917" width="0.0738%" height="15" fill="rgb(231,145,46)" fg:x="291" fg:w="5"/><text x="4.5477%" y="927.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="4.2977%" y="901" width="0.0738%" height="15" fill="rgb(251,118,11)" fg:x="291" fg:w="5"/><text x="4.5477%" y="911.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="4.2977%" y="885" width="0.0738%" height="15" fill="rgb(217,147,25)" fg:x="291" fg:w="5"/><text x="4.5477%" y="895.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="4.3420%" y="869" width="0.0295%" height="15" fill="rgb(247,81,37)" fg:x="294" fg:w="2"/><text x="4.5920%" y="879.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="4.3420%" y="853" width="0.0295%" height="15" fill="rgb(209,12,38)" fg:x="294" fg:w="2"/><text x="4.5920%" y="863.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="4.3420%" y="837" width="0.0295%" height="15" fill="rgb(227,1,9)" fg:x="294" fg:w="2"/><text x="4.5920%" y="847.50"></text></g><g><title>[libc-2.31.so] (41 samples, 0.61%)</title><rect x="4.3716%" y="933" width="0.6055%" height="15" fill="rgb(248,47,43)" fg:x="296" fg:w="41"/><text x="4.6216%" y="943.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="4.9771%" y="933" width="0.0295%" height="15" fill="rgb(221,10,30)" fg:x="337" fg:w="2"/><text x="5.2271%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="5.0066%" y="933" width="0.0295%" height="15" fill="rgb(210,229,1)" fg:x="339" fg:w="2"/><text x="5.2566%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="5.0214%" y="917" width="0.0148%" height="15" fill="rgb(222,148,37)" fg:x="340" fg:w="1"/><text x="5.2714%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.09%)</title><rect x="5.0362%" y="933" width="0.0886%" height="15" fill="rgb(234,67,33)" fg:x="341" fg:w="6"/><text x="5.2862%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="5.0805%" y="917" width="0.0443%" height="15" fill="rgb(247,98,35)" fg:x="344" fg:w="3"/><text x="5.3305%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.03%)</title><rect x="5.0953%" y="901" width="0.0295%" height="15" fill="rgb(247,138,52)" fg:x="345" fg:w="2"/><text x="5.3453%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.03%)</title><rect x="5.0953%" y="885" width="0.0295%" height="15" fill="rgb(213,79,30)" fg:x="345" fg:w="2"/><text x="5.3453%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.18%)</title><rect x="5.1248%" y="933" width="0.1772%" height="15" fill="rgb(246,177,23)" fg:x="347" fg:w="12"/><text x="5.3748%" y="943.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="5.3020%" y="933" width="0.0148%" height="15" fill="rgb(230,62,27)" fg:x="359" fg:w="1"/><text x="5.5520%" y="943.50"></text></g><g><title>core::fmt::Write::write_char (3 samples, 0.04%)</title><rect x="5.3168%" y="933" width="0.0443%" height="15" fill="rgb(216,154,8)" fg:x="360" fg:w="3"/><text x="5.5668%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.27%)</title><rect x="5.3611%" y="933" width="0.2658%" height="15" fill="rgb(244,35,45)" fg:x="363" fg:w="18"/><text x="5.6111%" y="943.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.01%)</title><rect x="5.6269%" y="933" width="0.0148%" height="15" fill="rgb(251,115,12)" fg:x="381" fg:w="1"/><text x="5.8769%" y="943.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (1 samples, 0.01%)</title><rect x="5.6417%" y="933" width="0.0148%" height="15" fill="rgb(240,54,50)" fg:x="382" fg:w="1"/><text x="5.8917%" y="943.50"></text></g><g><title>csv_core::reader::Reader::read_record (1 samples, 0.01%)</title><rect x="5.6565%" y="933" width="0.0148%" height="15" fill="rgb(233,84,52)" fg:x="383" fg:w="1"/><text x="5.9065%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.15%)</title><rect x="5.6712%" y="933" width="0.1477%" height="15" fill="rgb(207,117,47)" fg:x="384" fg:w="10"/><text x="5.9212%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (38 samples, 0.56%)</title><rect x="5.8189%" y="933" width="0.5612%" height="15" fill="rgb(249,43,39)" fg:x="394" fg:w="38"/><text x="6.0689%" y="943.50"></text></g><g><title>xWord_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="6.3802%" y="933" width="0.0148%" height="15" fill="rgb(209,38,44)" fg:x="432" fg:w="1"/><text x="6.6302%" y="943.50"></text></g><g><title>xWord_generator::generate_xWords (5 samples, 0.07%)</title><rect x="6.3949%" y="933" width="0.0738%" height="15" fill="rgb(236,212,23)" fg:x="433" fg:w="5"/><text x="6.6449%" y="943.50"></text></g><g><title>xWord_generator::get_matching_words (16 samples, 0.24%)</title><rect x="6.4688%" y="933" width="0.2363%" height="15" fill="rgb(242,79,21)" fg:x="438" fg:w="16"/><text x="6.7188%" y="943.50"></text></g><g><title>[unknown] (225 samples, 3.32%)</title><rect x="3.4264%" y="949" width="3.3230%" height="15" fill="rgb(211,96,35)" fg:x="232" fg:w="225"/><text x="3.6764%" y="959.50">[un..</text></g><g><title>xWord_generator::main (3 samples, 0.04%)</title><rect x="6.7051%" y="933" width="0.0443%" height="15" fill="rgb(253,215,40)" fg:x="454" fg:w="3"/><text x="6.9551%" y="943.50"></text></g><g><title>[xWord-generator] (2 samples, 0.03%)</title><rect x="6.7494%" y="949" width="0.0295%" height="15" fill="rgb(211,81,21)" fg:x="457" fg:w="2"/><text x="6.9994%" y="959.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="6.7494%" y="933" width="0.0295%" height="15" fill="rgb(208,190,38)" fg:x="457" fg:w="2"/><text x="6.9994%" y="943.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="6.7789%" y="933" width="0.0148%" height="15" fill="rgb(235,213,38)" fg:x="459" fg:w="1"/><text x="7.0289%" y="943.50"></text></g><g><title>__do_global_dtors_aux_fini_array_entry (2 samples, 0.03%)</title><rect x="6.7789%" y="949" width="0.0295%" height="15" fill="rgb(237,122,38)" fg:x="459" fg:w="2"/><text x="7.0289%" y="959.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="6.7937%" y="933" width="0.0148%" height="15" fill="rgb(244,218,35)" fg:x="460" fg:w="1"/><text x="7.0437%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="6.8084%" y="933" width="0.0148%" height="15" fill="rgb(240,68,47)" fg:x="461" fg:w="1"/><text x="7.0584%" y="943.50"></text></g><g><title>_fini (2 samples, 0.03%)</title><rect x="6.8084%" y="949" width="0.0295%" height="15" fill="rgb(210,16,53)" fg:x="461" fg:w="2"/><text x="7.0584%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="6.8232%" y="933" width="0.0148%" height="15" fill="rgb(235,124,12)" fg:x="462" fg:w="1"/><text x="7.0732%" y="943.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.16%)</title><rect x="7.5469%" y="869" width="0.1625%" height="15" fill="rgb(224,169,11)" fg:x="511" fg:w="11"/><text x="7.7969%" y="879.50"></text></g><g><title>__libc_malloc (20 samples, 0.30%)</title><rect x="7.7093%" y="869" width="0.2954%" height="15" fill="rgb(250,166,2)" fg:x="522" fg:w="20"/><text x="7.9593%" y="879.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="7.9604%" y="853" width="0.0443%" height="15" fill="rgb(242,216,29)" fg:x="539" fg:w="3"/><text x="8.2104%" y="863.50"></text></g><g><title>cfree (4 samples, 0.06%)</title><rect x="8.0047%" y="869" width="0.0591%" height="15" fill="rgb(230,116,27)" fg:x="542" fg:w="4"/><text x="8.2547%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="8.0638%" y="869" width="0.0295%" height="15" fill="rgb(228,99,48)" fg:x="546" fg:w="2"/><text x="8.3138%" y="879.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (4 samples, 0.06%)</title><rect x="8.0933%" y="869" width="0.0591%" height="15" fill="rgb(253,11,6)" fg:x="548" fg:w="4"/><text x="8.3433%" y="879.50"></text></g><g><title>csv_core::reader::Reader::read_record (37 samples, 0.55%)</title><rect x="8.1524%" y="869" width="0.5464%" height="15" fill="rgb(247,143,39)" fg:x="552" fg:w="37"/><text x="8.4024%" y="879.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="8.7136%" y="853" width="0.0148%" height="15" fill="rgb(236,97,10)" fg:x="590" fg:w="1"/><text x="8.9636%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="8.6989%" y="869" width="0.0443%" height="15" fill="rgb(233,208,19)" fg:x="589" fg:w="3"/><text x="8.9489%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="8.7284%" y="853" width="0.0148%" height="15" fill="rgb(216,164,2)" fg:x="591" fg:w="1"/><text x="8.9784%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="8.8022%" y="853" width="0.0148%" height="15" fill="rgb(220,129,5)" fg:x="596" fg:w="1"/><text x="9.0522%" y="863.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="8.8318%" y="837" width="0.0295%" height="15" fill="rgb(242,17,10)" fg:x="598" fg:w="2"/><text x="9.0818%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="8.8318%" y="821" width="0.0295%" height="15" fill="rgb(242,107,0)" fg:x="598" fg:w="2"/><text x="9.0818%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (17 samples, 0.25%)</title><rect x="8.7432%" y="869" width="0.2511%" height="15" fill="rgb(251,28,31)" fg:x="592" fg:w="17"/><text x="8.9932%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.18%)</title><rect x="8.8170%" y="853" width="0.1772%" height="15" fill="rgb(233,223,10)" fg:x="597" fg:w="12"/><text x="9.0670%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.13%)</title><rect x="8.8613%" y="837" width="0.1329%" height="15" fill="rgb(215,21,27)" fg:x="600" fg:w="9"/><text x="9.1113%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="8.9352%" y="821" width="0.0591%" height="15" fill="rgb(232,23,21)" fg:x="605" fg:w="4"/><text x="9.1852%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.06%)</title><rect x="9.0090%" y="805" width="0.0591%" height="15" fill="rgb(244,5,23)" fg:x="610" fg:w="4"/><text x="9.2590%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="9.0533%" y="789" width="0.0148%" height="15" fill="rgb(226,81,46)" fg:x="613" fg:w="1"/><text x="9.3033%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.12%)</title><rect x="8.9942%" y="853" width="0.1182%" height="15" fill="rgb(247,70,30)" fg:x="609" fg:w="8"/><text x="9.2442%" y="863.50"></text></g><g><title>xWord_generator::get_matching_words (8 samples, 0.12%)</title><rect x="8.9942%" y="837" width="0.1182%" height="15" fill="rgb(212,68,19)" fg:x="609" fg:w="8"/><text x="9.2442%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.12%)</title><rect x="8.9942%" y="821" width="0.1182%" height="15" fill="rgb(240,187,13)" fg:x="609" fg:w="8"/><text x="9.2442%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="9.0681%" y="805" width="0.0443%" height="15" fill="rgb(223,113,26)" fg:x="614" fg:w="3"/><text x="9.3181%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="9.0681%" y="789" width="0.0443%" height="15" fill="rgb(206,192,2)" fg:x="614" fg:w="3"/><text x="9.3181%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="9.0829%" y="773" width="0.0295%" height="15" fill="rgb(241,108,4)" fg:x="615" fg:w="2"/><text x="9.3329%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="9.1124%" y="725" width="0.0443%" height="15" fill="rgb(247,173,49)" fg:x="617" fg:w="3"/><text x="9.3624%" y="735.50"></text></g><g><title>xWord_generator::get_matching_words (3 samples, 0.04%)</title><rect x="9.1124%" y="709" width="0.0443%" height="15" fill="rgb(224,114,35)" fg:x="617" fg:w="3"/><text x="9.3624%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.04%)</title><rect x="9.1567%" y="709" width="0.0443%" height="15" fill="rgb(245,159,27)" fg:x="620" fg:w="3"/><text x="9.4067%" y="719.50"></text></g><g><title>xWord_generator::get_matching_words (3 samples, 0.04%)</title><rect x="9.1567%" y="693" width="0.0443%" height="15" fill="rgb(245,172,44)" fg:x="620" fg:w="3"/><text x="9.4067%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="9.1862%" y="677" width="0.0148%" height="15" fill="rgb(236,23,11)" fg:x="622" fg:w="1"/><text x="9.4362%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="9.1862%" y="661" width="0.0148%" height="15" fill="rgb(205,117,38)" fg:x="622" fg:w="1"/><text x="9.4362%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="9.2010%" y="693" width="0.0148%" height="15" fill="rgb(237,72,25)" fg:x="623" fg:w="1"/><text x="9.4510%" y="703.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="9.3635%" y="661" width="0.0148%" height="15" fill="rgb(244,70,9)" fg:x="634" fg:w="1"/><text x="9.6135%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.19%)</title><rect x="9.2158%" y="693" width="0.1920%" height="15" fill="rgb(217,125,39)" fg:x="624" fg:w="13"/><text x="9.4658%" y="703.50"></text></g><g><title>xWord_generator::get_matching_words (13 samples, 0.19%)</title><rect x="9.2158%" y="677" width="0.1920%" height="15" fill="rgb(235,36,10)" fg:x="624" fg:w="13"/><text x="9.4658%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.03%)</title><rect x="9.3782%" y="661" width="0.0295%" height="15" fill="rgb(251,123,47)" fg:x="635" fg:w="2"/><text x="9.6282%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="9.3782%" y="645" width="0.0295%" height="15" fill="rgb(221,13,13)" fg:x="635" fg:w="2"/><text x="9.6282%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="9.4078%" y="677" width="0.0148%" height="15" fill="rgb(238,131,9)" fg:x="637" fg:w="1"/><text x="9.6578%" y="687.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="9.8804%" y="645" width="0.0295%" height="15" fill="rgb(211,50,8)" fg:x="669" fg:w="2"/><text x="10.1304%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="9.9099%" y="645" width="0.0295%" height="15" fill="rgb(245,182,24)" fg:x="671" fg:w="2"/><text x="10.1599%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="9.9542%" y="629" width="0.0148%" height="15" fill="rgb(242,14,37)" fg:x="674" fg:w="1"/><text x="10.2042%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.59%)</title><rect x="9.4225%" y="677" width="0.5908%" height="15" fill="rgb(246,228,12)" fg:x="638" fg:w="40"/><text x="9.6725%" y="687.50"></text></g><g><title>xWord_generator::get_matching_words (38 samples, 0.56%)</title><rect x="9.4521%" y="661" width="0.5612%" height="15" fill="rgb(213,55,15)" fg:x="640" fg:w="38"/><text x="9.7021%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.07%)</title><rect x="9.9394%" y="645" width="0.0738%" height="15" fill="rgb(209,9,3)" fg:x="673" fg:w="5"/><text x="10.1894%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="9.9690%" y="629" width="0.0443%" height="15" fill="rgb(230,59,30)" fg:x="675" fg:w="3"/><text x="10.2190%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="9.9838%" y="613" width="0.0295%" height="15" fill="rgb(209,121,21)" fg:x="676" fg:w="2"/><text x="10.2338%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="9.9985%" y="597" width="0.0148%" height="15" fill="rgb(220,109,13)" fg:x="677" fg:w="1"/><text x="10.2485%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="10.0428%" y="661" width="0.0148%" height="15" fill="rgb(232,18,1)" fg:x="680" fg:w="1"/><text x="10.2928%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="10.0576%" y="645" width="0.0148%" height="15" fill="rgb(215,41,42)" fg:x="681" fg:w="1"/><text x="10.3076%" y="655.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="10.5154%" y="629" width="0.0148%" height="15" fill="rgb(224,123,36)" fg:x="712" fg:w="1"/><text x="10.7654%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (33 samples, 0.49%)</title><rect x="10.0576%" y="661" width="0.4874%" height="15" fill="rgb(240,125,3)" fg:x="681" fg:w="33"/><text x="10.3076%" y="671.50"></text></g><g><title>xWord_generator::get_matching_words (32 samples, 0.47%)</title><rect x="10.0724%" y="645" width="0.4726%" height="15" fill="rgb(205,98,50)" fg:x="682" fg:w="32"/><text x="10.3224%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="10.5302%" y="629" width="0.0148%" height="15" fill="rgb(205,185,37)" fg:x="713" fg:w="1"/><text x="10.7802%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="10.5893%" y="629" width="0.0295%" height="15" fill="rgb(238,207,15)" fg:x="717" fg:w="2"/><text x="10.8393%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="10.5893%" y="613" width="0.0295%" height="15" fill="rgb(213,199,42)" fg:x="717" fg:w="2"/><text x="10.8393%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="10.5893%" y="597" width="0.0295%" height="15" fill="rgb(235,201,11)" fg:x="717" fg:w="2"/><text x="10.8393%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="10.5893%" y="581" width="0.0295%" height="15" fill="rgb(207,46,11)" fg:x="717" fg:w="2"/><text x="10.8393%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="10.5893%" y="565" width="0.0295%" height="15" fill="rgb(241,35,35)" fg:x="717" fg:w="2"/><text x="10.8393%" y="575.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="10.5893%" y="549" width="0.0295%" height="15" fill="rgb(243,32,47)" fg:x="717" fg:w="2"/><text x="10.8393%" y="559.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="12.7012%" y="613" width="0.1182%" height="15" fill="rgb(247,202,23)" fg:x="860" fg:w="8"/><text x="12.9512%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="12.8194%" y="613" width="0.0148%" height="15" fill="rgb(219,102,11)" fg:x="868" fg:w="1"/><text x="13.0694%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="12.8194%" y="597" width="0.0148%" height="15" fill="rgb(243,110,44)" fg:x="868" fg:w="1"/><text x="13.0694%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="12.8194%" y="581" width="0.0148%" height="15" fill="rgb(222,74,54)" fg:x="868" fg:w="1"/><text x="13.0694%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="12.8194%" y="565" width="0.0148%" height="15" fill="rgb(216,99,12)" fg:x="868" fg:w="1"/><text x="13.0694%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="12.8341%" y="613" width="0.0443%" height="15" fill="rgb(226,22,26)" fg:x="869" fg:w="3"/><text x="13.0841%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="12.8489%" y="597" width="0.0295%" height="15" fill="rgb(217,163,10)" fg:x="870" fg:w="2"/><text x="13.0989%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (160 samples, 2.36%)</title><rect x="10.5745%" y="645" width="2.3630%" height="15" fill="rgb(213,25,53)" fg:x="716" fg:w="160"/><text x="10.8245%" y="655.50">&lt;c..</text></g><g><title>xWord_generator::get_matching_words (157 samples, 2.32%)</title><rect x="10.6188%" y="629" width="2.3187%" height="15" fill="rgb(252,105,26)" fg:x="719" fg:w="157"/><text x="10.8688%" y="639.50">x..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.06%)</title><rect x="12.8785%" y="613" width="0.0591%" height="15" fill="rgb(220,39,43)" fg:x="872" fg:w="4"/><text x="13.1285%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="12.8932%" y="597" width="0.0443%" height="15" fill="rgb(229,68,48)" fg:x="873" fg:w="3"/><text x="13.1432%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="12.9228%" y="581" width="0.0148%" height="15" fill="rgb(252,8,32)" fg:x="875" fg:w="1"/><text x="13.1728%" y="591.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="12.9375%" y="645" width="0.0295%" height="15" fill="rgb(223,20,43)" fg:x="876" fg:w="2"/><text x="13.1875%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="12.9671%" y="645" width="0.0148%" height="15" fill="rgb(229,81,49)" fg:x="878" fg:w="1"/><text x="13.2171%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="12.9671%" y="629" width="0.0148%" height="15" fill="rgb(236,28,36)" fg:x="878" fg:w="1"/><text x="13.2171%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="13.0261%" y="629" width="0.0148%" height="15" fill="rgb(249,185,26)" fg:x="882" fg:w="1"/><text x="13.2761%" y="639.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="13.0557%" y="613" width="0.0295%" height="15" fill="rgb(249,174,33)" fg:x="884" fg:w="2"/><text x="13.3057%" y="623.50"></text></g><g><title>xWord_generator::XWord::set_entry (2 samples, 0.03%)</title><rect x="13.0852%" y="613" width="0.0295%" height="15" fill="rgb(233,201,37)" fg:x="886" fg:w="2"/><text x="13.3352%" y="623.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.10%)</title><rect x="14.6507%" y="597" width="0.1034%" height="15" fill="rgb(221,78,26)" fg:x="992" fg:w="7"/><text x="14.9007%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="14.7541%" y="597" width="0.0738%" height="15" fill="rgb(250,127,30)" fg:x="999" fg:w="5"/><text x="15.0041%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="14.8132%" y="581" width="0.0148%" height="15" fill="rgb(230,49,44)" fg:x="1003" fg:w="1"/><text x="15.0632%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="14.8870%" y="581" width="0.0738%" height="15" fill="rgb(229,67,23)" fg:x="1008" fg:w="5"/><text x="15.1370%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (133 samples, 1.96%)</title><rect x="13.0409%" y="629" width="1.9643%" height="15" fill="rgb(249,83,47)" fg:x="883" fg:w="133"/><text x="13.2909%" y="639.50">&lt;..</text></g><g><title>xWord_generator::get_matching_words (128 samples, 1.89%)</title><rect x="13.1148%" y="613" width="1.8904%" height="15" fill="rgb(215,43,3)" fg:x="888" fg:w="128"/><text x="13.3648%" y="623.50">x..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 0.18%)</title><rect x="14.8279%" y="597" width="0.1772%" height="15" fill="rgb(238,154,13)" fg:x="1004" fg:w="12"/><text x="15.0779%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="14.9609%" y="581" width="0.0443%" height="15" fill="rgb(219,56,2)" fg:x="1013" fg:w="3"/><text x="15.2109%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="14.9756%" y="565" width="0.0295%" height="15" fill="rgb(233,0,4)" fg:x="1014" fg:w="2"/><text x="15.2256%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="14.9756%" y="549" width="0.0295%" height="15" fill="rgb(235,30,7)" fg:x="1014" fg:w="2"/><text x="15.2256%" y="559.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="15.0052%" y="629" width="0.0295%" height="15" fill="rgb(250,79,13)" fg:x="1016" fg:w="2"/><text x="15.2552%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="15.0347%" y="613" width="0.0148%" height="15" fill="rgb(211,146,34)" fg:x="1018" fg:w="1"/><text x="15.2847%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="15.0347%" y="597" width="0.0148%" height="15" fill="rgb(228,22,38)" fg:x="1018" fg:w="1"/><text x="15.2847%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="15.0347%" y="581" width="0.0148%" height="15" fill="rgb(235,168,5)" fg:x="1018" fg:w="1"/><text x="15.2847%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="15.0347%" y="565" width="0.0148%" height="15" fill="rgb(221,155,16)" fg:x="1018" fg:w="1"/><text x="15.2847%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="15.0347%" y="549" width="0.0148%" height="15" fill="rgb(215,215,53)" fg:x="1018" fg:w="1"/><text x="15.2847%" y="559.50"></text></g><g><title>xWord_generator::XWord::set_entry (2 samples, 0.03%)</title><rect x="15.0790%" y="597" width="0.0295%" height="15" fill="rgb(223,4,10)" fg:x="1021" fg:w="2"/><text x="15.3290%" y="607.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="16.6741%" y="581" width="0.1477%" height="15" fill="rgb(234,103,6)" fg:x="1129" fg:w="10"/><text x="16.9241%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="16.8217%" y="581" width="0.0295%" height="15" fill="rgb(227,97,0)" fg:x="1139" fg:w="2"/><text x="17.0717%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="16.8217%" y="565" width="0.0295%" height="15" fill="rgb(234,150,53)" fg:x="1139" fg:w="2"/><text x="17.0717%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="16.8365%" y="549" width="0.0148%" height="15" fill="rgb(228,201,54)" fg:x="1140" fg:w="1"/><text x="17.0865%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="16.8513%" y="581" width="0.0738%" height="15" fill="rgb(222,22,37)" fg:x="1141" fg:w="5"/><text x="17.1013%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="16.8808%" y="565" width="0.0443%" height="15" fill="rgb(237,53,32)" fg:x="1143" fg:w="3"/><text x="17.1308%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (128 samples, 1.89%)</title><rect x="15.0495%" y="613" width="1.8904%" height="15" fill="rgb(233,25,53)" fg:x="1019" fg:w="128"/><text x="15.2995%" y="623.50">&lt;..</text></g><g><title>xWord_generator::get_matching_words (124 samples, 1.83%)</title><rect x="15.1086%" y="597" width="1.8313%" height="15" fill="rgb(210,40,34)" fg:x="1023" fg:w="124"/><text x="15.3586%" y="607.50">x..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="16.9251%" y="581" width="0.0148%" height="15" fill="rgb(241,220,44)" fg:x="1146" fg:w="1"/><text x="17.1751%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="16.9399%" y="613" width="0.0148%" height="15" fill="rgb(235,28,35)" fg:x="1147" fg:w="1"/><text x="17.1899%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="17.0433%" y="597" width="0.0295%" height="15" fill="rgb(210,56,17)" fg:x="1154" fg:w="2"/><text x="17.2933%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="17.1762%" y="533" width="0.0148%" height="15" fill="rgb(224,130,29)" fg:x="1163" fg:w="1"/><text x="17.4262%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (6 samples, 0.09%)</title><rect x="17.1762%" y="581" width="0.0886%" height="15" fill="rgb(235,212,8)" fg:x="1163" fg:w="6"/><text x="17.4262%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.09%)</title><rect x="17.1762%" y="565" width="0.0886%" height="15" fill="rgb(223,33,50)" fg:x="1163" fg:w="6"/><text x="17.4262%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.09%)</title><rect x="17.1762%" y="549" width="0.0886%" height="15" fill="rgb(219,149,13)" fg:x="1163" fg:w="6"/><text x="17.4262%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.07%)</title><rect x="17.1910%" y="533" width="0.0738%" height="15" fill="rgb(250,156,29)" fg:x="1164" fg:w="5"/><text x="17.4410%" y="543.50"></text></g><g><title>__libc_malloc (4 samples, 0.06%)</title><rect x="17.2057%" y="517" width="0.0591%" height="15" fill="rgb(216,193,19)" fg:x="1165" fg:w="4"/><text x="17.4557%" y="527.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="17.2500%" y="501" width="0.0148%" height="15" fill="rgb(216,135,14)" fg:x="1168" fg:w="1"/><text x="17.5000%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="17.2648%" y="581" width="0.0148%" height="15" fill="rgb(241,47,5)" fg:x="1169" fg:w="1"/><text x="17.5148%" y="591.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="17.2796%" y="581" width="0.0148%" height="15" fill="rgb(233,42,35)" fg:x="1170" fg:w="1"/><text x="17.5296%" y="591.50"></text></g><g><title>xWord_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="17.2943%" y="581" width="0.0148%" height="15" fill="rgb(231,13,6)" fg:x="1171" fg:w="1"/><text x="17.5443%" y="591.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.16%)</title><rect x="23.0099%" y="565" width="0.1625%" height="15" fill="rgb(207,181,40)" fg:x="1558" fg:w="11"/><text x="23.2599%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="23.1871%" y="517" width="0.0148%" height="15" fill="rgb(254,173,49)" fg:x="1570" fg:w="1"/><text x="23.4371%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.07%)</title><rect x="23.1724%" y="533" width="0.0738%" height="15" fill="rgb(221,1,38)" fg:x="1569" fg:w="5"/><text x="23.4224%" y="543.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="23.2019%" y="517" width="0.0443%" height="15" fill="rgb(206,124,46)" fg:x="1571" fg:w="3"/><text x="23.4519%" y="527.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="23.2167%" y="501" width="0.0295%" height="15" fill="rgb(249,21,11)" fg:x="1572" fg:w="2"/><text x="23.4667%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="23.2314%" y="485" width="0.0148%" height="15" fill="rgb(222,201,40)" fg:x="1573" fg:w="1"/><text x="23.4814%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.09%)</title><rect x="23.1724%" y="565" width="0.0886%" height="15" fill="rgb(235,61,29)" fg:x="1569" fg:w="6"/><text x="23.4224%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.09%)</title><rect x="23.1724%" y="549" width="0.0886%" height="15" fill="rgb(219,207,3)" fg:x="1569" fg:w="6"/><text x="23.4224%" y="559.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="23.2462%" y="533" width="0.0148%" height="15" fill="rgb(222,56,46)" fg:x="1574" fg:w="1"/><text x="23.4962%" y="543.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="23.2462%" y="517" width="0.0148%" height="15" fill="rgb(239,76,54)" fg:x="1574" fg:w="1"/><text x="23.4962%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.18%)</title><rect x="23.2610%" y="565" width="0.1772%" height="15" fill="rgb(231,124,27)" fg:x="1575" fg:w="12"/><text x="23.5110%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.07%)</title><rect x="23.3643%" y="549" width="0.0738%" height="15" fill="rgb(249,195,6)" fg:x="1582" fg:w="5"/><text x="23.6143%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.10%)</title><rect x="23.4382%" y="549" width="0.1034%" height="15" fill="rgb(237,174,47)" fg:x="1587" fg:w="7"/><text x="23.6882%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="23.4973%" y="533" width="0.0443%" height="15" fill="rgb(206,201,31)" fg:x="1591" fg:w="3"/><text x="23.7473%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="23.5859%" y="533" width="0.0148%" height="15" fill="rgb(231,57,52)" fg:x="1597" fg:w="1"/><text x="23.8359%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (447 samples, 6.60%)</title><rect x="17.0728%" y="597" width="6.6017%" height="15" fill="rgb(248,177,22)" fg:x="1156" fg:w="447"/><text x="17.3228%" y="607.50">&lt;core::it..</text></g><g><title>xWord_generator::get_matching_words (431 samples, 6.37%)</title><rect x="17.3091%" y="581" width="6.3654%" height="15" fill="rgb(215,211,37)" fg:x="1172" fg:w="431"/><text x="17.5591%" y="591.50">xWord_ge..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (16 samples, 0.24%)</title><rect x="23.4382%" y="565" width="0.2363%" height="15" fill="rgb(241,128,51)" fg:x="1587" fg:w="16"/><text x="23.6882%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.13%)</title><rect x="23.5416%" y="549" width="0.1329%" height="15" fill="rgb(227,165,31)" fg:x="1594" fg:w="9"/><text x="23.7916%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="23.6006%" y="533" width="0.0738%" height="15" fill="rgb(228,167,24)" fg:x="1598" fg:w="5"/><text x="23.8506%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="23.6302%" y="517" width="0.0443%" height="15" fill="rgb(228,143,12)" fg:x="1600" fg:w="3"/><text x="23.8802%" y="527.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="23.6745%" y="597" width="0.0148%" height="15" fill="rgb(249,149,8)" fg:x="1603" fg:w="1"/><text x="23.9245%" y="607.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="23.6893%" y="597" width="0.0148%" height="15" fill="rgb(243,35,44)" fg:x="1604" fg:w="1"/><text x="23.9393%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="23.7040%" y="597" width="0.0148%" height="15" fill="rgb(246,89,9)" fg:x="1605" fg:w="1"/><text x="23.9540%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (8 samples, 0.12%)</title><rect x="23.8517%" y="581" width="0.1182%" height="15" fill="rgb(233,213,13)" fg:x="1615" fg:w="8"/><text x="24.1017%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="23.9403%" y="565" width="0.0295%" height="15" fill="rgb(233,141,41)" fg:x="1621" fg:w="2"/><text x="24.1903%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="23.9403%" y="549" width="0.0295%" height="15" fill="rgb(239,167,4)" fg:x="1621" fg:w="2"/><text x="24.1903%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="23.9551%" y="533" width="0.0148%" height="15" fill="rgb(209,217,16)" fg:x="1622" fg:w="1"/><text x="24.2051%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="23.9551%" y="517" width="0.0148%" height="15" fill="rgb(219,88,35)" fg:x="1622" fg:w="1"/><text x="24.2051%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (10 samples, 0.15%)</title><rect x="24.2357%" y="565" width="0.1477%" height="15" fill="rgb(220,193,23)" fg:x="1641" fg:w="10"/><text x="24.4857%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="24.3539%" y="549" width="0.0295%" height="15" fill="rgb(230,90,52)" fg:x="1649" fg:w="2"/><text x="24.6039%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="24.3539%" y="533" width="0.0295%" height="15" fill="rgb(252,106,19)" fg:x="1649" fg:w="2"/><text x="24.6039%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="24.3539%" y="517" width="0.0295%" height="15" fill="rgb(206,74,20)" fg:x="1649" fg:w="2"/><text x="24.6039%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="24.3686%" y="501" width="0.0148%" height="15" fill="rgb(230,138,44)" fg:x="1650" fg:w="1"/><text x="24.6186%" y="511.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="24.3834%" y="565" width="0.0295%" height="15" fill="rgb(235,182,43)" fg:x="1651" fg:w="2"/><text x="24.6334%" y="575.50"></text></g><g><title>xWord_generator::XWord::set_entry (2 samples, 0.03%)</title><rect x="24.4129%" y="565" width="0.0295%" height="15" fill="rgb(242,16,51)" fg:x="1653" fg:w="2"/><text x="24.6629%" y="575.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.40%)</title><rect x="39.0193%" y="549" width="0.3988%" height="15" fill="rgb(248,9,4)" fg:x="2642" fg:w="27"/><text x="39.2693%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.04%)</title><rect x="39.4181%" y="549" width="0.0443%" height="15" fill="rgb(210,31,22)" fg:x="2669" fg:w="3"/><text x="39.6681%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="39.4181%" y="533" width="0.0443%" height="15" fill="rgb(239,54,39)" fg:x="2669" fg:w="3"/><text x="39.6681%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="39.4329%" y="517" width="0.0295%" height="15" fill="rgb(230,99,41)" fg:x="2670" fg:w="2"/><text x="39.6829%" y="527.50"></text></g><g><title>realloc (2 samples, 0.03%)</title><rect x="39.4329%" y="501" width="0.0295%" height="15" fill="rgb(253,106,12)" fg:x="2670" fg:w="2"/><text x="39.6829%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="39.4476%" y="485" width="0.0148%" height="15" fill="rgb(213,46,41)" fg:x="2671" fg:w="1"/><text x="39.6976%" y="495.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="39.4624%" y="549" width="0.0148%" height="15" fill="rgb(215,133,35)" fg:x="2672" fg:w="1"/><text x="39.7124%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (43 samples, 0.64%)</title><rect x="39.4772%" y="549" width="0.6351%" height="15" fill="rgb(213,28,5)" fg:x="2673" fg:w="43"/><text x="39.7272%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.15%)</title><rect x="39.9646%" y="533" width="0.1477%" height="15" fill="rgb(215,77,49)" fg:x="2706" fg:w="10"/><text x="40.2146%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.22%)</title><rect x="40.2304%" y="533" width="0.2215%" height="15" fill="rgb(248,100,22)" fg:x="2724" fg:w="15"/><text x="40.4804%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.13%)</title><rect x="40.3190%" y="517" width="0.1329%" height="15" fill="rgb(208,67,9)" fg:x="2730" fg:w="9"/><text x="40.5690%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="40.5258%" y="517" width="0.0295%" height="15" fill="rgb(219,133,21)" fg:x="2744" fg:w="2"/><text x="40.7758%" y="527.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="40.5553%" y="517" width="0.0148%" height="15" fill="rgb(246,46,29)" fg:x="2746" fg:w="1"/><text x="40.8053%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,129 samples, 16.67%)</title><rect x="23.9699%" y="581" width="16.6741%" height="15" fill="rgb(246,185,52)" fg:x="1623" fg:w="1129"/><text x="24.2199%" y="591.50">&lt;core::iter::adapters::map..</text></g><g><title>xWord_generator::get_matching_words (1,097 samples, 16.20%)</title><rect x="24.4425%" y="565" width="16.2014%" height="15" fill="rgb(252,136,11)" fg:x="1655" fg:w="1097"/><text x="24.6925%" y="575.50">xWord_generator::get_matc..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (36 samples, 0.53%)</title><rect x="40.1122%" y="549" width="0.5317%" height="15" fill="rgb(219,138,53)" fg:x="2716" fg:w="36"/><text x="40.3622%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.19%)</title><rect x="40.4519%" y="533" width="0.1920%" height="15" fill="rgb(211,51,23)" fg:x="2739" fg:w="13"/><text x="40.7019%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="40.5701%" y="517" width="0.0738%" height="15" fill="rgb(247,221,28)" fg:x="2747" fg:w="5"/><text x="40.8201%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="40.6292%" y="501" width="0.0148%" height="15" fill="rgb(251,222,45)" fg:x="2751" fg:w="1"/><text x="40.8792%" y="511.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="40.6439%" y="581" width="0.1182%" height="15" fill="rgb(217,162,53)" fg:x="2752" fg:w="8"/><text x="40.8939%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="40.7621%" y="581" width="0.0148%" height="15" fill="rgb(229,93,14)" fg:x="2760" fg:w="1"/><text x="41.0121%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="40.7621%" y="565" width="0.0148%" height="15" fill="rgb(209,67,49)" fg:x="2760" fg:w="1"/><text x="41.0121%" y="575.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="40.7621%" y="549" width="0.0148%" height="15" fill="rgb(213,87,29)" fg:x="2760" fg:w="1"/><text x="41.0121%" y="559.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="40.7621%" y="533" width="0.0148%" height="15" fill="rgb(205,151,52)" fg:x="2760" fg:w="1"/><text x="41.0121%" y="543.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="40.7621%" y="517" width="0.0148%" height="15" fill="rgb(253,215,39)" fg:x="2760" fg:w="1"/><text x="41.0121%" y="527.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="40.7768%" y="581" width="0.0295%" height="15" fill="rgb(221,220,41)" fg:x="2761" fg:w="2"/><text x="41.0268%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="40.8064%" y="581" width="0.0443%" height="15" fill="rgb(218,133,21)" fg:x="2763" fg:w="3"/><text x="41.0564%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="40.8211%" y="565" width="0.0295%" height="15" fill="rgb(221,193,43)" fg:x="2764" fg:w="2"/><text x="41.0711%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.03%)</title><rect x="40.8507%" y="581" width="0.0295%" height="15" fill="rgb(240,128,52)" fg:x="2766" fg:w="2"/><text x="41.1007%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="40.8655%" y="565" width="0.0148%" height="15" fill="rgb(253,114,12)" fg:x="2767" fg:w="1"/><text x="41.1155%" y="575.50"></text></g><g><title>xWord_generator::XWord::set_entry (2 samples, 0.03%)</title><rect x="40.8802%" y="581" width="0.0295%" height="15" fill="rgb(215,223,47)" fg:x="2768" fg:w="2"/><text x="41.1302%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="41.2938%" y="517" width="0.0148%" height="15" fill="rgb(248,225,23)" fg:x="2796" fg:w="1"/><text x="41.5438%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (10 samples, 0.15%)</title><rect x="41.2051%" y="565" width="0.1477%" height="15" fill="rgb(250,108,0)" fg:x="2790" fg:w="10"/><text x="41.4551%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="41.2938%" y="549" width="0.0591%" height="15" fill="rgb(228,208,7)" fg:x="2796" fg:w="4"/><text x="41.5438%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.06%)</title><rect x="41.2938%" y="533" width="0.0591%" height="15" fill="rgb(244,45,10)" fg:x="2796" fg:w="4"/><text x="41.5438%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="41.3085%" y="517" width="0.0443%" height="15" fill="rgb(207,125,25)" fg:x="2797" fg:w="3"/><text x="41.5585%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="41.3381%" y="501" width="0.0148%" height="15" fill="rgb(210,195,18)" fg:x="2799" fg:w="1"/><text x="41.5881%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="41.5891%" y="501" width="0.0148%" height="15" fill="rgb(249,80,12)" fg:x="2816" fg:w="1"/><text x="41.8391%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (7 samples, 0.10%)</title><rect x="41.5301%" y="549" width="0.1034%" height="15" fill="rgb(221,65,9)" fg:x="2812" fg:w="7"/><text x="41.7801%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="41.5891%" y="533" width="0.0443%" height="15" fill="rgb(235,49,36)" fg:x="2816" fg:w="3"/><text x="41.8391%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="41.5891%" y="517" width="0.0443%" height="15" fill="rgb(225,32,20)" fg:x="2816" fg:w="3"/><text x="41.8391%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="41.6039%" y="501" width="0.0295%" height="15" fill="rgb(215,141,46)" fg:x="2817" fg:w="2"/><text x="41.8539%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="41.6187%" y="485" width="0.0148%" height="15" fill="rgb(250,160,47)" fg:x="2818" fg:w="1"/><text x="41.8687%" y="495.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="41.6187%" y="469" width="0.0148%" height="15" fill="rgb(216,222,40)" fg:x="2818" fg:w="1"/><text x="41.8687%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="41.6334%" y="549" width="0.0148%" height="15" fill="rgb(234,217,39)" fg:x="2819" fg:w="1"/><text x="41.8834%" y="559.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="41.6482%" y="549" width="0.0148%" height="15" fill="rgb(207,178,40)" fg:x="2820" fg:w="1"/><text x="41.8982%" y="559.50"></text></g><g><title>xWord_generator::XWord::set_entry (4 samples, 0.06%)</title><rect x="41.6630%" y="549" width="0.0591%" height="15" fill="rgb(221,136,13)" fg:x="2821" fg:w="4"/><text x="41.9130%" y="559.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.47%)</title><rect x="54.8073%" y="533" width="0.4726%" height="15" fill="rgb(249,199,10)" fg:x="3711" fg:w="32"/><text x="55.0573%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="55.2946%" y="501" width="0.0443%" height="15" fill="rgb(249,222,13)" fg:x="3744" fg:w="3"/><text x="55.5446%" y="511.50"></text></g><g><title>realloc (2 samples, 0.03%)</title><rect x="55.3094%" y="485" width="0.0295%" height="15" fill="rgb(244,185,38)" fg:x="3745" fg:w="2"/><text x="55.5594%" y="495.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="55.3094%" y="469" width="0.0295%" height="15" fill="rgb(236,202,9)" fg:x="3745" fg:w="2"/><text x="55.5594%" y="479.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.3242%" y="453" width="0.0148%" height="15" fill="rgb(250,229,37)" fg:x="3746" fg:w="1"/><text x="55.5742%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.07%)</title><rect x="55.2799%" y="533" width="0.0738%" height="15" fill="rgb(206,174,23)" fg:x="3743" fg:w="5"/><text x="55.5299%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.07%)</title><rect x="55.2799%" y="517" width="0.0738%" height="15" fill="rgb(211,33,43)" fg:x="3743" fg:w="5"/><text x="55.5299%" y="527.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="55.3389%" y="501" width="0.0148%" height="15" fill="rgb(245,58,50)" fg:x="3747" fg:w="1"/><text x="55.5889%" y="511.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="55.3389%" y="485" width="0.0148%" height="15" fill="rgb(244,68,36)" fg:x="3747" fg:w="1"/><text x="55.5889%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.53%)</title><rect x="55.3537%" y="533" width="0.5317%" height="15" fill="rgb(232,229,15)" fg:x="3748" fg:w="36"/><text x="55.6037%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.18%)</title><rect x="55.7082%" y="517" width="0.1772%" height="15" fill="rgb(254,30,23)" fg:x="3772" fg:w="12"/><text x="55.9582%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.13%)</title><rect x="56.0035%" y="517" width="0.1329%" height="15" fill="rgb(235,160,14)" fg:x="3792" fg:w="9"/><text x="56.2535%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="56.0922%" y="501" width="0.0443%" height="15" fill="rgb(212,155,44)" fg:x="3798" fg:w="3"/><text x="56.3422%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.07%)</title><rect x="56.1512%" y="501" width="0.0738%" height="15" fill="rgb(226,2,50)" fg:x="3802" fg:w="5"/><text x="56.4012%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,011 samples, 14.93%)</title><rect x="41.3528%" y="565" width="14.9313%" height="15" fill="rgb(234,177,6)" fg:x="2800" fg:w="1011"/><text x="41.6028%" y="575.50">&lt;core::iter::adapters::..</text></g><g><title>xWord_generator::get_matching_words (986 samples, 14.56%)</title><rect x="41.7220%" y="549" width="14.5621%" height="15" fill="rgb(217,24,9)" fg:x="2825" fg:w="986"/><text x="41.9720%" y="559.50">xWord_generator::get_m..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (27 samples, 0.40%)</title><rect x="55.8854%" y="533" width="0.3988%" height="15" fill="rgb(220,13,46)" fg:x="3784" fg:w="27"/><text x="56.1354%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.15%)</title><rect x="56.1365%" y="517" width="0.1477%" height="15" fill="rgb(239,221,27)" fg:x="3801" fg:w="10"/><text x="56.3865%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.06%)</title><rect x="56.2251%" y="501" width="0.0591%" height="15" fill="rgb(222,198,25)" fg:x="3807" fg:w="4"/><text x="56.4751%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="56.2546%" y="485" width="0.0295%" height="15" fill="rgb(211,99,13)" fg:x="3809" fg:w="2"/><text x="56.5046%" y="495.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="56.2842%" y="565" width="0.0886%" height="15" fill="rgb(232,111,31)" fg:x="3811" fg:w="6"/><text x="56.5342%" y="575.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="56.3728%" y="565" width="0.0148%" height="15" fill="rgb(245,82,37)" fg:x="3817" fg:w="1"/><text x="56.6228%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.16%)</title><rect x="56.3875%" y="565" width="0.1625%" height="15" fill="rgb(227,149,46)" fg:x="3818" fg:w="11"/><text x="56.6375%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.09%)</title><rect x="56.4614%" y="549" width="0.0886%" height="15" fill="rgb(218,36,50)" fg:x="3823" fg:w="6"/><text x="56.7114%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.06%)</title><rect x="56.5500%" y="565" width="0.0591%" height="15" fill="rgb(226,80,48)" fg:x="3829" fg:w="4"/><text x="56.8000%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="56.5795%" y="549" width="0.0295%" height="15" fill="rgb(238,224,15)" fg:x="3831" fg:w="2"/><text x="56.8295%" y="559.50"></text></g><g><title>xWord_generator::XWord::set_entry (4 samples, 0.06%)</title><rect x="56.6091%" y="565" width="0.0591%" height="15" fill="rgb(241,136,10)" fg:x="3833" fg:w="4"/><text x="56.8591%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (18 samples, 0.27%)</title><rect x="56.8897%" y="549" width="0.2658%" height="15" fill="rgb(208,32,45)" fg:x="3852" fg:w="18"/><text x="57.1397%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.06%)</title><rect x="57.0964%" y="533" width="0.0591%" height="15" fill="rgb(207,135,9)" fg:x="3866" fg:w="4"/><text x="57.3464%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.06%)</title><rect x="57.0964%" y="517" width="0.0591%" height="15" fill="rgb(206,86,44)" fg:x="3866" fg:w="4"/><text x="57.3464%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="57.1112%" y="501" width="0.0443%" height="15" fill="rgb(245,177,15)" fg:x="3867" fg:w="3"/><text x="57.3612%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (10 samples, 0.15%)</title><rect x="57.3180%" y="533" width="0.1477%" height="15" fill="rgb(206,64,50)" fg:x="3881" fg:w="10"/><text x="57.5680%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="57.4509%" y="517" width="0.0148%" height="15" fill="rgb(234,36,40)" fg:x="3890" fg:w="1"/><text x="57.7009%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="57.4509%" y="501" width="0.0148%" height="15" fill="rgb(213,64,8)" fg:x="3890" fg:w="1"/><text x="57.7009%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="57.4509%" y="485" width="0.0148%" height="15" fill="rgb(210,75,36)" fg:x="3890" fg:w="1"/><text x="57.7009%" y="495.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="57.4657%" y="533" width="0.0443%" height="15" fill="rgb(229,88,21)" fg:x="3891" fg:w="3"/><text x="57.7157%" y="543.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="57.5100%" y="533" width="0.0295%" height="15" fill="rgb(252,204,47)" fg:x="3894" fg:w="2"/><text x="57.7600%" y="543.50"></text></g><g><title>xWord_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="57.5395%" y="533" width="0.0148%" height="15" fill="rgb(208,77,27)" fg:x="3896" fg:w="1"/><text x="57.7895%" y="543.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.53%)</title><rect x="69.0297%" y="517" width="0.5317%" height="15" fill="rgb(221,76,26)" fg:x="4674" fg:w="36"/><text x="69.2797%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="69.5614%" y="469" width="0.0295%" height="15" fill="rgb(225,139,18)" fg:x="4710" fg:w="2"/><text x="69.8114%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.09%)</title><rect x="69.5614%" y="517" width="0.0886%" height="15" fill="rgb(230,137,11)" fg:x="4710" fg:w="6"/><text x="69.8114%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.09%)</title><rect x="69.5614%" y="501" width="0.0886%" height="15" fill="rgb(212,28,1)" fg:x="4710" fg:w="6"/><text x="69.8114%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.09%)</title><rect x="69.5614%" y="485" width="0.0886%" height="15" fill="rgb(248,164,17)" fg:x="4710" fg:w="6"/><text x="69.8114%" y="495.50"></text></g><g><title>realloc (4 samples, 0.06%)</title><rect x="69.5909%" y="469" width="0.0591%" height="15" fill="rgb(222,171,42)" fg:x="4712" fg:w="4"/><text x="69.8409%" y="479.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="69.5909%" y="453" width="0.0591%" height="15" fill="rgb(243,84,45)" fg:x="4712" fg:w="4"/><text x="69.8409%" y="463.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="69.6204%" y="437" width="0.0295%" height="15" fill="rgb(252,49,23)" fg:x="4714" fg:w="2"/><text x="69.8704%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (40 samples, 0.59%)</title><rect x="69.6500%" y="517" width="0.5908%" height="15" fill="rgb(215,19,7)" fg:x="4716" fg:w="40"/><text x="69.9000%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.25%)</title><rect x="69.9897%" y="501" width="0.2511%" height="15" fill="rgb(238,81,41)" fg:x="4739" fg:w="17"/><text x="70.2397%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.12%)</title><rect x="70.3293%" y="501" width="0.1182%" height="15" fill="rgb(210,199,37)" fg:x="4762" fg:w="8"/><text x="70.5793%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.06%)</title><rect x="70.3884%" y="485" width="0.0591%" height="15" fill="rgb(244,192,49)" fg:x="4766" fg:w="4"/><text x="70.6384%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (905 samples, 13.37%)</title><rect x="57.1555%" y="549" width="13.3658%" height="15" fill="rgb(226,211,11)" fg:x="3870" fg:w="905"/><text x="57.4055%" y="559.50">&lt;core::iter::adapter..</text></g><g><title>xWord_generator::get_matching_words (878 samples, 12.97%)</title><rect x="57.5543%" y="533" width="12.9671%" height="15" fill="rgb(236,162,54)" fg:x="3897" fg:w="878"/><text x="57.8043%" y="543.50">xWord_generator::ge..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (19 samples, 0.28%)</title><rect x="70.2407%" y="517" width="0.2806%" height="15" fill="rgb(220,229,9)" fg:x="4756" fg:w="19"/><text x="70.4907%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.07%)</title><rect x="70.4475%" y="501" width="0.0738%" height="15" fill="rgb(250,87,22)" fg:x="4770" fg:w="5"/><text x="70.6975%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="70.4918%" y="485" width="0.0295%" height="15" fill="rgb(239,43,17)" fg:x="4773" fg:w="2"/><text x="70.7418%" y="495.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="70.5213%" y="549" width="0.0591%" height="15" fill="rgb(231,177,25)" fg:x="4775" fg:w="4"/><text x="70.7713%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="70.5804%" y="549" width="0.0295%" height="15" fill="rgb(219,179,1)" fg:x="4779" fg:w="2"/><text x="70.8304%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="70.6100%" y="549" width="0.0148%" height="15" fill="rgb(238,219,53)" fg:x="4781" fg:w="1"/><text x="70.8600%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="70.6100%" y="533" width="0.0148%" height="15" fill="rgb(232,167,36)" fg:x="4781" fg:w="1"/><text x="70.8600%" y="543.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.07%)</title><rect x="70.6543%" y="277" width="0.0738%" height="15" fill="rgb(244,19,51)" fg:x="4784" fg:w="5"/><text x="70.9043%" y="287.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="70.6543%" y="261" width="0.0738%" height="15" fill="rgb(224,6,22)" fg:x="4784" fg:w="5"/><text x="70.9043%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.03%)</title><rect x="70.6986%" y="245" width="0.0295%" height="15" fill="rgb(224,145,5)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.03%)</title><rect x="70.6986%" y="229" width="0.0295%" height="15" fill="rgb(234,130,49)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="239.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="70.6986%" y="213" width="0.0295%" height="15" fill="rgb(254,6,2)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="223.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="70.6986%" y="197" width="0.0295%" height="15" fill="rgb(208,96,46)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="207.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="70.6986%" y="181" width="0.0295%" height="15" fill="rgb(239,3,39)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="191.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="70.6986%" y="165" width="0.0295%" height="15" fill="rgb(233,210,1)" fg:x="4787" fg:w="2"/><text x="70.9486%" y="175.50"></text></g><g><title>&lt;core::char::EscapeDebug as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="70.7281%" y="197" width="0.0295%" height="15" fill="rgb(244,137,37)" fg:x="4789" fg:w="2"/><text x="70.9781%" y="207.50"></text></g><g><title>&lt;core::char::EscapeDefault as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="70.7281%" y="181" width="0.0295%" height="15" fill="rgb(240,136,2)" fg:x="4789" fg:w="2"/><text x="70.9781%" y="191.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.01%)</title><rect x="70.7872%" y="85" width="0.0148%" height="15" fill="rgb(239,18,37)" fg:x="4793" fg:w="1"/><text x="71.0372%" y="95.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (2 samples, 0.03%)</title><rect x="70.7872%" y="101" width="0.0295%" height="15" fill="rgb(218,185,22)" fg:x="4793" fg:w="2"/><text x="71.0372%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.01%)</title><rect x="70.8019%" y="85" width="0.0148%" height="15" fill="rgb(225,218,4)" fg:x="4794" fg:w="1"/><text x="71.0519%" y="95.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 0.16%)</title><rect x="70.7872%" y="133" width="0.1625%" height="15" fill="rgb(230,182,32)" fg:x="4793" fg:w="11"/><text x="71.0372%" y="143.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 0.16%)</title><rect x="70.7872%" y="117" width="0.1625%" height="15" fill="rgb(242,56,43)" fg:x="4793" fg:w="11"/><text x="71.0372%" y="127.50"></text></g><g><title>std::sys_common::memchr::memrchr (9 samples, 0.13%)</title><rect x="70.8167%" y="101" width="0.1329%" height="15" fill="rgb(233,99,24)" fg:x="4795" fg:w="9"/><text x="71.0667%" y="111.50"></text></g><g><title>std::sys::unix::memchr::memrchr (9 samples, 0.13%)</title><rect x="70.8167%" y="85" width="0.1329%" height="15" fill="rgb(234,209,42)" fg:x="4795" fg:w="9"/><text x="71.0667%" y="95.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (9 samples, 0.13%)</title><rect x="70.8167%" y="69" width="0.1329%" height="15" fill="rgb(227,7,12)" fg:x="4795" fg:w="9"/><text x="71.0667%" y="79.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.10%)</title><rect x="70.8463%" y="53" width="0.1034%" height="15" fill="rgb(245,203,43)" fg:x="4797" fg:w="7"/><text x="71.0963%" y="63.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (15 samples, 0.22%)</title><rect x="70.7576%" y="197" width="0.2215%" height="15" fill="rgb(238,205,33)" fg:x="4791" fg:w="15"/><text x="71.0076%" y="207.50"></text></g><g><title>core::fmt::Write::write_char (14 samples, 0.21%)</title><rect x="70.7724%" y="181" width="0.2068%" height="15" fill="rgb(231,56,7)" fg:x="4792" fg:w="14"/><text x="71.0224%" y="191.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (14 samples, 0.21%)</title><rect x="70.7724%" y="165" width="0.2068%" height="15" fill="rgb(244,186,29)" fg:x="4792" fg:w="14"/><text x="71.0224%" y="175.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (14 samples, 0.21%)</title><rect x="70.7724%" y="149" width="0.2068%" height="15" fill="rgb(234,111,31)" fg:x="4792" fg:w="14"/><text x="71.0224%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="70.9496%" y="133" width="0.0295%" height="15" fill="rgb(241,149,10)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.03%)</title><rect x="70.9496%" y="117" width="0.0295%" height="15" fill="rgb(249,206,44)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="127.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="70.9496%" y="101" width="0.0295%" height="15" fill="rgb(251,153,30)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="111.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.03%)</title><rect x="70.9496%" y="85" width="0.0295%" height="15" fill="rgb(239,152,38)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="95.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.03%)</title><rect x="70.9496%" y="69" width="0.0295%" height="15" fill="rgb(249,139,47)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="79.50"></text></g><g><title>core::mem::replace (2 samples, 0.03%)</title><rect x="70.9496%" y="53" width="0.0295%" height="15" fill="rgb(244,64,35)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="63.50"></text></g><g><title>core::ptr::write (2 samples, 0.03%)</title><rect x="70.9496%" y="37" width="0.0295%" height="15" fill="rgb(216,46,15)" fg:x="4804" fg:w="2"/><text x="71.1996%" y="47.50"></text></g><g><title>&lt;char as core::fmt::Debug&gt;::fmt (21 samples, 0.31%)</title><rect x="70.7281%" y="213" width="0.3101%" height="15" fill="rgb(250,74,19)" fg:x="4789" fg:w="21"/><text x="70.9781%" y="223.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (4 samples, 0.06%)</title><rect x="70.9792%" y="197" width="0.0591%" height="15" fill="rgb(249,42,33)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (4 samples, 0.06%)</title><rect x="70.9792%" y="181" width="0.0591%" height="15" fill="rgb(242,149,17)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="191.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (4 samples, 0.06%)</title><rect x="70.9792%" y="165" width="0.0591%" height="15" fill="rgb(244,29,21)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="175.50"></text></g><g><title>core::unicode::unicode_data::skip_search (4 samples, 0.06%)</title><rect x="70.9792%" y="149" width="0.0591%" height="15" fill="rgb(220,130,37)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (4 samples, 0.06%)</title><rect x="70.9792%" y="133" width="0.0591%" height="15" fill="rgb(211,67,2)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4 samples, 0.06%)</title><rect x="70.9792%" y="117" width="0.0591%" height="15" fill="rgb(235,68,52)" fg:x="4806" fg:w="4"/><text x="71.2292%" y="127.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.03%)</title><rect x="71.0530%" y="133" width="0.0295%" height="15" fill="rgb(246,142,3)" fg:x="4811" fg:w="2"/><text x="71.3030%" y="143.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2 samples, 0.03%)</title><rect x="71.0530%" y="117" width="0.0295%" height="15" fill="rgb(241,25,7)" fg:x="4811" fg:w="2"/><text x="71.3030%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="71.0678%" y="101" width="0.0148%" height="15" fill="rgb(242,119,39)" fg:x="4812" fg:w="1"/><text x="71.3178%" y="111.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="71.0678%" y="85" width="0.0148%" height="15" fill="rgb(241,98,45)" fg:x="4812" fg:w="1"/><text x="71.3178%" y="95.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.01%)</title><rect x="71.0826%" y="133" width="0.0148%" height="15" fill="rgb(254,28,30)" fg:x="4813" fg:w="1"/><text x="71.3326%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.01%)</title><rect x="71.0826%" y="117" width="0.0148%" height="15" fill="rgb(241,142,54)" fg:x="4813" fg:w="1"/><text x="71.3326%" y="127.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="71.0530%" y="165" width="0.0738%" height="15" fill="rgb(222,85,15)" fg:x="4811" fg:w="5"/><text x="71.3030%" y="175.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="71.0530%" y="149" width="0.0738%" height="15" fill="rgb(210,85,47)" fg:x="4811" fg:w="5"/><text x="71.3030%" y="159.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="71.0973%" y="133" width="0.0295%" height="15" fill="rgb(224,206,25)" fg:x="4814" fg:w="2"/><text x="71.3473%" y="143.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="71.0973%" y="117" width="0.0295%" height="15" fill="rgb(243,201,19)" fg:x="4814" fg:w="2"/><text x="71.3473%" y="127.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="71.0973%" y="101" width="0.0295%" height="15" fill="rgb(236,59,4)" fg:x="4814" fg:w="2"/><text x="71.3473%" y="111.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="71.0973%" y="85" width="0.0295%" height="15" fill="rgb(254,179,45)" fg:x="4814" fg:w="2"/><text x="71.3473%" y="95.50"></text></g><g><title>core::fmt::Formatter::write_str (7 samples, 0.10%)</title><rect x="71.0383%" y="213" width="0.1034%" height="15" fill="rgb(226,14,10)" fg:x="4810" fg:w="7"/><text x="71.2883%" y="223.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.10%)</title><rect x="71.0383%" y="197" width="0.1034%" height="15" fill="rgb(244,27,41)" fg:x="4810" fg:w="7"/><text x="71.2883%" y="207.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.10%)</title><rect x="71.0383%" y="181" width="0.1034%" height="15" fill="rgb(235,35,32)" fg:x="4810" fg:w="7"/><text x="71.2883%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="71.1269%" y="165" width="0.0148%" height="15" fill="rgb(218,68,31)" fg:x="4816" fg:w="1"/><text x="71.3769%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="71.1269%" y="149" width="0.0148%" height="15" fill="rgb(207,120,37)" fg:x="4816" fg:w="1"/><text x="71.3769%" y="159.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.1416%" y="133" width="0.0148%" height="15" fill="rgb(227,98,0)" fg:x="4817" fg:w="1"/><text x="71.3916%" y="143.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.01%)</title><rect x="71.1564%" y="133" width="0.0148%" height="15" fill="rgb(207,7,3)" fg:x="4818" fg:w="1"/><text x="71.4064%" y="143.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.01%)</title><rect x="71.1564%" y="117" width="0.0148%" height="15" fill="rgb(206,98,19)" fg:x="4818" fg:w="1"/><text x="71.4064%" y="127.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (36 samples, 0.53%)</title><rect x="70.6543%" y="357" width="0.5317%" height="15" fill="rgb(217,5,26)" fg:x="4784" fg:w="36"/><text x="70.9043%" y="367.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (36 samples, 0.53%)</title><rect x="70.6543%" y="341" width="0.5317%" height="15" fill="rgb(235,190,38)" fg:x="4784" fg:w="36"/><text x="70.9043%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (36 samples, 0.53%)</title><rect x="70.6543%" y="325" width="0.5317%" height="15" fill="rgb(247,86,24)" fg:x="4784" fg:w="36"/><text x="70.9043%" y="335.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (36 samples, 0.53%)</title><rect x="70.6543%" y="309" width="0.5317%" height="15" fill="rgb(205,101,16)" fg:x="4784" fg:w="36"/><text x="70.9043%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (36 samples, 0.53%)</title><rect x="70.6543%" y="293" width="0.5317%" height="15" fill="rgb(246,168,33)" fg:x="4784" fg:w="36"/><text x="70.9043%" y="303.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (31 samples, 0.46%)</title><rect x="70.7281%" y="277" width="0.4578%" height="15" fill="rgb(231,114,1)" fg:x="4789" fg:w="31"/><text x="70.9781%" y="287.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (31 samples, 0.46%)</title><rect x="70.7281%" y="261" width="0.4578%" height="15" fill="rgb(207,184,53)" fg:x="4789" fg:w="31"/><text x="70.9781%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (31 samples, 0.46%)</title><rect x="70.7281%" y="245" width="0.4578%" height="15" fill="rgb(224,95,51)" fg:x="4789" fg:w="31"/><text x="70.9781%" y="255.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (31 samples, 0.46%)</title><rect x="70.7281%" y="229" width="0.4578%" height="15" fill="rgb(212,188,45)" fg:x="4789" fg:w="31"/><text x="70.9781%" y="239.50"></text></g><g><title>core::fmt::Write::write_char (3 samples, 0.04%)</title><rect x="71.1416%" y="213" width="0.0443%" height="15" fill="rgb(223,154,38)" fg:x="4817" fg:w="3"/><text x="71.3916%" y="223.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="71.1416%" y="197" width="0.0443%" height="15" fill="rgb(251,22,52)" fg:x="4817" fg:w="3"/><text x="71.3916%" y="207.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="71.1416%" y="181" width="0.0443%" height="15" fill="rgb(229,209,22)" fg:x="4817" fg:w="3"/><text x="71.3916%" y="191.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="71.1416%" y="165" width="0.0443%" height="15" fill="rgb(234,138,34)" fg:x="4817" fg:w="3"/><text x="71.3916%" y="175.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="71.1416%" y="149" width="0.0443%" height="15" fill="rgb(212,95,11)" fg:x="4817" fg:w="3"/><text x="71.3916%" y="159.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.1712%" y="133" width="0.0148%" height="15" fill="rgb(240,179,47)" fg:x="4819" fg:w="1"/><text x="71.4212%" y="143.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.1712%" y="117" width="0.0148%" height="15" fill="rgb(240,163,11)" fg:x="4819" fg:w="1"/><text x="71.4212%" y="127.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.01%)</title><rect x="71.1712%" y="101" width="0.0148%" height="15" fill="rgb(236,37,12)" fg:x="4819" fg:w="1"/><text x="71.4212%" y="111.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="71.1712%" y="85" width="0.0148%" height="15" fill="rgb(232,164,16)" fg:x="4819" fg:w="1"/><text x="71.4212%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (37 samples, 0.55%)</title><rect x="70.6543%" y="373" width="0.5464%" height="15" fill="rgb(244,205,15)" fg:x="4784" fg:w="37"/><text x="70.9043%" y="383.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for usize&gt;::fmt (1 samples, 0.01%)</title><rect x="71.1859%" y="357" width="0.0148%" height="15" fill="rgb(223,117,47)" fg:x="4820" fg:w="1"/><text x="71.4359%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="71.1859%" y="341" width="0.0148%" height="15" fill="rgb(244,107,35)" fg:x="4820" fg:w="1"/><text x="71.4359%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="71.1859%" y="325" width="0.0148%" height="15" fill="rgb(205,140,8)" fg:x="4820" fg:w="1"/><text x="71.4359%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (39 samples, 0.58%)</title><rect x="70.6395%" y="421" width="0.5760%" height="15" fill="rgb(228,84,46)" fg:x="4783" fg:w="39"/><text x="70.8895%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (39 samples, 0.58%)</title><rect x="70.6395%" y="405" width="0.5760%" height="15" fill="rgb(254,188,9)" fg:x="4783" fg:w="39"/><text x="70.8895%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (39 samples, 0.58%)</title><rect x="70.6395%" y="389" width="0.5760%" height="15" fill="rgb(206,112,54)" fg:x="4783" fg:w="39"/><text x="70.8895%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="71.2007%" y="373" width="0.0148%" height="15" fill="rgb(216,84,49)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="383.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="71.2007%" y="357" width="0.0148%" height="15" fill="rgb(214,194,35)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="367.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2007%" y="341" width="0.0148%" height="15" fill="rgb(249,28,3)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="351.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2007%" y="325" width="0.0148%" height="15" fill="rgb(222,56,52)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="335.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2007%" y="309" width="0.0148%" height="15" fill="rgb(245,217,50)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="319.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2007%" y="293" width="0.0148%" height="15" fill="rgb(213,201,24)" fg:x="4821" fg:w="1"/><text x="71.4507%" y="303.50"></text></g><g><title>std::io::stdio::_print (41 samples, 0.61%)</title><rect x="70.6247%" y="549" width="0.6055%" height="15" fill="rgb(248,116,28)" fg:x="4782" fg:w="41"/><text x="70.8747%" y="559.50"></text></g><g><title>std::io::stdio::print_to (41 samples, 0.61%)</title><rect x="70.6247%" y="533" width="0.6055%" height="15" fill="rgb(219,72,43)" fg:x="4782" fg:w="41"/><text x="70.8747%" y="543.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (41 samples, 0.61%)</title><rect x="70.6247%" y="517" width="0.6055%" height="15" fill="rgb(209,138,14)" fg:x="4782" fg:w="41"/><text x="70.8747%" y="527.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (41 samples, 0.61%)</title><rect x="70.6247%" y="501" width="0.6055%" height="15" fill="rgb(222,18,33)" fg:x="4782" fg:w="41"/><text x="70.8747%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (41 samples, 0.61%)</title><rect x="70.6247%" y="485" width="0.6055%" height="15" fill="rgb(213,199,7)" fg:x="4782" fg:w="41"/><text x="70.8747%" y="495.50"></text></g><g><title>core::fmt::write (40 samples, 0.59%)</title><rect x="70.6395%" y="469" width="0.5908%" height="15" fill="rgb(250,110,10)" fg:x="4783" fg:w="40"/><text x="70.8895%" y="479.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Debug&gt;::fmt (40 samples, 0.59%)</title><rect x="70.6395%" y="453" width="0.5908%" height="15" fill="rgb(248,123,6)" fg:x="4783" fg:w="40"/><text x="70.8895%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (40 samples, 0.59%)</title><rect x="70.6395%" y="437" width="0.5908%" height="15" fill="rgb(206,91,31)" fg:x="4783" fg:w="40"/><text x="70.8895%" y="447.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="71.2155%" y="421" width="0.0148%" height="15" fill="rgb(211,154,13)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="71.2155%" y="405" width="0.0148%" height="15" fill="rgb(225,148,7)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="415.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="71.2155%" y="389" width="0.0148%" height="15" fill="rgb(220,160,43)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="399.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2155%" y="373" width="0.0148%" height="15" fill="rgb(213,52,39)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="383.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2155%" y="357" width="0.0148%" height="15" fill="rgb(243,137,7)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="367.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.2155%" y="341" width="0.0148%" height="15" fill="rgb(230,79,13)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="351.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.2155%" y="325" width="0.0148%" height="15" fill="rgb(247,105,23)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="335.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.2155%" y="309" width="0.0148%" height="15" fill="rgb(223,179,41)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="319.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.01%)</title><rect x="71.2155%" y="293" width="0.0148%" height="15" fill="rgb(218,9,34)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="303.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="71.2155%" y="277" width="0.0148%" height="15" fill="rgb(222,106,8)" fg:x="4822" fg:w="1"/><text x="71.4655%" y="287.50"></text></g><g><title>xWord_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="71.2302%" y="549" width="0.0148%" height="15" fill="rgb(211,220,0)" fg:x="4823" fg:w="1"/><text x="71.4802%" y="559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="71.3336%" y="261" width="0.0148%" height="15" fill="rgb(229,52,16)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="271.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.3336%" y="245" width="0.0148%" height="15" fill="rgb(212,155,18)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.3336%" y="229" width="0.0148%" height="15" fill="rgb(242,21,14)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="239.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="71.3336%" y="213" width="0.0148%" height="15" fill="rgb(222,19,48)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="223.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.3336%" y="197" width="0.0148%" height="15" fill="rgb(232,45,27)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="207.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.01%)</title><rect x="71.3336%" y="181" width="0.0148%" height="15" fill="rgb(249,103,42)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="191.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.01%)</title><rect x="71.3336%" y="165" width="0.0148%" height="15" fill="rgb(246,81,33)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="175.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="71.3336%" y="149" width="0.0148%" height="15" fill="rgb(252,33,42)" fg:x="4830" fg:w="1"/><text x="71.5836%" y="159.50"></text></g><g><title>&lt;core::char::EscapeDebug as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="71.3632%" y="181" width="0.0738%" height="15" fill="rgb(209,212,41)" fg:x="4832" fg:w="5"/><text x="71.6132%" y="191.50"></text></g><g><title>&lt;core::char::EscapeDefault as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="71.3632%" y="165" width="0.0738%" height="15" fill="rgb(207,154,6)" fg:x="4832" fg:w="5"/><text x="71.6132%" y="175.50"></text></g><g><title>[xWord-generator] (1 samples, 0.01%)</title><rect x="71.4370%" y="165" width="0.0148%" height="15" fill="rgb(223,64,47)" fg:x="4837" fg:w="1"/><text x="71.6870%" y="175.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.01%)</title><rect x="71.4370%" y="149" width="0.0148%" height="15" fill="rgb(211,161,38)" fg:x="4837" fg:w="1"/><text x="71.6870%" y="159.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="71.4813%" y="85" width="0.0886%" height="15" fill="rgb(219,138,40)" fg:x="4840" fg:w="6"/><text x="71.7313%" y="95.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (4 samples, 0.06%)</title><rect x="71.5109%" y="69" width="0.0591%" height="15" fill="rgb(241,228,46)" fg:x="4842" fg:w="4"/><text x="71.7609%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="71.5552%" y="53" width="0.0148%" height="15" fill="rgb(223,209,38)" fg:x="4845" fg:w="1"/><text x="71.8052%" y="63.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="71.5552%" y="37" width="0.0148%" height="15" fill="rgb(236,164,45)" fg:x="4845" fg:w="1"/><text x="71.8052%" y="47.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (23 samples, 0.34%)</title><rect x="71.4813%" y="117" width="0.3397%" height="15" fill="rgb(231,15,5)" fg:x="4840" fg:w="23"/><text x="71.7313%" y="127.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (23 samples, 0.34%)</title><rect x="71.4813%" y="101" width="0.3397%" height="15" fill="rgb(252,35,15)" fg:x="4840" fg:w="23"/><text x="71.7313%" y="111.50"></text></g><g><title>std::sys_common::memchr::memrchr (17 samples, 0.25%)</title><rect x="71.5699%" y="85" width="0.2511%" height="15" fill="rgb(248,181,18)" fg:x="4846" fg:w="17"/><text x="71.8199%" y="95.50"></text></g><g><title>std::sys::unix::memchr::memrchr (17 samples, 0.25%)</title><rect x="71.5699%" y="69" width="0.2511%" height="15" fill="rgb(233,39,42)" fg:x="4846" fg:w="17"/><text x="71.8199%" y="79.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (17 samples, 0.25%)</title><rect x="71.5699%" y="53" width="0.2511%" height="15" fill="rgb(238,110,33)" fg:x="4846" fg:w="17"/><text x="71.8199%" y="63.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.25%)</title><rect x="71.5699%" y="37" width="0.2511%" height="15" fill="rgb(233,195,10)" fg:x="4846" fg:w="17"/><text x="71.8199%" y="47.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (27 samples, 0.40%)</title><rect x="71.4518%" y="149" width="0.3988%" height="15" fill="rgb(254,105,3)" fg:x="4838" fg:w="27"/><text x="71.7018%" y="159.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (27 samples, 0.40%)</title><rect x="71.4518%" y="133" width="0.3988%" height="15" fill="rgb(221,225,9)" fg:x="4838" fg:w="27"/><text x="71.7018%" y="143.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.03%)</title><rect x="71.8210%" y="117" width="0.0295%" height="15" fill="rgb(224,227,45)" fg:x="4863" fg:w="2"/><text x="72.0710%" y="127.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.03%)</title><rect x="71.8210%" y="101" width="0.0295%" height="15" fill="rgb(229,198,43)" fg:x="4863" fg:w="2"/><text x="72.0710%" y="111.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (29 samples, 0.43%)</title><rect x="71.4370%" y="181" width="0.4283%" height="15" fill="rgb(206,209,35)" fg:x="4837" fg:w="29"/><text x="71.6870%" y="191.50"></text></g><g><title>core::fmt::Write::write_char (28 samples, 0.41%)</title><rect x="71.4518%" y="165" width="0.4135%" height="15" fill="rgb(245,195,53)" fg:x="4838" fg:w="28"/><text x="71.7018%" y="175.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.01%)</title><rect x="71.8505%" y="149" width="0.0148%" height="15" fill="rgb(240,92,26)" fg:x="4865" fg:w="1"/><text x="72.1005%" y="159.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.01%)</title><rect x="71.8505%" y="133" width="0.0148%" height="15" fill="rgb(207,40,23)" fg:x="4865" fg:w="1"/><text x="72.1005%" y="143.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="71.8505%" y="117" width="0.0148%" height="15" fill="rgb(223,111,35)" fg:x="4865" fg:w="1"/><text x="72.1005%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="71.9982%" y="69" width="0.0148%" height="15" fill="rgb(229,147,28)" fg:x="4875" fg:w="1"/><text x="72.2482%" y="79.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (11 samples, 0.16%)</title><rect x="71.8653%" y="165" width="0.1625%" height="15" fill="rgb(211,29,28)" fg:x="4866" fg:w="11"/><text x="72.1153%" y="175.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (11 samples, 0.16%)</title><rect x="71.8653%" y="149" width="0.1625%" height="15" fill="rgb(228,72,33)" fg:x="4866" fg:w="11"/><text x="72.1153%" y="159.50"></text></g><g><title>core::unicode::unicode_data::skip_search (11 samples, 0.16%)</title><rect x="71.8653%" y="133" width="0.1625%" height="15" fill="rgb(205,214,31)" fg:x="4866" fg:w="11"/><text x="72.1153%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (9 samples, 0.13%)</title><rect x="71.8948%" y="117" width="0.1329%" height="15" fill="rgb(224,111,15)" fg:x="4868" fg:w="9"/><text x="72.1448%" y="127.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (9 samples, 0.13%)</title><rect x="71.8948%" y="101" width="0.1329%" height="15" fill="rgb(253,21,26)" fg:x="4868" fg:w="9"/><text x="72.1448%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (2 samples, 0.03%)</title><rect x="71.9982%" y="85" width="0.0295%" height="15" fill="rgb(245,139,43)" fg:x="4875" fg:w="2"/><text x="72.2482%" y="95.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (1 samples, 0.01%)</title><rect x="72.0130%" y="69" width="0.0148%" height="15" fill="rgb(252,170,7)" fg:x="4876" fg:w="1"/><text x="72.2630%" y="79.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.01%)</title><rect x="72.0130%" y="53" width="0.0148%" height="15" fill="rgb(231,118,14)" fg:x="4876" fg:w="1"/><text x="72.2630%" y="63.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.01%)</title><rect x="72.0130%" y="37" width="0.0148%" height="15" fill="rgb(238,83,0)" fg:x="4876" fg:w="1"/><text x="72.2630%" y="47.50"></text></g><g><title>&lt;char as core::fmt::Debug&gt;::fmt (47 samples, 0.69%)</title><rect x="71.3484%" y="197" width="0.6941%" height="15" fill="rgb(221,39,39)" fg:x="4831" fg:w="47"/><text x="71.5984%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (12 samples, 0.18%)</title><rect x="71.8653%" y="181" width="0.1772%" height="15" fill="rgb(222,119,46)" fg:x="4866" fg:w="12"/><text x="72.1153%" y="191.50"></text></g><g><title>core::unicode::printable::is_printable (1 samples, 0.01%)</title><rect x="72.0278%" y="165" width="0.0148%" height="15" fill="rgb(222,165,49)" fg:x="4877" fg:w="1"/><text x="72.2778%" y="175.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (4 samples, 0.06%)</title><rect x="72.0573%" y="117" width="0.0591%" height="15" fill="rgb(219,113,52)" fg:x="4879" fg:w="4"/><text x="72.3073%" y="127.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (4 samples, 0.06%)</title><rect x="72.0573%" y="101" width="0.0591%" height="15" fill="rgb(214,7,15)" fg:x="4879" fg:w="4"/><text x="72.3073%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="72.0721%" y="85" width="0.0443%" height="15" fill="rgb(235,32,4)" fg:x="4880" fg:w="3"/><text x="72.3221%" y="95.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="72.0721%" y="69" width="0.0443%" height="15" fill="rgb(238,90,54)" fg:x="4880" fg:w="3"/><text x="72.3221%" y="79.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="72.0573%" y="149" width="0.0886%" height="15" fill="rgb(213,208,19)" fg:x="4879" fg:w="6"/><text x="72.3073%" y="159.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.09%)</title><rect x="72.0573%" y="133" width="0.0886%" height="15" fill="rgb(233,156,4)" fg:x="4879" fg:w="6"/><text x="72.3073%" y="143.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="72.1164%" y="117" width="0.0295%" height="15" fill="rgb(207,194,5)" fg:x="4883" fg:w="2"/><text x="72.3664%" y="127.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="72.1164%" y="101" width="0.0295%" height="15" fill="rgb(206,111,30)" fg:x="4883" fg:w="2"/><text x="72.3664%" y="111.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="72.1164%" y="85" width="0.0295%" height="15" fill="rgb(243,70,54)" fg:x="4883" fg:w="2"/><text x="72.3664%" y="95.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="72.1164%" y="69" width="0.0295%" height="15" fill="rgb(242,28,8)" fg:x="4883" fg:w="2"/><text x="72.3664%" y="79.50"></text></g><g><title>core::fmt::Formatter::write_str (12 samples, 0.18%)</title><rect x="72.0425%" y="197" width="0.1772%" height="15" fill="rgb(219,106,18)" fg:x="4878" fg:w="12"/><text x="72.2925%" y="207.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (12 samples, 0.18%)</title><rect x="72.0425%" y="181" width="0.1772%" height="15" fill="rgb(244,222,10)" fg:x="4878" fg:w="12"/><text x="72.2925%" y="191.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (12 samples, 0.18%)</title><rect x="72.0425%" y="165" width="0.1772%" height="15" fill="rgb(236,179,52)" fg:x="4878" fg:w="12"/><text x="72.2925%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (5 samples, 0.07%)</title><rect x="72.1459%" y="149" width="0.0738%" height="15" fill="rgb(213,23,39)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (5 samples, 0.07%)</title><rect x="72.1459%" y="133" width="0.0738%" height="15" fill="rgb(238,48,10)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="143.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (5 samples, 0.07%)</title><rect x="72.1459%" y="117" width="0.0738%" height="15" fill="rgb(251,196,23)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.07%)</title><rect x="72.1459%" y="101" width="0.0738%" height="15" fill="rgb(250,152,24)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="111.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.07%)</title><rect x="72.1459%" y="85" width="0.0738%" height="15" fill="rgb(209,150,17)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="95.50"></text></g><g><title>core::mem::replace (5 samples, 0.07%)</title><rect x="72.1459%" y="69" width="0.0738%" height="15" fill="rgb(234,202,34)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="79.50"></text></g><g><title>core::ptr::write (5 samples, 0.07%)</title><rect x="72.1459%" y="53" width="0.0738%" height="15" fill="rgb(253,148,53)" fg:x="4885" fg:w="5"/><text x="72.3959%" y="63.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (2 samples, 0.03%)</title><rect x="72.2198%" y="117" width="0.0295%" height="15" fill="rgb(218,129,16)" fg:x="4890" fg:w="2"/><text x="72.4698%" y="127.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.01%)</title><rect x="72.2345%" y="101" width="0.0148%" height="15" fill="rgb(216,85,19)" fg:x="4891" fg:w="1"/><text x="72.4845%" y="111.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="72.2198%" y="149" width="0.0738%" height="15" fill="rgb(235,228,7)" fg:x="4890" fg:w="5"/><text x="72.4698%" y="159.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (5 samples, 0.07%)</title><rect x="72.2198%" y="133" width="0.0738%" height="15" fill="rgb(245,175,0)" fg:x="4890" fg:w="5"/><text x="72.4698%" y="143.50"></text></g><g><title>std::sys_common::memchr::memrchr (3 samples, 0.04%)</title><rect x="72.2493%" y="117" width="0.0443%" height="15" fill="rgb(208,168,36)" fg:x="4892" fg:w="3"/><text x="72.4993%" y="127.50"></text></g><g><title>std::sys::unix::memchr::memrchr (3 samples, 0.04%)</title><rect x="72.2493%" y="101" width="0.0443%" height="15" fill="rgb(246,171,24)" fg:x="4892" fg:w="3"/><text x="72.4993%" y="111.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (3 samples, 0.04%)</title><rect x="72.2493%" y="85" width="0.0443%" height="15" fill="rgb(215,142,24)" fg:x="4892" fg:w="3"/><text x="72.4993%" y="95.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="72.2493%" y="69" width="0.0443%" height="15" fill="rgb(250,187,7)" fg:x="4892" fg:w="3"/><text x="72.4993%" y="79.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.03%)</title><rect x="72.2936%" y="149" width="0.0295%" height="15" fill="rgb(228,66,33)" fg:x="4895" fg:w="2"/><text x="72.5436%" y="159.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.03%)</title><rect x="72.2936%" y="133" width="0.0295%" height="15" fill="rgb(234,215,21)" fg:x="4895" fg:w="2"/><text x="72.5436%" y="143.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="72.3084%" y="117" width="0.0148%" height="15" fill="rgb(222,191,20)" fg:x="4896" fg:w="1"/><text x="72.5584%" y="127.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (9 samples, 0.13%)</title><rect x="72.2198%" y="181" width="0.1329%" height="15" fill="rgb(245,79,54)" fg:x="4890" fg:w="9"/><text x="72.4698%" y="191.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 0.13%)</title><rect x="72.2198%" y="165" width="0.1329%" height="15" fill="rgb(240,10,37)" fg:x="4890" fg:w="9"/><text x="72.4698%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="72.3231%" y="149" width="0.0295%" height="15" fill="rgb(214,192,32)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.03%)</title><rect x="72.3231%" y="133" width="0.0295%" height="15" fill="rgb(209,36,54)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="143.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="72.3231%" y="117" width="0.0295%" height="15" fill="rgb(220,10,11)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.03%)</title><rect x="72.3231%" y="101" width="0.0295%" height="15" fill="rgb(221,106,17)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="111.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.03%)</title><rect x="72.3231%" y="85" width="0.0295%" height="15" fill="rgb(251,142,44)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="95.50"></text></g><g><title>core::mem::replace (2 samples, 0.03%)</title><rect x="72.3231%" y="69" width="0.0295%" height="15" fill="rgb(238,13,15)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="79.50"></text></g><g><title>core::ptr::write (2 samples, 0.03%)</title><rect x="72.3231%" y="53" width="0.0295%" height="15" fill="rgb(208,107,27)" fg:x="4897" fg:w="2"/><text x="72.5731%" y="63.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (72 samples, 1.06%)</title><rect x="71.3041%" y="341" width="1.0634%" height="15" fill="rgb(205,136,37)" fg:x="4828" fg:w="72"/><text x="71.5541%" y="351.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (72 samples, 1.06%)</title><rect x="71.3041%" y="325" width="1.0634%" height="15" fill="rgb(250,205,27)" fg:x="4828" fg:w="72"/><text x="71.5541%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (72 samples, 1.06%)</title><rect x="71.3041%" y="309" width="1.0634%" height="15" fill="rgb(210,80,43)" fg:x="4828" fg:w="72"/><text x="71.5541%" y="319.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (72 samples, 1.06%)</title><rect x="71.3041%" y="293" width="1.0634%" height="15" fill="rgb(247,160,36)" fg:x="4828" fg:w="72"/><text x="71.5541%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (72 samples, 1.06%)</title><rect x="71.3041%" y="277" width="1.0634%" height="15" fill="rgb(234,13,49)" fg:x="4828" fg:w="72"/><text x="71.5541%" y="287.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (69 samples, 1.02%)</title><rect x="71.3484%" y="261" width="1.0191%" height="15" fill="rgb(234,122,0)" fg:x="4831" fg:w="69"/><text x="71.5984%" y="271.50"></text></g><g><title>core::fmt::builders::DebugInner::entry (69 samples, 1.02%)</title><rect x="71.3484%" y="245" width="1.0191%" height="15" fill="rgb(207,146,38)" fg:x="4831" fg:w="69"/><text x="71.5984%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (69 samples, 1.02%)</title><rect x="71.3484%" y="229" width="1.0191%" height="15" fill="rgb(207,177,25)" fg:x="4831" fg:w="69"/><text x="71.5984%" y="239.50"></text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (69 samples, 1.02%)</title><rect x="71.3484%" y="213" width="1.0191%" height="15" fill="rgb(211,178,42)" fg:x="4831" fg:w="69"/><text x="71.5984%" y="223.50"></text></g><g><title>core::fmt::Write::write_char (10 samples, 0.15%)</title><rect x="72.2198%" y="197" width="0.1477%" height="15" fill="rgb(230,69,54)" fg:x="4890" fg:w="10"/><text x="72.4698%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.01%)</title><rect x="72.3527%" y="181" width="0.0148%" height="15" fill="rgb(214,135,41)" fg:x="4899" fg:w="1"/><text x="72.6027%" y="191.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.01%)</title><rect x="72.3527%" y="165" width="0.0148%" height="15" fill="rgb(237,67,25)" fg:x="4899" fg:w="1"/><text x="72.6027%" y="175.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="72.3527%" y="149" width="0.0148%" height="15" fill="rgb(222,189,50)" fg:x="4899" fg:w="1"/><text x="72.6027%" y="159.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (73 samples, 1.08%)</title><rect x="71.3041%" y="357" width="1.0781%" height="15" fill="rgb(245,148,34)" fg:x="4828" fg:w="73"/><text x="71.5541%" y="367.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for usize&gt;::fmt (1 samples, 0.01%)</title><rect x="72.3674%" y="341" width="0.0148%" height="15" fill="rgb(222,29,6)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="351.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="72.3674%" y="325" width="0.0148%" height="15" fill="rgb(221,189,43)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="335.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="72.3674%" y="309" width="0.0148%" height="15" fill="rgb(207,36,27)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="72.3674%" y="293" width="0.0148%" height="15" fill="rgb(217,90,24)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.01%)</title><rect x="72.3674%" y="277" width="0.0148%" height="15" fill="rgb(224,66,35)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="287.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="72.3674%" y="261" width="0.0148%" height="15" fill="rgb(221,13,50)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="72.3674%" y="245" width="0.0148%" height="15" fill="rgb(236,68,49)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="72.3674%" y="229" width="0.0148%" height="15" fill="rgb(229,146,28)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="72.3674%" y="213" width="0.0148%" height="15" fill="rgb(225,31,38)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="72.3674%" y="197" width="0.0148%" height="15" fill="rgb(250,208,3)" fg:x="4900" fg:w="1"/><text x="72.6174%" y="207.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="72.3822%" y="277" width="0.0148%" height="15" fill="rgb(246,54,23)" fg:x="4901" fg:w="1"/><text x="72.6322%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (76 samples, 1.12%)</title><rect x="71.3041%" y="405" width="1.1224%" height="15" fill="rgb(243,76,11)" fg:x="4828" fg:w="76"/><text x="71.5541%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (76 samples, 1.12%)</title><rect x="71.3041%" y="389" width="1.1224%" height="15" fill="rgb(245,21,50)" fg:x="4828" fg:w="76"/><text x="71.5541%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (76 samples, 1.12%)</title><rect x="71.3041%" y="373" width="1.1224%" height="15" fill="rgb(228,9,43)" fg:x="4828" fg:w="76"/><text x="71.5541%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.04%)</title><rect x="72.3822%" y="357" width="0.0443%" height="15" fill="rgb(208,100,47)" fg:x="4901" fg:w="3"/><text x="72.6322%" y="367.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="72.3822%" y="341" width="0.0443%" height="15" fill="rgb(232,26,8)" fg:x="4901" fg:w="3"/><text x="72.6322%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="72.3822%" y="325" width="0.0443%" height="15" fill="rgb(216,166,38)" fg:x="4901" fg:w="3"/><text x="72.6322%" y="335.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="72.3822%" y="309" width="0.0443%" height="15" fill="rgb(251,202,51)" fg:x="4901" fg:w="3"/><text x="72.6322%" y="319.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.04%)</title><rect x="72.3822%" y="293" width="0.0443%" height="15" fill="rgb(254,216,34)" fg:x="4901" fg:w="3"/><text x="72.6322%" y="303.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.03%)</title><rect x="72.3970%" y="277" width="0.0295%" height="15" fill="rgb(251,32,27)" fg:x="4902" fg:w="2"/><text x="72.6470%" y="287.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.03%)</title><rect x="72.3970%" y="261" width="0.0295%" height="15" fill="rgb(208,127,28)" fg:x="4902" fg:w="2"/><text x="72.6470%" y="271.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.03%)</title><rect x="72.3970%" y="245" width="0.0295%" height="15" fill="rgb(224,137,22)" fg:x="4902" fg:w="2"/><text x="72.6470%" y="255.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="72.3970%" y="229" width="0.0295%" height="15" fill="rgb(254,70,32)" fg:x="4902" fg:w="2"/><text x="72.6470%" y="239.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Debug&gt;::fmt (77 samples, 1.14%)</title><rect x="71.3041%" y="437" width="1.1372%" height="15" fill="rgb(229,75,37)" fg:x="4828" fg:w="77"/><text x="71.5541%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field3_finish (77 samples, 1.14%)</title><rect x="71.3041%" y="421" width="1.1372%" height="15" fill="rgb(252,64,23)" fg:x="4828" fg:w="77"/><text x="71.5541%" y="431.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="72.4265%" y="405" width="0.0148%" height="15" fill="rgb(232,162,48)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="72.4265%" y="389" width="0.0148%" height="15" fill="rgb(246,160,12)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="399.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="72.4265%" y="373" width="0.0148%" height="15" fill="rgb(247,166,0)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="72.4265%" y="357" width="0.0148%" height="15" fill="rgb(249,219,21)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="367.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="72.4265%" y="341" width="0.0148%" height="15" fill="rgb(205,209,3)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="351.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="72.4265%" y="325" width="0.0148%" height="15" fill="rgb(243,44,1)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="335.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.01%)</title><rect x="72.4265%" y="309" width="0.0148%" height="15" fill="rgb(206,159,16)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="319.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.01%)</title><rect x="72.4265%" y="293" width="0.0148%" height="15" fill="rgb(244,77,30)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="303.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.01%)</title><rect x="72.4265%" y="277" width="0.0148%" height="15" fill="rgb(218,69,12)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="287.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="72.4265%" y="261" width="0.0148%" height="15" fill="rgb(212,87,7)" fg:x="4904" fg:w="1"/><text x="72.6765%" y="271.50"></text></g><g><title>std::io::Write::write_fmt (93 samples, 1.37%)</title><rect x="71.2893%" y="469" width="1.3735%" height="15" fill="rgb(245,114,25)" fg:x="4827" fg:w="93"/><text x="71.5393%" y="479.50"></text></g><g><title>core::fmt::write (92 samples, 1.36%)</title><rect x="71.3041%" y="453" width="1.3587%" height="15" fill="rgb(210,61,42)" fg:x="4828" fg:w="92"/><text x="71.5541%" y="463.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (15 samples, 0.22%)</title><rect x="72.4413%" y="437" width="0.2215%" height="15" fill="rgb(211,52,33)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (15 samples, 0.22%)</title><rect x="72.4413%" y="421" width="0.2215%" height="15" fill="rgb(234,58,33)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="431.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (15 samples, 0.22%)</title><rect x="72.4413%" y="405" width="0.2215%" height="15" fill="rgb(220,115,36)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="415.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (15 samples, 0.22%)</title><rect x="72.4413%" y="389" width="0.2215%" height="15" fill="rgb(243,153,54)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="399.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (15 samples, 0.22%)</title><rect x="72.4413%" y="373" width="0.2215%" height="15" fill="rgb(251,47,18)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (15 samples, 0.22%)</title><rect x="72.4413%" y="357" width="0.2215%" height="15" fill="rgb(242,102,42)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="367.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (15 samples, 0.22%)</title><rect x="72.4413%" y="341" width="0.2215%" height="15" fill="rgb(234,31,38)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="351.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (15 samples, 0.22%)</title><rect x="72.4413%" y="325" width="0.2215%" height="15" fill="rgb(221,117,51)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="335.50"></text></g><g><title>__libc_write (15 samples, 0.22%)</title><rect x="72.4413%" y="309" width="0.2215%" height="15" fill="rgb(212,20,18)" fg:x="4905" fg:w="15"/><text x="72.6913%" y="319.50"></text></g><g><title>xWord_generator::generate_xWords (97 samples, 1.43%)</title><rect x="71.2450%" y="549" width="1.4326%" height="15" fill="rgb(245,133,36)" fg:x="4824" fg:w="97"/><text x="71.4950%" y="559.50"></text></g><g><title>std::io::stdio::_print (94 samples, 1.39%)</title><rect x="71.2893%" y="533" width="1.3883%" height="15" fill="rgb(212,6,19)" fg:x="4827" fg:w="94"/><text x="71.5393%" y="543.50"></text></g><g><title>std::io::stdio::print_to (94 samples, 1.39%)</title><rect x="71.2893%" y="517" width="1.3883%" height="15" fill="rgb(218,1,36)" fg:x="4827" fg:w="94"/><text x="71.5393%" y="527.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (94 samples, 1.39%)</title><rect x="71.2893%" y="501" width="1.3883%" height="15" fill="rgb(246,84,54)" fg:x="4827" fg:w="94"/><text x="71.5393%" y="511.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (94 samples, 1.39%)</title><rect x="71.2893%" y="485" width="1.3883%" height="15" fill="rgb(242,110,6)" fg:x="4827" fg:w="94"/><text x="71.5393%" y="495.50"></text></g><g><title>std::io::stdio::Stdout::lock (1 samples, 0.01%)</title><rect x="72.6628%" y="469" width="0.0148%" height="15" fill="rgb(214,47,5)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="479.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="72.6628%" y="453" width="0.0148%" height="15" fill="rgb(218,159,25)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="72.6628%" y="437" width="0.0148%" height="15" fill="rgb(215,211,28)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="72.6628%" y="421" width="0.0148%" height="15" fill="rgb(238,59,32)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.01%)</title><rect x="72.6628%" y="405" width="0.0148%" height="15" fill="rgb(226,82,3)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="72.6628%" y="389" width="0.0148%" height="15" fill="rgb(240,164,32)" fg:x="4920" fg:w="1"/><text x="72.9128%" y="399.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.10%)</title><rect x="73.5342%" y="533" width="0.1034%" height="15" fill="rgb(232,46,7)" fg:x="4979" fg:w="7"/><text x="73.7842%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="73.6376%" y="533" width="0.0148%" height="15" fill="rgb(229,129,53)" fg:x="4986" fg:w="1"/><text x="73.8876%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="73.6376%" y="517" width="0.0148%" height="15" fill="rgb(234,188,29)" fg:x="4986" fg:w="1"/><text x="73.8876%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="73.6376%" y="501" width="0.0148%" height="15" fill="rgb(246,141,4)" fg:x="4986" fg:w="1"/><text x="73.8876%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="73.6523%" y="533" width="0.0295%" height="15" fill="rgb(229,23,39)" fg:x="4987" fg:w="2"/><text x="73.9023%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="73.6523%" y="517" width="0.0295%" height="15" fill="rgb(206,12,3)" fg:x="4987" fg:w="2"/><text x="73.9023%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="73.7262%" y="517" width="0.0443%" height="15" fill="rgb(252,226,20)" fg:x="4992" fg:w="3"/><text x="73.9762%" y="527.50"></text></g><g><title>xWord_generator::generate_xWords (1,163 samples, 17.18%)</title><rect x="56.6681%" y="565" width="17.1762%" height="15" fill="rgb(216,123,35)" fg:x="3837" fg:w="1163"/><text x="56.9181%" y="575.50">xWord_generator::generate_x..</text></g><g><title>xWord_generator::get_matching_words (79 samples, 1.17%)</title><rect x="72.6776%" y="549" width="1.1667%" height="15" fill="rgb(212,68,40)" fg:x="4921" fg:w="79"/><text x="72.9276%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.16%)</title><rect x="73.6819%" y="533" width="0.1625%" height="15" fill="rgb(254,125,32)" fg:x="4989" fg:w="11"/><text x="73.9319%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.07%)</title><rect x="73.7705%" y="517" width="0.0738%" height="15" fill="rgb(253,97,22)" fg:x="4995" fg:w="5"/><text x="74.0205%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="73.8296%" y="501" width="0.0148%" height="15" fill="rgb(241,101,14)" fg:x="4999" fg:w="1"/><text x="74.0796%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.8296%" y="485" width="0.0148%" height="15" fill="rgb(238,103,29)" fg:x="4999" fg:w="1"/><text x="74.0796%" y="495.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.10%)</title><rect x="74.8191%" y="549" width="0.1034%" height="15" fill="rgb(233,195,47)" fg:x="5066" fg:w="7"/><text x="75.0691%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="74.9225%" y="517" width="0.0148%" height="15" fill="rgb(246,218,30)" fg:x="5073" fg:w="1"/><text x="75.1725%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="74.9225%" y="501" width="0.0148%" height="15" fill="rgb(219,145,47)" fg:x="5073" fg:w="1"/><text x="75.1725%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="74.9225%" y="549" width="0.0295%" height="15" fill="rgb(243,12,26)" fg:x="5073" fg:w="2"/><text x="75.1725%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="74.9225%" y="533" width="0.0295%" height="15" fill="rgb(214,87,16)" fg:x="5073" fg:w="2"/><text x="75.1725%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="74.9372%" y="517" width="0.0148%" height="15" fill="rgb(208,99,42)" fg:x="5074" fg:w="1"/><text x="75.1872%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="74.9372%" y="501" width="0.0148%" height="15" fill="rgb(253,99,2)" fg:x="5074" fg:w="1"/><text x="75.1872%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.9520%" y="549" width="0.0148%" height="15" fill="rgb(220,168,23)" fg:x="5075" fg:w="1"/><text x="75.2020%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.09%)</title><rect x="74.9668%" y="549" width="0.0886%" height="15" fill="rgb(242,38,24)" fg:x="5076" fg:w="6"/><text x="75.2168%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="75.0258%" y="533" width="0.0295%" height="15" fill="rgb(225,182,9)" fg:x="5080" fg:w="2"/><text x="75.2758%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.41%)</title><rect x="75.2917%" y="533" width="0.4135%" height="15" fill="rgb(243,178,37)" fg:x="5098" fg:w="28"/><text x="75.5417%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.25%)</title><rect x="75.4541%" y="517" width="0.2511%" height="15" fill="rgb(232,139,19)" fg:x="5109" fg:w="17"/><text x="75.7041%" y="527.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="75.9267%" y="517" width="0.0591%" height="15" fill="rgb(225,201,24)" fg:x="5141" fg:w="4"/><text x="76.1767%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="75.9858%" y="517" width="0.0443%" height="15" fill="rgb(221,47,46)" fg:x="5145" fg:w="3"/><text x="76.2358%" y="527.50"></text></g><g><title>xWord_generator::generate_xWords (2,396 samples, 35.39%)</title><rect x="40.9098%" y="581" width="35.3862%" height="15" fill="rgb(249,23,13)" fg:x="2770" fg:w="2396"/><text x="41.1598%" y="591.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (166 samples, 2.45%)</title><rect x="73.8443%" y="565" width="2.4516%" height="15" fill="rgb(219,9,5)" fg:x="5000" fg:w="166"/><text x="74.0943%" y="575.50">xw..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (84 samples, 1.24%)</title><rect x="75.0554%" y="549" width="1.2406%" height="15" fill="rgb(254,171,16)" fg:x="5082" fg:w="84"/><text x="75.3054%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (40 samples, 0.59%)</title><rect x="75.7052%" y="533" width="0.5908%" height="15" fill="rgb(230,171,20)" fg:x="5126" fg:w="40"/><text x="75.9552%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (18 samples, 0.27%)</title><rect x="76.0301%" y="517" width="0.2658%" height="15" fill="rgb(210,71,41)" fg:x="5148" fg:w="18"/><text x="76.2801%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.16%)</title><rect x="76.1335%" y="501" width="0.1625%" height="15" fill="rgb(206,173,20)" fg:x="5155" fg:w="11"/><text x="76.3835%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="76.7243%" y="565" width="0.0295%" height="15" fill="rgb(233,88,34)" fg:x="5195" fg:w="2"/><text x="76.9743%" y="575.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="76.9458%" y="549" width="0.0148%" height="15" fill="rgb(223,209,46)" fg:x="5210" fg:w="1"/><text x="77.1958%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21 samples, 0.31%)</title><rect x="76.9606%" y="549" width="0.3101%" height="15" fill="rgb(250,43,18)" fg:x="5211" fg:w="21"/><text x="77.2106%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.21%)</title><rect x="77.0639%" y="533" width="0.2068%" height="15" fill="rgb(208,13,10)" fg:x="5218" fg:w="14"/><text x="77.3139%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="77.4332%" y="533" width="0.0295%" height="15" fill="rgb(212,200,36)" fg:x="5243" fg:w="2"/><text x="77.6832%" y="543.50"></text></g><g><title>xWord_generator::generate_xWords (3,653 samples, 53.95%)</title><rect x="23.7188%" y="597" width="53.9507%" height="15" fill="rgb(225,90,30)" fg:x="1606" fg:w="3653"/><text x="23.9688%" y="607.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (93 samples, 1.37%)</title><rect x="76.2960%" y="581" width="1.3735%" height="15" fill="rgb(236,182,39)" fg:x="5166" fg:w="93"/><text x="76.5460%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (62 samples, 0.92%)</title><rect x="76.7538%" y="565" width="0.9157%" height="15" fill="rgb(212,144,35)" fg:x="5197" fg:w="62"/><text x="77.0038%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.40%)</title><rect x="77.2707%" y="549" width="0.3988%" height="15" fill="rgb(228,63,44)" fg:x="5232" fg:w="27"/><text x="77.5207%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.21%)</title><rect x="77.4627%" y="533" width="0.2068%" height="15" fill="rgb(228,109,6)" fg:x="5245" fg:w="14"/><text x="77.7127%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.09%)</title><rect x="77.5809%" y="517" width="0.0886%" height="15" fill="rgb(238,117,24)" fg:x="5253" fg:w="6"/><text x="77.8309%" y="527.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="78.0239%" y="581" width="0.0148%" height="15" fill="rgb(242,26,26)" fg:x="5283" fg:w="1"/><text x="78.2739%" y="591.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="78.0387%" y="581" width="0.0148%" height="15" fill="rgb(221,92,48)" fg:x="5284" fg:w="1"/><text x="78.2887%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="78.0535%" y="581" width="0.0148%" height="15" fill="rgb(209,209,32)" fg:x="5285" fg:w="1"/><text x="78.3035%" y="591.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="78.3931%" y="565" width="0.0443%" height="15" fill="rgb(221,70,22)" fg:x="5308" fg:w="3"/><text x="78.6431%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.52%)</title><rect x="78.4375%" y="565" width="0.5169%" height="15" fill="rgb(248,145,5)" fg:x="5311" fg:w="35"/><text x="78.6875%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.25%)</title><rect x="78.7033%" y="549" width="0.2511%" height="15" fill="rgb(226,116,26)" fg:x="5329" fg:w="17"/><text x="78.9533%" y="559.50"></text></g><g><title>xWord_generator::generate_xWords (4,229 samples, 62.46%)</title><rect x="16.9547%" y="613" width="62.4575%" height="15" fill="rgb(244,5,17)" fg:x="1148" fg:w="4229"/><text x="17.2047%" y="623.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (118 samples, 1.74%)</title><rect x="77.6695%" y="597" width="1.7427%" height="15" fill="rgb(252,159,33)" fg:x="5259" fg:w="118"/><text x="77.9195%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (91 samples, 1.34%)</title><rect x="78.0682%" y="581" width="1.3440%" height="15" fill="rgb(206,71,0)" fg:x="5286" fg:w="91"/><text x="78.3182%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (31 samples, 0.46%)</title><rect x="78.9544%" y="565" width="0.4578%" height="15" fill="rgb(233,118,54)" fg:x="5346" fg:w="31"/><text x="79.2044%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.19%)</title><rect x="79.2202%" y="549" width="0.1920%" height="15" fill="rgb(234,83,48)" fg:x="5364" fg:w="13"/><text x="79.4702%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.10%)</title><rect x="79.3088%" y="533" width="0.1034%" height="15" fill="rgb(228,3,54)" fg:x="5370" fg:w="7"/><text x="79.5588%" y="543.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="79.6337%" y="597" width="0.0148%" height="15" fill="rgb(226,155,13)" fg:x="5392" fg:w="1"/><text x="79.8837%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="79.6485%" y="597" width="0.0148%" height="15" fill="rgb(241,28,37)" fg:x="5393" fg:w="1"/><text x="79.8985%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="79.6485%" y="581" width="0.0148%" height="15" fill="rgb(233,93,10)" fg:x="5393" fg:w="1"/><text x="79.8985%" y="591.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="79.9143%" y="581" width="0.0443%" height="15" fill="rgb(225,113,19)" fg:x="5411" fg:w="3"/><text x="80.1643%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.35%)</title><rect x="79.9586%" y="581" width="0.3545%" height="15" fill="rgb(241,2,18)" fg:x="5414" fg:w="24"/><text x="80.2086%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.16%)</title><rect x="80.1506%" y="565" width="0.1625%" height="15" fill="rgb(228,207,21)" fg:x="5427" fg:w="11"/><text x="80.4006%" y="575.50"></text></g><g><title>xWord_generator::generate_xWords (4,460 samples, 65.87%)</title><rect x="15.0347%" y="629" width="65.8691%" height="15" fill="rgb(213,211,35)" fg:x="1018" fg:w="4460"/><text x="15.2847%" y="639.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (101 samples, 1.49%)</title><rect x="79.4122%" y="613" width="1.4917%" height="15" fill="rgb(209,83,10)" fg:x="5377" fg:w="101"/><text x="79.6622%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (84 samples, 1.24%)</title><rect x="79.6633%" y="597" width="1.2406%" height="15" fill="rgb(209,164,1)" fg:x="5394" fg:w="84"/><text x="79.9133%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (40 samples, 0.59%)</title><rect x="80.3131%" y="581" width="0.5908%" height="15" fill="rgb(213,184,43)" fg:x="5438" fg:w="40"/><text x="80.5631%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.35%)</title><rect x="80.5494%" y="565" width="0.3545%" height="15" fill="rgb(231,61,34)" fg:x="5454" fg:w="24"/><text x="80.7994%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.13%)</title><rect x="80.7709%" y="549" width="0.1329%" height="15" fill="rgb(235,75,3)" fg:x="5469" fg:w="9"/><text x="81.0209%" y="559.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="81.5832%" y="613" width="0.0443%" height="15" fill="rgb(220,106,47)" fg:x="5524" fg:w="3"/><text x="81.8332%" y="623.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.43%)</title><rect x="82.9272%" y="597" width="0.4283%" height="15" fill="rgb(210,196,33)" fg:x="5615" fg:w="29"/><text x="83.1772%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (150 samples, 2.22%)</title><rect x="83.3555%" y="597" width="2.2153%" height="15" fill="rgb(229,154,42)" fg:x="5644" fg:w="150"/><text x="83.6055%" y="607.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 1.17%)</title><rect x="84.4041%" y="581" width="1.1667%" height="15" fill="rgb(228,114,26)" fg:x="5715" fg:w="79"/><text x="84.6541%" y="591.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="86.0582%" y="581" width="0.0295%" height="15" fill="rgb(208,144,1)" fg:x="5827" fg:w="2"/><text x="86.3082%" y="591.50"></text></g><g><title>__libc_malloc (6 samples, 0.09%)</title><rect x="86.0877%" y="581" width="0.0886%" height="15" fill="rgb(239,112,37)" fg:x="5829" fg:w="6"/><text x="86.3377%" y="591.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="86.1468%" y="565" width="0.0295%" height="15" fill="rgb(210,96,50)" fg:x="5833" fg:w="2"/><text x="86.3968%" y="575.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="86.1616%" y="549" width="0.0148%" height="15" fill="rgb(222,178,2)" fg:x="5834" fg:w="1"/><text x="86.4116%" y="559.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="86.1763%" y="581" width="0.0148%" height="15" fill="rgb(226,74,18)" fg:x="5835" fg:w="1"/><text x="86.4263%" y="591.50"></text></g><g><title>xWord_generator::generate_xWords (5,043 samples, 74.48%)</title><rect x="12.9818%" y="645" width="74.4794%" height="15" fill="rgb(225,67,54)" fg:x="879" fg:w="5043"/><text x="13.2318%" y="655.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (444 samples, 6.56%)</title><rect x="80.9039%" y="629" width="6.5574%" height="15" fill="rgb(251,92,32)" fg:x="5478" fg:w="444"/><text x="81.1539%" y="639.50">xWord_gen..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (395 samples, 5.83%)</title><rect x="81.6275%" y="613" width="5.8337%" height="15" fill="rgb(228,149,22)" fg:x="5527" fg:w="395"/><text x="81.8775%" y="623.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (128 samples, 1.89%)</title><rect x="85.5708%" y="597" width="1.8904%" height="15" fill="rgb(243,54,13)" fg:x="5794" fg:w="128"/><text x="85.8208%" y="607.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (86 samples, 1.27%)</title><rect x="86.1911%" y="581" width="1.2701%" height="15" fill="rgb(243,180,28)" fg:x="5836" fg:w="86"/><text x="86.4411%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.61%)</title><rect x="86.8557%" y="565" width="0.6055%" height="15" fill="rgb(208,167,24)" fg:x="5881" fg:w="41"/><text x="87.1057%" y="575.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="87.9486%" y="629" width="0.0591%" height="15" fill="rgb(245,73,45)" fg:x="5955" fg:w="4"/><text x="88.1986%" y="639.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.24%)</title><rect x="88.9677%" y="613" width="0.2363%" height="15" fill="rgb(237,203,48)" fg:x="6024" fg:w="16"/><text x="89.2177%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (120 samples, 1.77%)</title><rect x="89.2040%" y="613" width="1.7723%" height="15" fill="rgb(211,197,16)" fg:x="6040" fg:w="120"/><text x="89.4540%" y="623.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (64 samples, 0.95%)</title><rect x="90.0310%" y="597" width="0.9452%" height="15" fill="rgb(243,99,51)" fg:x="6096" fg:w="64"/><text x="90.2810%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="91.1682%" y="597" width="0.0295%" height="15" fill="rgb(215,123,29)" fg:x="6173" fg:w="2"/><text x="91.4182%" y="607.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="91.1830%" y="581" width="0.0148%" height="15" fill="rgb(239,186,37)" fg:x="6174" fg:w="1"/><text x="91.4330%" y="591.50"></text></g><g><title>xWord_generator::generate_xWords (5,513 samples, 81.42%)</title><rect x="10.5450%" y="661" width="81.4208%" height="15" fill="rgb(252,136,39)" fg:x="714" fg:w="5513"/><text x="10.7950%" y="671.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (305 samples, 4.50%)</title><rect x="87.4612%" y="645" width="4.5045%" height="15" fill="rgb(223,213,32)" fg:x="5922" fg:w="305"/><text x="87.7112%" y="655.50">xWord..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (268 samples, 3.96%)</title><rect x="88.0077%" y="629" width="3.9581%" height="15" fill="rgb(233,115,5)" fg:x="5959" fg:w="268"/><text x="88.2577%" y="639.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (67 samples, 0.99%)</title><rect x="90.9762%" y="613" width="0.9895%" height="15" fill="rgb(207,226,44)" fg:x="6160" fg:w="67"/><text x="91.2262%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (52 samples, 0.77%)</title><rect x="91.1978%" y="597" width="0.7680%" height="15" fill="rgb(208,126,0)" fg:x="6175" fg:w="52"/><text x="91.4478%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.34%)</title><rect x="91.6261%" y="581" width="0.3397%" height="15" fill="rgb(244,66,21)" fg:x="6204" fg:w="23"/><text x="91.8761%" y="591.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="92.3497%" y="645" width="0.0148%" height="15" fill="rgb(222,97,12)" fg:x="6253" fg:w="1"/><text x="92.5997%" y="655.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="93.1029%" y="629" width="0.1182%" height="15" fill="rgb(219,213,19)" fg:x="6304" fg:w="8"/><text x="93.3529%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (71 samples, 1.05%)</title><rect x="93.2211%" y="629" width="1.0486%" height="15" fill="rgb(252,169,30)" fg:x="6312" fg:w="71"/><text x="93.4711%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.59%)</title><rect x="93.6789%" y="613" width="0.5908%" height="15" fill="rgb(206,32,51)" fg:x="6343" fg:w="40"/><text x="93.9289%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="94.4026%" y="613" width="0.0443%" height="15" fill="rgb(250,172,42)" fg:x="6392" fg:w="3"/><text x="94.6526%" y="623.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="94.4026%" y="597" width="0.0443%" height="15" fill="rgb(209,34,43)" fg:x="6392" fg:w="3"/><text x="94.6526%" y="607.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.4321%" y="581" width="0.0148%" height="15" fill="rgb(223,11,35)" fg:x="6394" fg:w="1"/><text x="94.6821%" y="591.50"></text></g><g><title>xWord_generator::generate_xWords (5,772 samples, 85.25%)</title><rect x="10.0133%" y="677" width="85.2459%" height="15" fill="rgb(251,219,26)" fg:x="678" fg:w="5772"/><text x="10.2633%" y="687.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (223 samples, 3.29%)</title><rect x="91.9657%" y="661" width="3.2935%" height="15" fill="rgb(231,119,3)" fg:x="6227" fg:w="223"/><text x="92.2157%" y="671.50">xwo..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (196 samples, 2.89%)</title><rect x="92.3645%" y="645" width="2.8947%" height="15" fill="rgb(216,97,11)" fg:x="6254" fg:w="196"/><text x="92.6145%" y="655.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (67 samples, 0.99%)</title><rect x="94.2697%" y="629" width="0.9895%" height="15" fill="rgb(223,59,9)" fg:x="6383" fg:w="67"/><text x="94.5197%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (55 samples, 0.81%)</title><rect x="94.4469%" y="613" width="0.8123%" height="15" fill="rgb(233,93,31)" fg:x="6395" fg:w="55"/><text x="94.6969%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.38%)</title><rect x="94.8752%" y="597" width="0.3840%" height="15" fill="rgb(239,81,33)" fg:x="6424" fg:w="26"/><text x="95.1252%" y="607.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.10%)</title><rect x="96.0567%" y="645" width="0.1034%" height="15" fill="rgb(213,120,34)" fg:x="6504" fg:w="7"/><text x="96.3067%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (56 samples, 0.83%)</title><rect x="96.1601%" y="645" width="0.8271%" height="15" fill="rgb(243,49,53)" fg:x="6511" fg:w="56"/><text x="96.4101%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.53%)</title><rect x="96.4555%" y="629" width="0.5317%" height="15" fill="rgb(247,216,33)" fg:x="6531" fg:w="36"/><text x="96.7055%" y="639.50"></text></g><g><title>xWord_generator::generate_xWords (5,977 samples, 88.27%)</title><rect x="9.4078%" y="693" width="88.2735%" height="15" fill="rgb(226,26,14)" fg:x="637" fg:w="5977"/><text x="9.6578%" y="703.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (164 samples, 2.42%)</title><rect x="95.2592%" y="677" width="2.4221%" height="15" fill="rgb(215,49,53)" fg:x="6450" fg:w="164"/><text x="95.5092%" y="687.50">xw..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (143 samples, 2.11%)</title><rect x="95.5693%" y="661" width="2.1119%" height="15" fill="rgb(245,162,40)" fg:x="6471" fg:w="143"/><text x="95.8193%" y="671.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.69%)</title><rect x="96.9872%" y="645" width="0.6941%" height="15" fill="rgb(229,68,17)" fg:x="6567" fg:w="47"/><text x="97.2372%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (35 samples, 0.52%)</title><rect x="97.1644%" y="629" width="0.5169%" height="15" fill="rgb(213,182,10)" fg:x="6579" fg:w="35"/><text x="97.4144%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.32%)</title><rect x="97.3564%" y="613" width="0.3249%" height="15" fill="rgb(245,125,30)" fg:x="6592" fg:w="22"/><text x="97.6064%" y="623.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="98.0653%" y="661" width="0.0591%" height="15" fill="rgb(232,202,2)" fg:x="6640" fg:w="4"/><text x="98.3153%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (36 samples, 0.53%)</title><rect x="98.1244%" y="661" width="0.5317%" height="15" fill="rgb(237,140,51)" fg:x="6644" fg:w="36"/><text x="98.3744%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.22%)</title><rect x="98.4345%" y="645" width="0.2215%" height="15" fill="rgb(236,157,25)" fg:x="6665" fg:w="15"/><text x="98.6845%" y="655.50"></text></g><g><title>xWord_generator::generate_xWords (6,073 samples, 89.69%)</title><rect x="9.2010%" y="709" width="89.6913%" height="15" fill="rgb(219,209,0)" fg:x="623" fg:w="6073"/><text x="9.4510%" y="719.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (82 samples, 1.21%)</title><rect x="97.6813%" y="693" width="1.2110%" height="15" fill="rgb(240,116,54)" fg:x="6614" fg:w="82"/><text x="97.9313%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (74 samples, 1.09%)</title><rect x="97.7994%" y="677" width="1.0929%" height="15" fill="rgb(216,10,36)" fg:x="6622" fg:w="74"/><text x="98.0494%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.24%)</title><rect x="98.6560%" y="661" width="0.2363%" height="15" fill="rgb(222,72,44)" fg:x="6680" fg:w="16"/><text x="98.9060%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.16%)</title><rect x="98.7299%" y="645" width="0.1625%" height="15" fill="rgb(232,159,9)" fg:x="6685" fg:w="11"/><text x="98.9799%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.13%)</title><rect x="98.7594%" y="629" width="0.1329%" height="15" fill="rgb(210,39,32)" fg:x="6687" fg:w="9"/><text x="99.0094%" y="639.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="99.0991%" y="677" width="0.0295%" height="15" fill="rgb(216,194,45)" fg:x="6710" fg:w="2"/><text x="99.3491%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.22%)</title><rect x="99.1286%" y="677" width="0.2215%" height="15" fill="rgb(218,18,35)" fg:x="6712" fg:w="15"/><text x="99.3786%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.15%)</title><rect x="99.2025%" y="661" width="0.1477%" height="15" fill="rgb(207,83,51)" fg:x="6717" fg:w="10"/><text x="99.4525%" y="671.50"></text></g><g><title>xWord_generator::generate_xWords (6,116 samples, 90.33%)</title><rect x="9.1567%" y="725" width="90.3264%" height="15" fill="rgb(225,63,43)" fg:x="620" fg:w="6116"/><text x="9.4067%" y="735.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (40 samples, 0.59%)</title><rect x="98.8923%" y="709" width="0.5908%" height="15" fill="rgb(207,57,36)" fg:x="6696" fg:w="40"/><text x="99.1423%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (34 samples, 0.50%)</title><rect x="98.9809%" y="693" width="0.5021%" height="15" fill="rgb(216,99,33)" fg:x="6702" fg:w="34"/><text x="99.2309%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.13%)</title><rect x="99.3502%" y="677" width="0.1329%" height="15" fill="rgb(225,42,16)" fg:x="6727" fg:w="9"/><text x="99.6002%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.06%)</title><rect x="99.4240%" y="661" width="0.0591%" height="15" fill="rgb(220,201,45)" fg:x="6732" fg:w="4"/><text x="99.6740%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.4831%" y="693" width="0.0148%" height="15" fill="rgb(225,33,4)" fg:x="6736" fg:w="1"/><text x="99.7331%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.4831%" y="677" width="0.0148%" height="15" fill="rgb(224,33,50)" fg:x="6736" fg:w="1"/><text x="99.7331%" y="687.50"></text></g><g><title>xWord_generator::generate_xWords (6,122 samples, 90.42%)</title><rect x="9.1124%" y="741" width="90.4150%" height="15" fill="rgb(246,198,51)" fg:x="617" fg:w="6122"/><text x="9.3624%" y="751.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (3 samples, 0.04%)</title><rect x="99.4831%" y="725" width="0.0443%" height="15" fill="rgb(205,22,4)" fg:x="6736" fg:w="3"/><text x="99.7331%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="99.4831%" y="709" width="0.0443%" height="15" fill="rgb(206,3,8)" fg:x="6736" fg:w="3"/><text x="99.7331%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="99.4979%" y="693" width="0.0295%" height="15" fill="rgb(251,23,15)" fg:x="6737" fg:w="2"/><text x="99.7479%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.5126%" y="677" width="0.0148%" height="15" fill="rgb(252,88,28)" fg:x="6738" fg:w="1"/><text x="99.7626%" y="687.50"></text></g><g><title>xWord_generator::generate_xWords (6,124 samples, 90.44%)</title><rect x="9.1124%" y="773" width="90.4445%" height="15" fill="rgb(212,127,14)" fg:x="617" fg:w="6124"/><text x="9.3624%" y="783.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::generate_xWords (6,124 samples, 90.44%)</title><rect x="9.1124%" y="757" width="90.4445%" height="15" fill="rgb(247,145,37)" fg:x="617" fg:w="6124"/><text x="9.3624%" y="767.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (2 samples, 0.03%)</title><rect x="99.5274%" y="741" width="0.0295%" height="15" fill="rgb(209,117,53)" fg:x="6739" fg:w="2"/><text x="99.7774%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.03%)</title><rect x="99.5274%" y="725" width="0.0295%" height="15" fill="rgb(212,90,42)" fg:x="6739" fg:w="2"/><text x="99.7774%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="99.5274%" y="709" width="0.0295%" height="15" fill="rgb(218,164,37)" fg:x="6739" fg:w="2"/><text x="99.7774%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.5422%" y="693" width="0.0148%" height="15" fill="rgb(246,65,34)" fg:x="6740" fg:w="1"/><text x="99.7922%" y="703.50"></text></g><g><title>xWord_generator::generate_xWords (6,126 samples, 90.47%)</title><rect x="9.1124%" y="789" width="90.4741%" height="15" fill="rgb(231,100,33)" fg:x="617" fg:w="6126"/><text x="9.3624%" y="799.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (2 samples, 0.03%)</title><rect x="99.5569%" y="773" width="0.0295%" height="15" fill="rgb(228,126,14)" fg:x="6741" fg:w="2"/><text x="99.8069%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.03%)</title><rect x="99.5569%" y="757" width="0.0295%" height="15" fill="rgb(215,173,21)" fg:x="6741" fg:w="2"/><text x="99.8069%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.5717%" y="741" width="0.0148%" height="15" fill="rgb(210,6,40)" fg:x="6742" fg:w="1"/><text x="99.8217%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.5717%" y="725" width="0.0148%" height="15" fill="rgb(212,48,18)" fg:x="6742" fg:w="1"/><text x="99.8217%" y="735.50"></text></g><g><title>xWord_generator::generate_xWords (6,127 samples, 90.49%)</title><rect x="9.1124%" y="805" width="90.4888%" height="15" fill="rgb(230,214,11)" fg:x="617" fg:w="6127"/><text x="9.3624%" y="815.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (1 samples, 0.01%)</title><rect x="99.5865%" y="789" width="0.0148%" height="15" fill="rgb(254,105,39)" fg:x="6743" fg:w="1"/><text x="99.8365%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="99.5865%" y="773" width="0.0148%" height="15" fill="rgb(245,158,5)" fg:x="6743" fg:w="1"/><text x="99.8365%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.5865%" y="757" width="0.0148%" height="15" fill="rgb(249,208,11)" fg:x="6743" fg:w="1"/><text x="99.8365%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.5865%" y="741" width="0.0148%" height="15" fill="rgb(210,39,28)" fg:x="6743" fg:w="1"/><text x="99.8365%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.6308%" y="773" width="0.0148%" height="15" fill="rgb(211,56,53)" fg:x="6746" fg:w="1"/><text x="99.8808%" y="783.50"></text></g><g><title>xWord_generator::generate_xWords (6,131 samples, 90.55%)</title><rect x="9.1124%" y="821" width="90.5479%" height="15" fill="rgb(226,201,30)" fg:x="617" fg:w="6131"/><text x="9.3624%" y="831.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (4 samples, 0.06%)</title><rect x="99.6012%" y="805" width="0.0591%" height="15" fill="rgb(239,101,34)" fg:x="6744" fg:w="4"/><text x="99.8512%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.06%)</title><rect x="99.6012%" y="789" width="0.0591%" height="15" fill="rgb(226,209,5)" fg:x="6744" fg:w="4"/><text x="99.8512%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="99.6455%" y="773" width="0.0148%" height="15" fill="rgb(250,105,47)" fg:x="6747" fg:w="1"/><text x="99.8955%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.6455%" y="757" width="0.0148%" height="15" fill="rgb(230,72,3)" fg:x="6747" fg:w="1"/><text x="99.8955%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.6455%" y="741" width="0.0148%" height="15" fill="rgb(232,218,39)" fg:x="6747" fg:w="1"/><text x="99.8955%" y="751.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.6603%" y="789" width="0.0148%" height="15" fill="rgb(248,166,6)" fg:x="6748" fg:w="1"/><text x="99.9103%" y="799.50"></text></g><g><title>xWord_generator::generate_xWords (6,136 samples, 90.62%)</title><rect x="9.1124%" y="837" width="90.6218%" height="15" fill="rgb(247,89,20)" fg:x="617" fg:w="6136"/><text x="9.3624%" y="847.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (5 samples, 0.07%)</title><rect x="99.6603%" y="821" width="0.0738%" height="15" fill="rgb(248,130,54)" fg:x="6748" fg:w="5"/><text x="99.9103%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.07%)</title><rect x="99.6603%" y="805" width="0.0738%" height="15" fill="rgb(234,196,4)" fg:x="6748" fg:w="5"/><text x="99.9103%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.06%)</title><rect x="99.6751%" y="789" width="0.0591%" height="15" fill="rgb(250,143,31)" fg:x="6749" fg:w="4"/><text x="99.9251%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="99.6899%" y="773" width="0.0443%" height="15" fill="rgb(211,110,34)" fg:x="6750" fg:w="3"/><text x="99.9399%" y="783.50"></text></g><g><title>xWord_generator::generate_xWords (6,140 samples, 90.68%)</title><rect x="9.1124%" y="853" width="90.6808%" height="15" fill="rgb(215,124,48)" fg:x="617" fg:w="6140"/><text x="9.3624%" y="863.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (4 samples, 0.06%)</title><rect x="99.7342%" y="837" width="0.0591%" height="15" fill="rgb(216,46,13)" fg:x="6753" fg:w="4"/><text x="99.9842%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.06%)</title><rect x="99.7342%" y="821" width="0.0591%" height="15" fill="rgb(205,184,25)" fg:x="6753" fg:w="4"/><text x="99.9842%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.7785%" y="805" width="0.0148%" height="15" fill="rgb(228,1,10)" fg:x="6756" fg:w="1"/><text x="100.0285%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="99.7785%" y="789" width="0.0148%" height="15" fill="rgb(213,116,27)" fg:x="6756" fg:w="1"/><text x="100.0285%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.07%)</title><rect x="99.8080%" y="821" width="0.0738%" height="15" fill="rgb(241,95,50)" fg:x="6758" fg:w="5"/><text x="100.0580%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="99.8523%" y="805" width="0.0295%" height="15" fill="rgb(238,48,32)" fg:x="6761" fg:w="2"/><text x="100.1023%" y="815.50"></text></g><g><title>_start (6,302 samples, 93.07%)</title><rect x="6.8380%" y="949" width="93.0734%" height="15" fill="rgb(235,113,49)" fg:x="463" fg:w="6302"/><text x="7.0880%" y="959.50">_start</text></g><g><title>__libc_start_main (6,302 samples, 93.07%)</title><rect x="6.8380%" y="933" width="93.0734%" height="15" fill="rgb(205,127,43)" fg:x="463" fg:w="6302"/><text x="7.0880%" y="943.50">__libc_start_main</text></g><g><title>main (6,302 samples, 93.07%)</title><rect x="6.8380%" y="917" width="93.0734%" height="15" fill="rgb(250,162,2)" fg:x="463" fg:w="6302"/><text x="7.0880%" y="927.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,302 samples, 93.07%)</title><rect x="6.8380%" y="901" width="93.0734%" height="15" fill="rgb(220,13,41)" fg:x="463" fg:w="6302"/><text x="7.0880%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>xWord_generator::main (6,302 samples, 93.07%)</title><rect x="6.8380%" y="885" width="93.0734%" height="15" fill="rgb(249,221,25)" fg:x="463" fg:w="6302"/><text x="7.0880%" y="895.50">xWord_generator::main</text></g><g><title>xWord_generator::generate_xWords (6,156 samples, 90.92%)</title><rect x="8.9942%" y="869" width="90.9171%" height="15" fill="rgb(215,208,19)" fg:x="609" fg:w="6156"/><text x="9.2442%" y="879.50">xWord_generator::generate_xWords</text></g><g><title>xWord_generator::get_matching_words (8 samples, 0.12%)</title><rect x="99.7932%" y="853" width="0.1182%" height="15" fill="rgb(236,175,2)" fg:x="6757" fg:w="8"/><text x="100.0432%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.12%)</title><rect x="99.7932%" y="837" width="0.1182%" height="15" fill="rgb(241,52,2)" fg:x="6757" fg:w="8"/><text x="100.0432%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.03%)</title><rect x="99.8818%" y="821" width="0.0295%" height="15" fill="rgb(248,140,14)" fg:x="6763" fg:w="2"/><text x="100.1318%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="99.8818%" y="805" width="0.0295%" height="15" fill="rgb(253,22,42)" fg:x="6763" fg:w="2"/><text x="100.1318%" y="815.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="99.9114%" y="933" width="0.0148%" height="15" fill="rgb(234,61,47)" fg:x="6765" fg:w="1"/><text x="100.1614%" y="943.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.01%)</title><rect x="99.9262%" y="933" width="0.0148%" height="15" fill="rgb(208,226,15)" fg:x="6766" fg:w="1"/><text x="100.1762%" y="943.50"></text></g><g><title>all (6,771 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(217,221,4)" fg:x="0" fg:w="6771"/><text x="0.2500%" y="991.50"></text></g><g><title>xWord-generator (6,771 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(212,174,34)" fg:x="0" fg:w="6771"/><text x="0.2500%" y="975.50">xWord-generator</text></g><g><title>std::io::stdio::STDOUT (6 samples, 0.09%)</title><rect x="99.9114%" y="949" width="0.0886%" height="15" fill="rgb(253,83,4)" fg:x="6765" fg:w="6"/><text x="100.1614%" y="959.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (4 samples, 0.06%)</title><rect x="99.9409%" y="933" width="0.0591%" height="15" fill="rgb(250,195,49)" fg:x="6767" fg:w="4"/><text x="100.1909%" y="943.50"></text></g></svg></svg>