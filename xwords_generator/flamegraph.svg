<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="422" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="405.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="405.00"> </text><svg id="frames" x="10" width="1180" total_samples="7962"><g><title>[libc-2.31.so] (22 samples, 0.28%)</title><rect x="0.0000%" y="325" width="0.2763%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="22"/><text x="0.2500%" y="335.50"></text></g><g><title>__libc_malloc (7 samples, 0.09%)</title><rect x="0.2763%" y="325" width="0.0879%" height="15" fill="rgb(217,0,24)" fg:x="22" fg:w="7"/><text x="0.5263%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="0.3642%" y="325" width="0.0126%" height="15" fill="rgb(221,193,54)" fg:x="29" fg:w="1"/><text x="0.6142%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="0.3768%" y="325" width="0.0251%" height="15" fill="rgb(248,212,6)" fg:x="30" fg:w="2"/><text x="0.6268%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="0.4019%" y="325" width="0.0377%" height="15" fill="rgb(208,68,35)" fg:x="32" fg:w="3"/><text x="0.6519%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.19%)</title><rect x="0.4396%" y="325" width="0.1884%" height="15" fill="rgb(232,128,0)" fg:x="35" fg:w="15"/><text x="0.6896%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (6 samples, 0.08%)</title><rect x="0.6280%" y="325" width="0.0754%" height="15" fill="rgb(207,160,47)" fg:x="50" fg:w="6"/><text x="0.8780%" y="335.50"></text></g><g><title>xword_generator::XWord::get_entry (71 samples, 0.89%)</title><rect x="0.7033%" y="325" width="0.8917%" height="15" fill="rgb(228,23,34)" fg:x="56" fg:w="71"/><text x="0.9533%" y="335.50"></text></g><g><title>xword_generator::generate_xwords (3 samples, 0.04%)</title><rect x="1.5951%" y="325" width="0.0377%" height="15" fill="rgb(218,30,26)" fg:x="127" fg:w="3"/><text x="1.8451%" y="335.50"></text></g><g><title>xword_generator::get_matching_words (309 samples, 3.88%)</title><rect x="1.6328%" y="325" width="3.8809%" height="15" fill="rgb(220,122,19)" fg:x="130" fg:w="309"/><text x="1.8828%" y="335.50">xwor..</text></g><g><title>[[heap]] (491 samples, 6.17%)</title><rect x="0.0000%" y="341" width="6.1668%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="491"/><text x="0.2500%" y="351.50">[[heap]]</text></g><g><title>xword_generator::score (52 samples, 0.65%)</title><rect x="5.5137%" y="325" width="0.6531%" height="15" fill="rgb(240,193,28)" fg:x="439" fg:w="52"/><text x="5.7637%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="6.1668%" y="325" width="0.0628%" height="15" fill="rgb(216,20,37)" fg:x="491" fg:w="5"/><text x="6.4168%" y="335.50"></text></g><g><title>[libc-2.31.so] (54 samples, 0.68%)</title><rect x="6.2296%" y="325" width="0.6782%" height="15" fill="rgb(206,188,39)" fg:x="496" fg:w="54"/><text x="6.4796%" y="335.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="6.9078%" y="325" width="0.0628%" height="15" fill="rgb(217,207,13)" fg:x="550" fg:w="5"/><text x="7.1578%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.21%)</title><rect x="6.9706%" y="325" width="0.2135%" height="15" fill="rgb(231,73,38)" fg:x="555" fg:w="17"/><text x="7.2206%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.14%)</title><rect x="7.0460%" y="309" width="0.1382%" height="15" fill="rgb(225,20,46)" fg:x="561" fg:w="11"/><text x="7.2960%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="7.1841%" y="325" width="0.0251%" height="15" fill="rgb(210,31,41)" fg:x="572" fg:w="2"/><text x="7.4341%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="7.2092%" y="325" width="0.0377%" height="15" fill="rgb(221,200,47)" fg:x="574" fg:w="3"/><text x="7.4592%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.01%)</title><rect x="7.2469%" y="325" width="0.0126%" height="15" fill="rgb(226,26,5)" fg:x="577" fg:w="1"/><text x="7.4969%" y="335.50"></text></g><g><title>[[stack]] (114 samples, 1.43%)</title><rect x="6.1668%" y="341" width="1.4318%" height="15" fill="rgb(249,33,26)" fg:x="491" fg:w="114"/><text x="6.4168%" y="351.50"></text></g><g><title>xword_generator::score (27 samples, 0.34%)</title><rect x="7.2595%" y="325" width="0.3391%" height="15" fill="rgb(235,183,28)" fg:x="578" fg:w="27"/><text x="7.5095%" y="335.50"></text></g><g><title>[ld-2.31.so] (6 samples, 0.08%)</title><rect x="7.5986%" y="341" width="0.0754%" height="15" fill="rgb(221,5,38)" fg:x="605" fg:w="6"/><text x="7.8486%" y="351.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="325" width="0.0126%" height="15" fill="rgb(247,18,42)" fg:x="610" fg:w="1"/><text x="7.9114%" y="335.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="309" width="0.0126%" height="15" fill="rgb(241,131,45)" fg:x="610" fg:w="1"/><text x="7.9114%" y="319.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="293" width="0.0126%" height="15" fill="rgb(249,31,29)" fg:x="610" fg:w="1"/><text x="7.9114%" y="303.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="277" width="0.0126%" height="15" fill="rgb(225,111,53)" fg:x="610" fg:w="1"/><text x="7.9114%" y="287.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="7.6614%" y="261" width="0.0126%" height="15" fill="rgb(238,160,17)" fg:x="610" fg:w="1"/><text x="7.9114%" y="271.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="245" width="0.0126%" height="15" fill="rgb(214,148,48)" fg:x="610" fg:w="1"/><text x="7.9114%" y="255.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="229" width="0.0126%" height="15" fill="rgb(232,36,49)" fg:x="610" fg:w="1"/><text x="7.9114%" y="239.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="7.6614%" y="213" width="0.0126%" height="15" fill="rgb(209,103,24)" fg:x="610" fg:w="1"/><text x="7.9114%" y="223.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.63%)</title><rect x="7.6740%" y="341" width="0.6280%" height="15" fill="rgb(229,88,8)" fg:x="611" fg:w="50"/><text x="7.9240%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.39%)</title><rect x="8.3019%" y="325" width="0.3893%" height="15" fill="rgb(213,181,19)" fg:x="661" fg:w="31"/><text x="8.5519%" y="335.50"></text></g><g><title>[libc-2.31.so] (332 samples, 4.17%)</title><rect x="8.6913%" y="325" width="4.1698%" height="15" fill="rgb(254,191,54)" fg:x="692" fg:w="332"/><text x="8.9413%" y="335.50">[libc..</text></g><g><title>__libc_malloc (52 samples, 0.65%)</title><rect x="12.8611%" y="325" width="0.6531%" height="15" fill="rgb(241,83,37)" fg:x="1024" fg:w="52"/><text x="13.1111%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.31%)</title><rect x="13.5142%" y="325" width="0.3140%" height="15" fill="rgb(233,36,39)" fg:x="1076" fg:w="25"/><text x="13.7642%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.14%)</title><rect x="13.6900%" y="309" width="0.1382%" height="15" fill="rgb(226,3,54)" fg:x="1090" fg:w="11"/><text x="13.9400%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (11 samples, 0.14%)</title><rect x="13.6900%" y="293" width="0.1382%" height="15" fill="rgb(245,192,40)" fg:x="1090" fg:w="11"/><text x="13.9400%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (11 samples, 0.14%)</title><rect x="13.6900%" y="277" width="0.1382%" height="15" fill="rgb(238,167,29)" fg:x="1090" fg:w="11"/><text x="13.9400%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.13%)</title><rect x="13.8282%" y="325" width="0.1256%" height="15" fill="rgb(232,182,51)" fg:x="1101" fg:w="10"/><text x="14.0782%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (84 samples, 1.06%)</title><rect x="13.9538%" y="325" width="1.0550%" height="15" fill="rgb(231,60,39)" fg:x="1111" fg:w="84"/><text x="14.2038%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.33%)</title><rect x="15.0088%" y="325" width="0.3266%" height="15" fill="rgb(208,69,12)" fg:x="1195" fg:w="26"/><text x="15.2588%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (17 samples, 0.21%)</title><rect x="15.3353%" y="325" width="0.2135%" height="15" fill="rgb(235,93,37)" fg:x="1221" fg:w="17"/><text x="15.5853%" y="335.50"></text></g><g><title>csv_core::reader::Reader::read_record (1 samples, 0.01%)</title><rect x="15.5489%" y="325" width="0.0126%" height="15" fill="rgb(213,116,39)" fg:x="1238" fg:w="1"/><text x="15.7989%" y="335.50"></text></g><g><title>realloc (41 samples, 0.51%)</title><rect x="15.5614%" y="325" width="0.5149%" height="15" fill="rgb(222,207,29)" fg:x="1239" fg:w="41"/><text x="15.8114%" y="335.50"></text></g><g><title>xword_generator::XWord::get_entry (47 samples, 0.59%)</title><rect x="16.0764%" y="325" width="0.5903%" height="15" fill="rgb(206,96,30)" fg:x="1280" fg:w="47"/><text x="16.3264%" y="335.50"></text></g><g><title>xword_generator::XWord::set_entry (27 samples, 0.34%)</title><rect x="16.6667%" y="325" width="0.3391%" height="15" fill="rgb(218,138,4)" fg:x="1327" fg:w="27"/><text x="16.9167%" y="335.50"></text></g><g><title>xword_generator::generate_xwords (55 samples, 0.69%)</title><rect x="17.0058%" y="325" width="0.6908%" height="15" fill="rgb(250,191,14)" fg:x="1354" fg:w="55"/><text x="17.2558%" y="335.50"></text></g><g><title>xword_generator::get_matching_words (88 samples, 1.11%)</title><rect x="17.6966%" y="325" width="1.1052%" height="15" fill="rgb(239,60,40)" fg:x="1409" fg:w="88"/><text x="17.9466%" y="335.50"></text></g><g><title>[unknown] (841 samples, 10.56%)</title><rect x="8.3019%" y="341" width="10.5627%" height="15" fill="rgb(206,27,48)" fg:x="661" fg:w="841"/><text x="8.5519%" y="351.50">[unknown]</text></g><g><title>xword_generator::main (5 samples, 0.06%)</title><rect x="18.8018%" y="325" width="0.0628%" height="15" fill="rgb(225,35,8)" fg:x="1497" fg:w="5"/><text x="19.0518%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="18.8646%" y="341" width="0.0126%" height="15" fill="rgb(250,213,24)" fg:x="1502" fg:w="1"/><text x="19.1146%" y="351.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.20%)</title><rect x="19.2791%" y="261" width="0.2010%" height="15" fill="rgb(247,123,22)" fg:x="1535" fg:w="16"/><text x="19.5291%" y="271.50"></text></g><g><title>__libc_malloc (10 samples, 0.13%)</title><rect x="19.4800%" y="261" width="0.1256%" height="15" fill="rgb(231,138,38)" fg:x="1551" fg:w="10"/><text x="19.7300%" y="271.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="19.5931%" y="245" width="0.0126%" height="15" fill="rgb(231,145,46)" fg:x="1560" fg:w="1"/><text x="19.8431%" y="255.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="19.6056%" y="261" width="0.0377%" height="15" fill="rgb(251,118,11)" fg:x="1561" fg:w="3"/><text x="19.8556%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="19.6433%" y="261" width="0.0251%" height="15" fill="rgb(217,147,25)" fg:x="1564" fg:w="2"/><text x="19.8933%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.6559%" y="245" width="0.0126%" height="15" fill="rgb(247,81,37)" fg:x="1565" fg:w="1"/><text x="19.9059%" y="255.50"></text></g><g><title>csv::byte_record::ByteRecord::validate (1 samples, 0.01%)</title><rect x="19.6684%" y="261" width="0.0126%" height="15" fill="rgb(209,12,38)" fg:x="1566" fg:w="1"/><text x="19.9184%" y="271.50"></text></g><g><title>csv_core::reader::Reader::read_record (45 samples, 0.57%)</title><rect x="19.6810%" y="261" width="0.5652%" height="15" fill="rgb(227,1,9)" fg:x="1567" fg:w="45"/><text x="19.9310%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="20.2462%" y="261" width="0.0126%" height="15" fill="rgb(248,47,43)" fg:x="1612" fg:w="1"/><text x="20.4962%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="20.2462%" y="245" width="0.0126%" height="15" fill="rgb(221,10,30)" fg:x="1612" fg:w="1"/><text x="20.4962%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="20.2462%" y="229" width="0.0126%" height="15" fill="rgb(210,229,1)" fg:x="1612" fg:w="1"/><text x="20.4962%" y="239.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="20.2838%" y="197" width="0.0126%" height="15" fill="rgb(222,148,37)" fg:x="1615" fg:w="1"/><text x="20.5338%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="20.2964%" y="197" width="0.0251%" height="15" fill="rgb(234,67,33)" fg:x="1616" fg:w="2"/><text x="20.5464%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="20.3090%" y="181" width="0.0126%" height="15" fill="rgb(247,98,35)" fg:x="1617" fg:w="1"/><text x="20.5590%" y="191.50"></text></g><g><title>xword_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="20.3215%" y="197" width="0.0126%" height="15" fill="rgb(247,138,52)" fg:x="1618" fg:w="1"/><text x="20.5715%" y="207.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.28%)</title><rect x="20.8867%" y="181" width="0.2763%" height="15" fill="rgb(213,79,30)" fg:x="1663" fg:w="22"/><text x="21.1367%" y="191.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="21.1505%" y="165" width="0.0126%" height="15" fill="rgb(246,177,23)" fg:x="1684" fg:w="1"/><text x="21.4005%" y="175.50"></text></g><g><title>__libc_malloc (10 samples, 0.13%)</title><rect x="21.1630%" y="181" width="0.1256%" height="15" fill="rgb(230,62,27)" fg:x="1685" fg:w="10"/><text x="21.4130%" y="191.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="21.2635%" y="165" width="0.0251%" height="15" fill="rgb(216,154,8)" fg:x="1693" fg:w="2"/><text x="21.5135%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="21.2886%" y="181" width="0.0251%" height="15" fill="rgb(244,35,45)" fg:x="1695" fg:w="2"/><text x="21.5386%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="21.2886%" y="165" width="0.0251%" height="15" fill="rgb(251,115,12)" fg:x="1695" fg:w="2"/><text x="21.5386%" y="175.50"></text></g><g><title>realloc (2 samples, 0.03%)</title><rect x="21.2886%" y="149" width="0.0251%" height="15" fill="rgb(240,54,50)" fg:x="1695" fg:w="2"/><text x="21.5386%" y="159.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="21.3012%" y="133" width="0.0126%" height="15" fill="rgb(233,84,52)" fg:x="1696" fg:w="1"/><text x="21.5512%" y="143.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="21.3012%" y="117" width="0.0126%" height="15" fill="rgb(207,117,47)" fg:x="1696" fg:w="1"/><text x="21.5512%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.16%)</title><rect x="21.3137%" y="181" width="0.1633%" height="15" fill="rgb(249,43,39)" fg:x="1697" fg:w="13"/><text x="21.5637%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.14%)</title><rect x="21.3389%" y="165" width="0.1382%" height="15" fill="rgb(209,38,44)" fg:x="1699" fg:w="11"/><text x="21.5889%" y="175.50"></text></g><g><title>realloc (11 samples, 0.14%)</title><rect x="21.3389%" y="149" width="0.1382%" height="15" fill="rgb(236,212,23)" fg:x="1699" fg:w="11"/><text x="21.5889%" y="159.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.14%)</title><rect x="21.3389%" y="133" width="0.1382%" height="15" fill="rgb(242,79,21)" fg:x="1699" fg:w="11"/><text x="21.5889%" y="143.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.14%)</title><rect x="21.3389%" y="117" width="0.1382%" height="15" fill="rgb(211,96,35)" fg:x="1699" fg:w="11"/><text x="21.5889%" y="127.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.10%)</title><rect x="21.3765%" y="101" width="0.1005%" height="15" fill="rgb(253,215,40)" fg:x="1702" fg:w="8"/><text x="21.6265%" y="111.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="21.4770%" y="181" width="0.0377%" height="15" fill="rgb(211,81,21)" fg:x="1710" fg:w="3"/><text x="21.7270%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (48 samples, 0.60%)</title><rect x="21.5147%" y="181" width="0.6029%" height="15" fill="rgb(208,190,38)" fg:x="1713" fg:w="48"/><text x="21.7647%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.26%)</title><rect x="21.8538%" y="165" width="0.2638%" height="15" fill="rgb(235,213,38)" fg:x="1740" fg:w="21"/><text x="22.1038%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="22.1176%" y="165" width="0.0126%" height="15" fill="rgb(237,122,38)" fg:x="1761" fg:w="1"/><text x="22.3676%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="22.1176%" y="149" width="0.0126%" height="15" fill="rgb(244,218,35)" fg:x="1761" fg:w="1"/><text x="22.3676%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="22.1176%" y="133" width="0.0126%" height="15" fill="rgb(240,68,47)" fg:x="1761" fg:w="1"/><text x="22.3676%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="22.1176%" y="117" width="0.0126%" height="15" fill="rgb(210,16,53)" fg:x="1761" fg:w="1"/><text x="22.3676%" y="127.50"></text></g><g><title>xword_generator::XWord::get_entry (2 samples, 0.03%)</title><rect x="22.1176%" y="181" width="0.0251%" height="15" fill="rgb(235,124,12)" fg:x="1761" fg:w="2"/><text x="22.3676%" y="191.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.01%)</title><rect x="22.1301%" y="165" width="0.0126%" height="15" fill="rgb(224,169,11)" fg:x="1762" fg:w="1"/><text x="22.3801%" y="175.50"></text></g><g><title>xword_generator::XWord::set_entry (29 samples, 0.36%)</title><rect x="22.1427%" y="181" width="0.3642%" height="15" fill="rgb(250,166,2)" fg:x="1763" fg:w="29"/><text x="22.3927%" y="191.50"></text></g><g><title>[libc-2.31.so] (42 samples, 0.53%)</title><rect x="24.1773%" y="165" width="0.5275%" height="15" fill="rgb(242,216,29)" fg:x="1925" fg:w="42"/><text x="24.4273%" y="175.50"></text></g><g><title>__libc_malloc (17 samples, 0.21%)</title><rect x="24.7048%" y="165" width="0.2135%" height="15" fill="rgb(230,116,27)" fg:x="1967" fg:w="17"/><text x="24.9548%" y="175.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="24.8556%" y="149" width="0.0628%" height="15" fill="rgb(228,99,48)" fg:x="1979" fg:w="5"/><text x="25.1056%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.30%)</title><rect x="24.9184%" y="165" width="0.3014%" height="15" fill="rgb(253,11,6)" fg:x="1984" fg:w="24"/><text x="25.1684%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.28%)</title><rect x="24.9435%" y="149" width="0.2763%" height="15" fill="rgb(247,143,39)" fg:x="1986" fg:w="22"/><text x="25.1935%" y="159.50"></text></g><g><title>realloc (18 samples, 0.23%)</title><rect x="24.9937%" y="133" width="0.2261%" height="15" fill="rgb(236,97,10)" fg:x="1990" fg:w="18"/><text x="25.2437%" y="143.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.15%)</title><rect x="25.0691%" y="117" width="0.1507%" height="15" fill="rgb(233,208,19)" fg:x="1996" fg:w="12"/><text x="25.3191%" y="127.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.13%)</title><rect x="25.0942%" y="101" width="0.1256%" height="15" fill="rgb(216,164,2)" fg:x="1998" fg:w="10"/><text x="25.3442%" y="111.50"></text></g><g><title>__libc_malloc (7 samples, 0.09%)</title><rect x="25.2700%" y="133" width="0.0879%" height="15" fill="rgb(220,129,5)" fg:x="2012" fg:w="7"/><text x="25.5200%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.19%)</title><rect x="25.2198%" y="165" width="0.1884%" height="15" fill="rgb(242,17,10)" fg:x="2008" fg:w="15"/><text x="25.4698%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.16%)</title><rect x="25.2449%" y="149" width="0.1633%" height="15" fill="rgb(242,107,0)" fg:x="2010" fg:w="13"/><text x="25.4949%" y="159.50"></text></g><g><title>realloc (4 samples, 0.05%)</title><rect x="25.3580%" y="133" width="0.0502%" height="15" fill="rgb(251,28,31)" fg:x="2019" fg:w="4"/><text x="25.6080%" y="143.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="25.3580%" y="117" width="0.0502%" height="15" fill="rgb(233,223,10)" fg:x="2019" fg:w="4"/><text x="25.6080%" y="127.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="25.3580%" y="101" width="0.0502%" height="15" fill="rgb(215,21,27)" fg:x="2019" fg:w="4"/><text x="25.6080%" y="111.50"></text></g><g><title>cfree (17 samples, 0.21%)</title><rect x="25.4082%" y="165" width="0.2135%" height="15" fill="rgb(232,23,21)" fg:x="2023" fg:w="17"/><text x="25.6582%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (86 samples, 1.08%)</title><rect x="25.6217%" y="165" width="1.0801%" height="15" fill="rgb(244,5,23)" fg:x="2040" fg:w="86"/><text x="25.8717%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (35 samples, 0.44%)</title><rect x="26.2622%" y="149" width="0.4396%" height="15" fill="rgb(226,81,46)" fg:x="2091" fg:w="35"/><text x="26.5122%" y="159.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="26.9530%" y="149" width="0.0502%" height="15" fill="rgb(247,70,30)" fg:x="2146" fg:w="4"/><text x="27.2030%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="27.0033%" y="149" width="0.0251%" height="15" fill="rgb(212,68,19)" fg:x="2150" fg:w="2"/><text x="27.2533%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.09%)</title><rect x="27.0284%" y="149" width="0.0879%" height="15" fill="rgb(240,187,13)" fg:x="2152" fg:w="7"/><text x="27.2784%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.09%)</title><rect x="27.0284%" y="133" width="0.0879%" height="15" fill="rgb(223,113,26)" fg:x="2152" fg:w="7"/><text x="27.2784%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.08%)</title><rect x="27.0409%" y="117" width="0.0754%" height="15" fill="rgb(206,192,2)" fg:x="2153" fg:w="6"/><text x="27.2909%" y="127.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="27.0786%" y="101" width="0.0377%" height="15" fill="rgb(241,108,4)" fg:x="2156" fg:w="3"/><text x="27.3286%" y="111.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="27.1163%" y="149" width="0.0251%" height="15" fill="rgb(247,173,49)" fg:x="2159" fg:w="2"/><text x="27.3663%" y="159.50"></text></g><g><title>xword_generator::XWord::get_entry (38 samples, 0.48%)</title><rect x="26.7018%" y="165" width="0.4773%" height="15" fill="rgb(224,114,35)" fg:x="2126" fg:w="38"/><text x="26.9518%" y="175.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (3 samples, 0.04%)</title><rect x="27.1414%" y="149" width="0.0377%" height="15" fill="rgb(245,159,27)" fg:x="2161" fg:w="3"/><text x="27.3914%" y="159.50"></text></g><g><title>xword_generator::XWord::set_entry (79 samples, 0.99%)</title><rect x="27.1791%" y="165" width="0.9922%" height="15" fill="rgb(245,172,44)" fg:x="2164" fg:w="79"/><text x="27.4291%" y="175.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.50%)</title><rect x="29.8669%" y="149" width="0.5024%" height="15" fill="rgb(236,23,11)" fg:x="2378" fg:w="40"/><text x="30.1169%" y="159.50"></text></g><g><title>__libc_malloc (16 samples, 0.20%)</title><rect x="30.3693%" y="149" width="0.2010%" height="15" fill="rgb(205,117,38)" fg:x="2418" fg:w="16"/><text x="30.6193%" y="159.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="30.5576%" y="133" width="0.0126%" height="15" fill="rgb(237,72,25)" fg:x="2433" fg:w="1"/><text x="30.8076%" y="143.50"></text></g><g><title>@plt (3 samples, 0.04%)</title><rect x="30.8716%" y="85" width="0.0377%" height="15" fill="rgb(244,70,9)" fg:x="2458" fg:w="3"/><text x="31.1216%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 0.59%)</title><rect x="30.5702%" y="149" width="0.5903%" height="15" fill="rgb(217,125,39)" fg:x="2434" fg:w="47"/><text x="30.8202%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.51%)</title><rect x="30.6456%" y="133" width="0.5149%" height="15" fill="rgb(235,36,10)" fg:x="2440" fg:w="41"/><text x="30.8956%" y="143.50"></text></g><g><title>realloc (37 samples, 0.46%)</title><rect x="30.6958%" y="117" width="0.4647%" height="15" fill="rgb(251,123,47)" fg:x="2444" fg:w="37"/><text x="30.9458%" y="127.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.41%)</title><rect x="30.7460%" y="101" width="0.4145%" height="15" fill="rgb(221,13,13)" fg:x="2448" fg:w="33"/><text x="30.9960%" y="111.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.25%)</title><rect x="30.9093%" y="85" width="0.2512%" height="15" fill="rgb(238,131,9)" fg:x="2461" fg:w="20"/><text x="31.1593%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.05%)</title><rect x="31.1605%" y="149" width="0.0502%" height="15" fill="rgb(211,50,8)" fg:x="2481" fg:w="4"/><text x="31.4105%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="31.1605%" y="133" width="0.0502%" height="15" fill="rgb(245,182,24)" fg:x="2481" fg:w="4"/><text x="31.4105%" y="143.50"></text></g><g><title>__libc_malloc (4 samples, 0.05%)</title><rect x="31.1605%" y="117" width="0.0502%" height="15" fill="rgb(242,14,37)" fg:x="2481" fg:w="4"/><text x="31.4105%" y="127.50"></text></g><g><title>cfree (13 samples, 0.16%)</title><rect x="31.2108%" y="149" width="0.1633%" height="15" fill="rgb(246,228,12)" fg:x="2485" fg:w="13"/><text x="31.4608%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (82 samples, 1.03%)</title><rect x="31.3740%" y="149" width="1.0299%" height="15" fill="rgb(213,55,15)" fg:x="2498" fg:w="82"/><text x="31.6240%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.41%)</title><rect x="31.9894%" y="133" width="0.4145%" height="15" fill="rgb(209,9,3)" fg:x="2547" fg:w="33"/><text x="32.2394%" y="143.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.14%)</title><rect x="32.7556%" y="133" width="0.1382%" height="15" fill="rgb(230,59,30)" fg:x="2608" fg:w="11"/><text x="33.0056%" y="143.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="32.8937%" y="133" width="0.0377%" height="15" fill="rgb(209,121,21)" fg:x="2619" fg:w="3"/><text x="33.1437%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.05%)</title><rect x="32.9440%" y="101" width="0.0502%" height="15" fill="rgb(220,109,13)" fg:x="2623" fg:w="4"/><text x="33.1940%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.23%)</title><rect x="32.9942%" y="101" width="0.2261%" height="15" fill="rgb(232,18,1)" fg:x="2627" fg:w="18"/><text x="33.2442%" y="111.50"></text></g><g><title>__libc_malloc (9 samples, 0.11%)</title><rect x="33.1073%" y="85" width="0.1130%" height="15" fill="rgb(215,41,42)" fg:x="2636" fg:w="9"/><text x="33.3573%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="33.2203%" y="101" width="0.0126%" height="15" fill="rgb(224,123,36)" fg:x="2645" fg:w="1"/><text x="33.4703%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="33.2203%" y="85" width="0.0126%" height="15" fill="rgb(240,125,3)" fg:x="2645" fg:w="1"/><text x="33.4703%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.31%)</title><rect x="32.9314%" y="133" width="0.3140%" height="15" fill="rgb(205,98,50)" fg:x="2622" fg:w="25"/><text x="33.1814%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.31%)</title><rect x="32.9314%" y="117" width="0.3140%" height="15" fill="rgb(205,185,37)" fg:x="2622" fg:w="25"/><text x="33.1814%" y="127.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="33.2329%" y="101" width="0.0126%" height="15" fill="rgb(238,207,15)" fg:x="2646" fg:w="1"/><text x="33.4829%" y="111.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="33.2329%" y="85" width="0.0126%" height="15" fill="rgb(213,199,42)" fg:x="2646" fg:w="1"/><text x="33.4829%" y="95.50"></text></g><g><title>cfree (2 samples, 0.03%)</title><rect x="33.2454%" y="133" width="0.0251%" height="15" fill="rgb(235,201,11)" fg:x="2647" fg:w="2"/><text x="33.4954%" y="143.50"></text></g><g><title>xword_generator::XWord::get_entry (77 samples, 0.97%)</title><rect x="32.4039%" y="149" width="0.9671%" height="15" fill="rgb(207,46,11)" fg:x="2580" fg:w="77"/><text x="32.6539%" y="159.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (8 samples, 0.10%)</title><rect x="33.2705%" y="133" width="0.1005%" height="15" fill="rgb(241,35,35)" fg:x="2649" fg:w="8"/><text x="33.5205%" y="143.50"></text></g><g><title>xword_generator::XWord::set_entry (39 samples, 0.49%)</title><rect x="33.3710%" y="149" width="0.4898%" height="15" fill="rgb(243,32,47)" fg:x="2657" fg:w="39"/><text x="33.6210%" y="159.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.15%)</title><rect x="34.4386%" y="133" width="0.1507%" height="15" fill="rgb(247,202,23)" fg:x="2742" fg:w="12"/><text x="34.6886%" y="143.50"></text></g><g><title>__libc_malloc (10 samples, 0.13%)</title><rect x="34.5893%" y="133" width="0.1256%" height="15" fill="rgb(219,102,11)" fg:x="2754" fg:w="10"/><text x="34.8393%" y="143.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="34.6898%" y="117" width="0.0251%" height="15" fill="rgb(243,110,44)" fg:x="2762" fg:w="2"/><text x="34.9398%" y="127.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="34.7023%" y="101" width="0.0126%" height="15" fill="rgb(222,74,54)" fg:x="2763" fg:w="1"/><text x="34.9523%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.39%)</title><rect x="34.7149%" y="133" width="0.3893%" height="15" fill="rgb(216,99,12)" fg:x="2764" fg:w="31"/><text x="34.9649%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.35%)</title><rect x="34.7526%" y="117" width="0.3517%" height="15" fill="rgb(226,22,26)" fg:x="2767" fg:w="28"/><text x="35.0026%" y="127.50"></text></g><g><title>realloc (28 samples, 0.35%)</title><rect x="34.7526%" y="101" width="0.3517%" height="15" fill="rgb(217,163,10)" fg:x="2767" fg:w="28"/><text x="35.0026%" y="111.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.20%)</title><rect x="34.9033%" y="85" width="0.2010%" height="15" fill="rgb(213,25,53)" fg:x="2779" fg:w="16"/><text x="35.1533%" y="95.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.16%)</title><rect x="34.9410%" y="69" width="0.1633%" height="15" fill="rgb(252,105,26)" fg:x="2782" fg:w="13"/><text x="35.1910%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="35.1042%" y="133" width="0.0126%" height="15" fill="rgb(220,39,43)" fg:x="2795" fg:w="1"/><text x="35.3542%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="35.1042%" y="117" width="0.0126%" height="15" fill="rgb(229,68,48)" fg:x="2795" fg:w="1"/><text x="35.3542%" y="127.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="35.1168%" y="133" width="0.0628%" height="15" fill="rgb(252,8,32)" fg:x="2796" fg:w="5"/><text x="35.3668%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.21%)</title><rect x="35.1796%" y="133" width="0.2135%" height="15" fill="rgb(223,20,43)" fg:x="2801" fg:w="17"/><text x="35.4296%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.15%)</title><rect x="35.2424%" y="117" width="0.1507%" height="15" fill="rgb(229,81,49)" fg:x="2806" fg:w="12"/><text x="35.4924%" y="127.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.08%)</title><rect x="35.6066%" y="117" width="0.0754%" height="15" fill="rgb(236,28,36)" fg:x="2835" fg:w="6"/><text x="35.8566%" y="127.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="35.6820%" y="117" width="0.0628%" height="15" fill="rgb(249,185,26)" fg:x="2841" fg:w="5"/><text x="35.9320%" y="127.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.7322%" y="101" width="0.0126%" height="15" fill="rgb(249,174,33)" fg:x="2845" fg:w="1"/><text x="35.9822%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.14%)</title><rect x="35.7448%" y="117" width="0.1382%" height="15" fill="rgb(233,201,37)" fg:x="2846" fg:w="11"/><text x="35.9948%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.14%)</title><rect x="35.7448%" y="101" width="0.1382%" height="15" fill="rgb(221,78,26)" fg:x="2846" fg:w="11"/><text x="35.9948%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.08%)</title><rect x="35.8076%" y="85" width="0.0754%" height="15" fill="rgb(250,127,30)" fg:x="2851" fg:w="6"/><text x="36.0576%" y="95.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="35.8201%" y="69" width="0.0628%" height="15" fill="rgb(230,49,44)" fg:x="2852" fg:w="5"/><text x="36.0701%" y="79.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.8704%" y="53" width="0.0126%" height="15" fill="rgb(229,67,23)" fg:x="2856" fg:w="1"/><text x="36.1204%" y="63.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="35.8829%" y="117" width="0.0502%" height="15" fill="rgb(249,83,47)" fg:x="2857" fg:w="4"/><text x="36.1329%" y="127.50"></text></g><g><title>xword_generator::XWord::get_entry (47 samples, 0.59%)</title><rect x="35.3931%" y="133" width="0.5903%" height="15" fill="rgb(215,43,3)" fg:x="2818" fg:w="47"/><text x="35.6431%" y="143.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (4 samples, 0.05%)</title><rect x="35.9332%" y="117" width="0.0502%" height="15" fill="rgb(238,154,13)" fg:x="2861" fg:w="4"/><text x="36.1832%" y="127.50"></text></g><g><title>xword_generator::XWord::set_entry (2 samples, 0.03%)</title><rect x="35.9834%" y="133" width="0.0251%" height="15" fill="rgb(219,56,2)" fg:x="2865" fg:w="2"/><text x="36.2334%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="36.0085%" y="117" width="0.0251%" height="15" fill="rgb(233,0,4)" fg:x="2867" fg:w="2"/><text x="36.2585%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="36.0085%" y="101" width="0.0251%" height="15" fill="rgb(235,30,7)" fg:x="2867" fg:w="2"/><text x="36.2585%" y="111.50"></text></g><g><title>realloc (2 samples, 0.03%)</title><rect x="36.0085%" y="85" width="0.0251%" height="15" fill="rgb(250,79,13)" fg:x="2867" fg:w="2"/><text x="36.2585%" y="95.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.0211%" y="69" width="0.0126%" height="15" fill="rgb(211,146,34)" fg:x="2868" fg:w="1"/><text x="36.2711%" y="79.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.0211%" y="53" width="0.0126%" height="15" fill="rgb(228,22,38)" fg:x="2868" fg:w="1"/><text x="36.2711%" y="63.50"></text></g><g><title>xword_generator::XWord::get_entry (3 samples, 0.04%)</title><rect x="36.0337%" y="117" width="0.0377%" height="15" fill="rgb(235,168,5)" fg:x="2869" fg:w="3"/><text x="36.2837%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="36.0462%" y="101" width="0.0251%" height="15" fill="rgb(221,155,16)" fg:x="2870" fg:w="2"/><text x="36.2962%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="36.0462%" y="85" width="0.0251%" height="15" fill="rgb(215,215,53)" fg:x="2870" fg:w="2"/><text x="36.2962%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="36.0462%" y="69" width="0.0251%" height="15" fill="rgb(223,4,10)" fg:x="2870" fg:w="2"/><text x="36.2962%" y="79.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="36.0462%" y="53" width="0.0251%" height="15" fill="rgb(234,103,6)" fg:x="2870" fg:w="2"/><text x="36.2962%" y="63.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="36.0462%" y="37" width="0.0251%" height="15" fill="rgb(227,97,0)" fg:x="2870" fg:w="2"/><text x="36.2962%" y="47.50"></text></g><g><title>xword_generator::generate_xwords (8 samples, 0.10%)</title><rect x="36.0085%" y="133" width="0.1005%" height="15" fill="rgb(234,150,53)" fg:x="2867" fg:w="8"/><text x="36.2585%" y="143.50"></text></g><g><title>xword_generator::get_matching_words (3 samples, 0.04%)</title><rect x="36.0713%" y="117" width="0.0377%" height="15" fill="rgb(228,201,54)" fg:x="2872" fg:w="3"/><text x="36.3213%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="36.0965%" y="101" width="0.0126%" height="15" fill="rgb(222,22,37)" fg:x="2874" fg:w="1"/><text x="36.3465%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="36.0965%" y="85" width="0.0126%" height="15" fill="rgb(237,53,32)" fg:x="2874" fg:w="1"/><text x="36.3465%" y="95.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="36.0965%" y="69" width="0.0126%" height="15" fill="rgb(233,25,53)" fg:x="2874" fg:w="1"/><text x="36.3465%" y="79.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.65%)</title><rect x="37.0384%" y="117" width="0.6531%" height="15" fill="rgb(210,40,34)" fg:x="2949" fg:w="52"/><text x="37.2884%" y="127.50"></text></g><g><title>__libc_malloc (4 samples, 0.05%)</title><rect x="37.6915%" y="117" width="0.0502%" height="15" fill="rgb(241,220,44)" fg:x="3001" fg:w="4"/><text x="37.9415%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.21%)</title><rect x="37.7418%" y="117" width="0.2135%" height="15" fill="rgb(235,28,35)" fg:x="3005" fg:w="17"/><text x="37.9918%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.18%)</title><rect x="37.7795%" y="101" width="0.1758%" height="15" fill="rgb(210,56,17)" fg:x="3008" fg:w="14"/><text x="38.0295%" y="111.50"></text></g><g><title>realloc (11 samples, 0.14%)</title><rect x="37.8171%" y="85" width="0.1382%" height="15" fill="rgb(224,130,29)" fg:x="3011" fg:w="11"/><text x="38.0671%" y="95.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.09%)</title><rect x="37.8674%" y="69" width="0.0879%" height="15" fill="rgb(235,212,8)" fg:x="3015" fg:w="7"/><text x="38.1174%" y="79.50"></text></g><g><title>xword_generator::get_matching_words (148 samples, 1.86%)</title><rect x="36.1090%" y="133" width="1.8588%" height="15" fill="rgb(223,33,50)" fg:x="2875" fg:w="148"/><text x="36.3590%" y="143.50">x..</text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="37.9553%" y="117" width="0.0126%" height="15" fill="rgb(219,149,13)" fg:x="3022" fg:w="1"/><text x="38.2053%" y="127.50"></text></g><g><title>xword_generator::generate_xwords (329 samples, 4.13%)</title><rect x="33.8608%" y="149" width="4.1321%" height="15" fill="rgb(250,156,29)" fg:x="2696" fg:w="329"/><text x="34.1108%" y="159.50">xword..</text></g><g><title>xword_generator::score (2 samples, 0.03%)</title><rect x="37.9678%" y="133" width="0.0251%" height="15" fill="rgb(216,193,19)" fg:x="3023" fg:w="2"/><text x="38.2178%" y="143.50"></text></g><g><title>xword_generator::get_matching_words (2 samples, 0.03%)</title><rect x="37.9678%" y="117" width="0.0251%" height="15" fill="rgb(216,135,14)" fg:x="3023" fg:w="2"/><text x="38.2178%" y="127.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="37.9804%" y="101" width="0.0126%" height="15" fill="rgb(241,47,5)" fg:x="3024" fg:w="1"/><text x="38.2304%" y="111.50"></text></g><g><title>[libc-2.31.so] (75 samples, 0.94%)</title><rect x="39.9648%" y="133" width="0.9420%" height="15" fill="rgb(233,42,35)" fg:x="3182" fg:w="75"/><text x="40.2148%" y="143.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="40.9068%" y="133" width="0.0377%" height="15" fill="rgb(231,13,6)" fg:x="3257" fg:w="3"/><text x="41.1568%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (37 samples, 0.46%)</title><rect x="40.9445%" y="133" width="0.4647%" height="15" fill="rgb(207,181,40)" fg:x="3260" fg:w="37"/><text x="41.1945%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.34%)</title><rect x="41.0701%" y="117" width="0.3391%" height="15" fill="rgb(254,173,49)" fg:x="3270" fg:w="27"/><text x="41.3201%" y="127.50"></text></g><g><title>realloc (23 samples, 0.29%)</title><rect x="41.1203%" y="101" width="0.2889%" height="15" fill="rgb(221,1,38)" fg:x="3274" fg:w="23"/><text x="41.3703%" y="111.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.14%)</title><rect x="41.2710%" y="85" width="0.1382%" height="15" fill="rgb(206,124,46)" fg:x="3286" fg:w="11"/><text x="41.5210%" y="95.50"></text></g><g><title>xword_generator::get_matching_words (278 samples, 3.49%)</title><rect x="37.9930%" y="149" width="3.4916%" height="15" fill="rgb(249,21,11)" fg:x="3025" fg:w="278"/><text x="38.2430%" y="159.50">xwo..</text></g><g><title>cfree (6 samples, 0.08%)</title><rect x="41.4092%" y="133" width="0.0754%" height="15" fill="rgb(222,201,40)" fg:x="3297" fg:w="6"/><text x="41.6592%" y="143.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.18%)</title><rect x="41.8111%" y="133" width="0.1758%" height="15" fill="rgb(235,61,29)" fg:x="3329" fg:w="14"/><text x="42.0611%" y="143.50"></text></g><g><title>cfree (8 samples, 0.10%)</title><rect x="41.9869%" y="133" width="0.1005%" height="15" fill="rgb(219,207,3)" fg:x="3343" fg:w="8"/><text x="42.2369%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (60 samples, 0.75%)</title><rect x="42.0874%" y="133" width="0.7536%" height="15" fill="rgb(222,56,46)" fg:x="3351" fg:w="60"/><text x="42.3374%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.40%)</title><rect x="42.4391%" y="117" width="0.4019%" height="15" fill="rgb(239,76,54)" fg:x="3379" fg:w="32"/><text x="42.6891%" y="127.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.19%)</title><rect x="43.6071%" y="117" width="0.1884%" height="15" fill="rgb(231,124,27)" fg:x="3472" fg:w="15"/><text x="43.8571%" y="127.50"></text></g><g><title>__libc_malloc (10 samples, 0.13%)</title><rect x="43.7955%" y="117" width="0.1256%" height="15" fill="rgb(249,195,6)" fg:x="3487" fg:w="10"/><text x="44.0455%" y="127.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="43.9086%" y="101" width="0.0126%" height="15" fill="rgb(237,174,47)" fg:x="3496" fg:w="1"/><text x="44.1586%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.03%)</title><rect x="43.9965%" y="85" width="0.0251%" height="15" fill="rgb(206,201,31)" fg:x="3503" fg:w="2"/><text x="44.2465%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.31%)</title><rect x="44.0216%" y="85" width="0.3140%" height="15" fill="rgb(231,57,52)" fg:x="3505" fg:w="25"/><text x="44.2716%" y="95.50"></text></g><g><title>__libc_malloc (18 samples, 0.23%)</title><rect x="44.1095%" y="69" width="0.2261%" height="15" fill="rgb(248,177,22)" fg:x="3512" fg:w="18"/><text x="44.3595%" y="79.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="44.2854%" y="53" width="0.0502%" height="15" fill="rgb(215,211,37)" fg:x="3526" fg:w="4"/><text x="44.5354%" y="63.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.03%)</title><rect x="44.3356%" y="85" width="0.0251%" height="15" fill="rgb(241,128,51)" fg:x="3530" fg:w="2"/><text x="44.5856%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.03%)</title><rect x="44.3356%" y="69" width="0.0251%" height="15" fill="rgb(227,165,31)" fg:x="3530" fg:w="2"/><text x="44.5856%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.45%)</title><rect x="43.9211%" y="117" width="0.4521%" height="15" fill="rgb(228,167,24)" fg:x="3497" fg:w="36"/><text x="44.1711%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.45%)</title><rect x="43.9211%" y="101" width="0.4521%" height="15" fill="rgb(228,143,12)" fg:x="3497" fg:w="36"/><text x="44.1711%" y="111.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="44.3607%" y="85" width="0.0126%" height="15" fill="rgb(249,149,8)" fg:x="3532" fg:w="1"/><text x="44.6107%" y="95.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="44.3607%" y="69" width="0.0126%" height="15" fill="rgb(243,35,44)" fg:x="3532" fg:w="1"/><text x="44.6107%" y="79.50"></text></g><g><title>cfree (7 samples, 0.09%)</title><rect x="44.3733%" y="117" width="0.0879%" height="15" fill="rgb(246,89,9)" fg:x="3533" fg:w="7"/><text x="44.6233%" y="127.50"></text></g><g><title>xword_generator::XWord::get_entry (156 samples, 1.96%)</title><rect x="42.8410%" y="133" width="1.9593%" height="15" fill="rgb(233,213,13)" fg:x="3411" fg:w="156"/><text x="43.0910%" y="143.50">x..</text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (27 samples, 0.34%)</title><rect x="44.4612%" y="117" width="0.3391%" height="15" fill="rgb(233,141,41)" fg:x="3540" fg:w="27"/><text x="44.7112%" y="127.50"></text></g><g><title>xword_generator::XWord::set_entry (43 samples, 0.54%)</title><rect x="44.8003%" y="133" width="0.5401%" height="15" fill="rgb(239,167,4)" fg:x="3567" fg:w="43"/><text x="45.0503%" y="143.50"></text></g><g><title>[libc-2.31.so] (144 samples, 1.81%)</title><rect x="47.2494%" y="117" width="1.8086%" height="15" fill="rgb(209,217,16)" fg:x="3762" fg:w="144"/><text x="47.4994%" y="127.50">[..</text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="49.0580%" y="117" width="0.0251%" height="15" fill="rgb(219,88,35)" fg:x="3906" fg:w="2"/><text x="49.3080%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.18%)</title><rect x="49.0831%" y="117" width="0.1758%" height="15" fill="rgb(220,193,23)" fg:x="3908" fg:w="14"/><text x="49.3331%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.13%)</title><rect x="49.1334%" y="101" width="0.1256%" height="15" fill="rgb(230,90,52)" fg:x="3912" fg:w="10"/><text x="49.3834%" y="111.50"></text></g><g><title>realloc (10 samples, 0.13%)</title><rect x="49.1334%" y="85" width="0.1256%" height="15" fill="rgb(252,106,19)" fg:x="3912" fg:w="10"/><text x="49.3834%" y="95.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="49.2339%" y="69" width="0.0251%" height="15" fill="rgb(206,74,20)" fg:x="3920" fg:w="2"/><text x="49.4839%" y="79.50"></text></g><g><title>xword_generator::generate_xwords (1,682 samples, 21.13%)</title><rect x="28.1713%" y="165" width="21.1253%" height="15" fill="rgb(230,138,44)" fg:x="2243" fg:w="1682"/><text x="28.4213%" y="175.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (622 samples, 7.81%)</title><rect x="41.4846%" y="149" width="7.8121%" height="15" fill="rgb(235,182,43)" fg:x="3303" fg:w="622"/><text x="41.7346%" y="159.50">xword_gener..</text></g><g><title>xword_generator::get_matching_words (315 samples, 3.96%)</title><rect x="45.3404%" y="133" width="3.9563%" height="15" fill="rgb(242,16,51)" fg:x="3610" fg:w="315"/><text x="45.5904%" y="143.50">xwor..</text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="49.2590%" y="117" width="0.0377%" height="15" fill="rgb(248,9,4)" fg:x="3922" fg:w="3"/><text x="49.5090%" y="127.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.69%)</title><rect x="50.2010%" y="149" width="0.6908%" height="15" fill="rgb(210,31,22)" fg:x="3997" fg:w="55"/><text x="50.4510%" y="159.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="50.8917%" y="149" width="0.0628%" height="15" fill="rgb(239,54,39)" fg:x="4052" fg:w="5"/><text x="51.1417%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.13%)</title><rect x="50.9545%" y="149" width="0.1256%" height="15" fill="rgb(230,99,41)" fg:x="4057" fg:w="10"/><text x="51.2045%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="50.9671%" y="133" width="0.1130%" height="15" fill="rgb(253,106,12)" fg:x="4058" fg:w="9"/><text x="51.2171%" y="143.50"></text></g><g><title>realloc (6 samples, 0.08%)</title><rect x="51.0048%" y="117" width="0.0754%" height="15" fill="rgb(213,46,41)" fg:x="4061" fg:w="6"/><text x="51.2548%" y="127.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="51.0550%" y="101" width="0.0251%" height="15" fill="rgb(215,133,35)" fg:x="4065" fg:w="2"/><text x="51.3050%" y="111.50"></text></g><g><title>xword_generator::get_matching_words (145 samples, 1.82%)</title><rect x="49.2967%" y="165" width="1.8212%" height="15" fill="rgb(213,28,5)" fg:x="3925" fg:w="145"/><text x="49.5467%" y="175.50">x..</text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="51.0801%" y="149" width="0.0377%" height="15" fill="rgb(215,77,49)" fg:x="4067" fg:w="3"/><text x="51.3301%" y="159.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.64%)</title><rect x="52.4617%" y="149" width="0.6405%" height="15" fill="rgb(248,100,22)" fg:x="4177" fg:w="51"/><text x="52.7117%" y="159.50"></text></g><g><title>cfree (27 samples, 0.34%)</title><rect x="53.1022%" y="149" width="0.3391%" height="15" fill="rgb(208,67,9)" fg:x="4228" fg:w="27"/><text x="53.3522%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (149 samples, 1.87%)</title><rect x="53.4413%" y="149" width="1.8714%" height="15" fill="rgb(219,133,21)" fg:x="4255" fg:w="149"/><text x="53.6913%" y="159.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (67 samples, 0.84%)</title><rect x="54.4712%" y="133" width="0.8415%" height="15" fill="rgb(246,46,29)" fg:x="4337" fg:w="67"/><text x="54.7212%" y="143.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.62%)</title><rect x="58.1638%" y="133" width="0.6154%" height="15" fill="rgb(246,185,52)" fg:x="4631" fg:w="49"/><text x="58.4138%" y="143.50"></text></g><g><title>__libc_malloc (34 samples, 0.43%)</title><rect x="58.7792%" y="133" width="0.4270%" height="15" fill="rgb(252,136,11)" fg:x="4680" fg:w="34"/><text x="59.0292%" y="143.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="59.1811%" y="117" width="0.0251%" height="15" fill="rgb(219,138,53)" fg:x="4712" fg:w="2"/><text x="59.4311%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.05%)</title><rect x="59.3569%" y="101" width="0.0502%" height="15" fill="rgb(211,51,23)" fg:x="4726" fg:w="4"/><text x="59.6069%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.68%)</title><rect x="59.4072%" y="101" width="0.6782%" height="15" fill="rgb(247,221,28)" fg:x="4730" fg:w="54"/><text x="59.6572%" y="111.50"></text></g><g><title>__libc_malloc (24 samples, 0.30%)</title><rect x="59.7840%" y="85" width="0.3014%" height="15" fill="rgb(251,222,45)" fg:x="4760" fg:w="24"/><text x="60.0340%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.08%)</title><rect x="60.0854%" y="101" width="0.0754%" height="15" fill="rgb(217,162,53)" fg:x="4784" fg:w="6"/><text x="60.3354%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.08%)</title><rect x="60.0854%" y="85" width="0.0754%" height="15" fill="rgb(229,93,14)" fg:x="4784" fg:w="6"/><text x="60.3354%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 1.02%)</title><rect x="59.2062%" y="133" width="1.0173%" height="15" fill="rgb(209,67,49)" fg:x="4714" fg:w="81"/><text x="59.4562%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (81 samples, 1.02%)</title><rect x="59.2062%" y="117" width="1.0173%" height="15" fill="rgb(213,87,29)" fg:x="4714" fg:w="81"/><text x="59.4562%" y="127.50"></text></g><g><title>core::cmp::max (5 samples, 0.06%)</title><rect x="60.1608%" y="101" width="0.0628%" height="15" fill="rgb(205,151,52)" fg:x="4790" fg:w="5"/><text x="60.4108%" y="111.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.06%)</title><rect x="60.1608%" y="85" width="0.0628%" height="15" fill="rgb(253,215,39)" fg:x="4790" fg:w="5"/><text x="60.4108%" y="95.50"></text></g><g><title>cfree (13 samples, 0.16%)</title><rect x="60.2236%" y="133" width="0.1633%" height="15" fill="rgb(221,220,41)" fg:x="4795" fg:w="13"/><text x="60.4736%" y="143.50"></text></g><g><title>xword_generator::XWord::get_entry (475 samples, 5.97%)</title><rect x="55.3127%" y="149" width="5.9658%" height="15" fill="rgb(218,133,21)" fg:x="4404" fg:w="475"/><text x="55.5627%" y="159.50">xword_ge..</text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (71 samples, 0.89%)</title><rect x="60.3868%" y="133" width="0.8917%" height="15" fill="rgb(221,193,43)" fg:x="4808" fg:w="71"/><text x="60.6368%" y="143.50"></text></g><g><title>xword_generator::XWord::set_entry (100 samples, 1.26%)</title><rect x="61.2786%" y="149" width="1.2560%" height="15" fill="rgb(240,128,52)" fg:x="4879" fg:w="100"/><text x="61.5286%" y="159.50"></text></g><g><title>[libc-2.31.so] (425 samples, 5.34%)</title><rect x="69.2163%" y="133" width="5.3379%" height="15" fill="rgb(253,114,12)" fg:x="5511" fg:w="425"/><text x="69.4663%" y="143.50">[libc-2..</text></g><g><title>__libc_malloc (12 samples, 0.15%)</title><rect x="74.5541%" y="133" width="0.1507%" height="15" fill="rgb(215,223,47)" fg:x="5936" fg:w="12"/><text x="74.8041%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 0.64%)</title><rect x="74.7048%" y="133" width="0.6405%" height="15" fill="rgb(248,225,23)" fg:x="5948" fg:w="51"/><text x="74.9548%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.45%)</title><rect x="74.8932%" y="117" width="0.4521%" height="15" fill="rgb(250,108,0)" fg:x="5963" fg:w="36"/><text x="75.1432%" y="127.50"></text></g><g><title>realloc (26 samples, 0.33%)</title><rect x="75.0188%" y="101" width="0.3266%" height="15" fill="rgb(228,208,7)" fg:x="5973" fg:w="26"/><text x="75.2688%" y="111.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.14%)</title><rect x="75.2072%" y="85" width="0.1382%" height="15" fill="rgb(244,45,10)" fg:x="5988" fg:w="11"/><text x="75.4572%" y="95.50"></text></g><g><title>xword_generator::generate_xwords (4,216 samples, 52.95%)</title><rect x="22.5069%" y="181" width="52.9515%" height="15" fill="rgb(207,125,25)" fg:x="1792" fg:w="4216"/><text x="22.7569%" y="191.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (1,938 samples, 24.34%)</title><rect x="51.1178%" y="165" width="24.3406%" height="15" fill="rgb(210,195,18)" fg:x="4070" fg:w="1938"/><text x="51.3678%" y="175.50">xword_generator::score</text></g><g><title>xword_generator::get_matching_words (1,029 samples, 12.92%)</title><rect x="62.5345%" y="149" width="12.9239%" height="15" fill="rgb(249,80,12)" fg:x="4979" fg:w="1029"/><text x="62.7845%" y="159.50">xword_generator::ge..</text></g><g><title>cfree (9 samples, 0.11%)</title><rect x="75.3454%" y="133" width="0.1130%" height="15" fill="rgb(221,65,9)" fg:x="5999" fg:w="9"/><text x="75.5954%" y="143.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.08%)</title><rect x="75.4961%" y="165" width="0.0754%" height="15" fill="rgb(235,49,36)" fg:x="6011" fg:w="6"/><text x="75.7461%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="75.5715%" y="165" width="0.0126%" height="15" fill="rgb(225,32,20)" fg:x="6017" fg:w="1"/><text x="75.8215%" y="175.50"></text></g><g><title>xword_generator::get_matching_words (12 samples, 0.15%)</title><rect x="75.4584%" y="181" width="0.1507%" height="15" fill="rgb(215,141,46)" fg:x="6008" fg:w="12"/><text x="75.7084%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.03%)</title><rect x="75.5840%" y="165" width="0.0251%" height="15" fill="rgb(250,160,47)" fg:x="6018" fg:w="2"/><text x="75.8340%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="75.5966%" y="149" width="0.0126%" height="15" fill="rgb(216,222,40)" fg:x="6019" fg:w="1"/><text x="75.8466%" y="159.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="75.5966%" y="133" width="0.0126%" height="15" fill="rgb(234,217,39)" fg:x="6019" fg:w="1"/><text x="75.8466%" y="143.50"></text></g><g><title>[libc-2.31.so] (42 samples, 0.53%)</title><rect x="76.3502%" y="165" width="0.5275%" height="15" fill="rgb(207,178,40)" fg:x="6079" fg:w="42"/><text x="76.6002%" y="175.50"></text></g><g><title>cfree (19 samples, 0.24%)</title><rect x="76.8777%" y="165" width="0.2386%" height="15" fill="rgb(221,136,13)" fg:x="6121" fg:w="19"/><text x="77.1277%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (129 samples, 1.62%)</title><rect x="77.1163%" y="165" width="1.6202%" height="15" fill="rgb(249,199,10)" fg:x="6140" fg:w="129"/><text x="77.3663%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.78%)</title><rect x="77.9578%" y="149" width="0.7787%" height="15" fill="rgb(249,222,13)" fg:x="6207" fg:w="62"/><text x="78.2078%" y="159.50"></text></g><g><title>[libc-2.31.so] (44 samples, 0.55%)</title><rect x="80.8088%" y="149" width="0.5526%" height="15" fill="rgb(244,185,38)" fg:x="6434" fg:w="44"/><text x="81.0588%" y="159.50"></text></g><g><title>__libc_malloc (15 samples, 0.19%)</title><rect x="81.3615%" y="149" width="0.1884%" height="15" fill="rgb(236,202,9)" fg:x="6478" fg:w="15"/><text x="81.6115%" y="159.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="81.5373%" y="133" width="0.0126%" height="15" fill="rgb(250,229,37)" fg:x="6492" fg:w="1"/><text x="81.7873%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.06%)</title><rect x="81.6629%" y="117" width="0.0628%" height="15" fill="rgb(206,174,23)" fg:x="6502" fg:w="5"/><text x="81.9129%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.51%)</title><rect x="81.7257%" y="117" width="0.5149%" height="15" fill="rgb(211,33,43)" fg:x="6507" fg:w="41"/><text x="81.9757%" y="127.50"></text></g><g><title>__libc_malloc (21 samples, 0.26%)</title><rect x="81.9769%" y="101" width="0.2638%" height="15" fill="rgb(245,58,50)" fg:x="6527" fg:w="21"/><text x="82.2269%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.08%)</title><rect x="82.2406%" y="117" width="0.0754%" height="15" fill="rgb(244,68,36)" fg:x="6548" fg:w="6"/><text x="82.4906%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (6 samples, 0.08%)</title><rect x="82.2406%" y="101" width="0.0754%" height="15" fill="rgb(232,229,15)" fg:x="6548" fg:w="6"/><text x="82.4906%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (68 samples, 0.85%)</title><rect x="81.5499%" y="149" width="0.8541%" height="15" fill="rgb(254,30,23)" fg:x="6493" fg:w="68"/><text x="81.7999%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (68 samples, 0.85%)</title><rect x="81.5499%" y="133" width="0.8541%" height="15" fill="rgb(235,160,14)" fg:x="6493" fg:w="68"/><text x="81.7999%" y="143.50"></text></g><g><title>core::cmp::max (7 samples, 0.09%)</title><rect x="82.3160%" y="117" width="0.0879%" height="15" fill="rgb(212,155,44)" fg:x="6554" fg:w="7"/><text x="82.5660%" y="127.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.09%)</title><rect x="82.3160%" y="101" width="0.0879%" height="15" fill="rgb(226,2,50)" fg:x="6554" fg:w="7"/><text x="82.5660%" y="111.50"></text></g><g><title>cfree (11 samples, 0.14%)</title><rect x="82.4039%" y="149" width="0.1382%" height="15" fill="rgb(234,177,6)" fg:x="6561" fg:w="11"/><text x="82.6539%" y="159.50"></text></g><g><title>xword_generator::XWord::get_entry (360 samples, 4.52%)</title><rect x="78.7365%" y="165" width="4.5215%" height="15" fill="rgb(217,24,9)" fg:x="6269" fg:w="360"/><text x="78.9865%" y="175.50">xword..</text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (57 samples, 0.72%)</title><rect x="82.5421%" y="149" width="0.7159%" height="15" fill="rgb(220,13,46)" fg:x="6572" fg:w="57"/><text x="82.7921%" y="159.50"></text></g><g><title>xword_generator::XWord::set_entry (73 samples, 0.92%)</title><rect x="83.2580%" y="165" width="0.9169%" height="15" fill="rgb(239,221,27)" fg:x="6629" fg:w="73"/><text x="83.5080%" y="175.50"></text></g><g><title>[libc-2.31.so] (343 samples, 4.31%)</title><rect x="90.2788%" y="149" width="4.3080%" height="15" fill="rgb(222,198,25)" fg:x="7188" fg:w="343"/><text x="90.5288%" y="159.50">[libc..</text></g><g><title>__libc_malloc (12 samples, 0.15%)</title><rect x="94.5868%" y="149" width="0.1507%" height="15" fill="rgb(211,99,13)" fg:x="7531" fg:w="12"/><text x="94.8368%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (69 samples, 0.87%)</title><rect x="94.7375%" y="149" width="0.8666%" height="15" fill="rgb(232,111,31)" fg:x="7543" fg:w="69"/><text x="94.9875%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.65%)</title><rect x="94.9510%" y="133" width="0.6531%" height="15" fill="rgb(245,82,37)" fg:x="7560" fg:w="52"/><text x="95.2010%" y="143.50"></text></g><g><title>realloc (44 samples, 0.55%)</title><rect x="95.0515%" y="117" width="0.5526%" height="15" fill="rgb(227,149,46)" fg:x="7568" fg:w="44"/><text x="95.3015%" y="127.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.25%)</title><rect x="95.3529%" y="101" width="0.2512%" height="15" fill="rgb(218,36,50)" fg:x="7592" fg:w="20"/><text x="95.6029%" y="111.50"></text></g><g><title>xword_generator::generate_xwords (6,000 samples, 75.36%)</title><rect x="20.3341%" y="197" width="75.3580%" height="15" fill="rgb(226,80,48)" fg:x="1619" fg:w="6000"/><text x="20.5841%" y="207.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (1,599 samples, 20.08%)</title><rect x="75.6091%" y="181" width="20.0829%" height="15" fill="rgb(238,224,15)" fg:x="6020" fg:w="1599"/><text x="75.8591%" y="191.50">xword_generator::score</text></g><g><title>xword_generator::get_matching_words (917 samples, 11.52%)</title><rect x="84.1748%" y="165" width="11.5172%" height="15" fill="rgb(241,136,10)" fg:x="6702" fg:w="917"/><text x="84.4248%" y="175.50">xword_generator::..</text></g><g><title>cfree (7 samples, 0.09%)</title><rect x="95.6041%" y="149" width="0.0879%" height="15" fill="rgb(208,32,45)" fg:x="7612" fg:w="7"/><text x="95.8541%" y="159.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.04%)</title><rect x="95.7800%" y="181" width="0.0377%" height="15" fill="rgb(207,135,9)" fg:x="7626" fg:w="3"/><text x="96.0300%" y="191.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="95.8176%" y="181" width="0.0126%" height="15" fill="rgb(206,86,44)" fg:x="7629" fg:w="1"/><text x="96.0676%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23 samples, 0.29%)</title><rect x="95.8302%" y="181" width="0.2889%" height="15" fill="rgb(245,177,15)" fg:x="7630" fg:w="23"/><text x="96.0802%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.13%)</title><rect x="95.9935%" y="165" width="0.1256%" height="15" fill="rgb(206,64,50)" fg:x="7643" fg:w="10"/><text x="96.2435%" y="175.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="96.3200%" y="165" width="0.0502%" height="15" fill="rgb(234,36,40)" fg:x="7669" fg:w="4"/><text x="96.5700%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="96.3703%" y="165" width="0.0251%" height="15" fill="rgb(213,64,8)" fg:x="7673" fg:w="2"/><text x="96.6203%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.10%)</title><rect x="96.4205%" y="133" width="0.1005%" height="15" fill="rgb(210,75,36)" fg:x="7677" fg:w="8"/><text x="96.6705%" y="143.50"></text></g><g><title>__libc_malloc (6 samples, 0.08%)</title><rect x="96.4456%" y="117" width="0.0754%" height="15" fill="rgb(229,88,21)" fg:x="7679" fg:w="6"/><text x="96.6956%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.14%)</title><rect x="96.3954%" y="165" width="0.1382%" height="15" fill="rgb(252,204,47)" fg:x="7675" fg:w="11"/><text x="96.6454%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.14%)</title><rect x="96.3954%" y="149" width="0.1382%" height="15" fill="rgb(208,77,27)" fg:x="7675" fg:w="11"/><text x="96.6454%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="96.5210%" y="133" width="0.0126%" height="15" fill="rgb(221,76,26)" fg:x="7685" fg:w="1"/><text x="96.7710%" y="143.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="96.5210%" y="117" width="0.0126%" height="15" fill="rgb(225,139,18)" fg:x="7685" fg:w="1"/><text x="96.7710%" y="127.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="96.5335%" y="165" width="0.0126%" height="15" fill="rgb(230,137,11)" fg:x="7686" fg:w="1"/><text x="96.7835%" y="175.50"></text></g><g><title>xword_generator::XWord::get_entry (37 samples, 0.46%)</title><rect x="96.1191%" y="181" width="0.4647%" height="15" fill="rgb(212,28,1)" fg:x="7653" fg:w="37"/><text x="96.3691%" y="191.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (3 samples, 0.04%)</title><rect x="96.5461%" y="165" width="0.0377%" height="15" fill="rgb(248,164,17)" fg:x="7687" fg:w="3"/><text x="96.7961%" y="175.50"></text></g><g><title>xword_generator::XWord::set_entry (17 samples, 0.21%)</title><rect x="96.5838%" y="181" width="0.2135%" height="15" fill="rgb(222,171,42)" fg:x="7690" fg:w="17"/><text x="96.8338%" y="191.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.63%)</title><rect x="97.8523%" y="165" width="0.6280%" height="15" fill="rgb(243,84,45)" fg:x="7791" fg:w="50"/><text x="98.1023%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.04%)</title><rect x="98.4803%" y="165" width="0.0377%" height="15" fill="rgb(252,49,23)" fg:x="7841" fg:w="3"/><text x="98.7303%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.21%)</title><rect x="98.5180%" y="165" width="0.2135%" height="15" fill="rgb(215,19,7)" fg:x="7844" fg:w="17"/><text x="98.7680%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.19%)</title><rect x="98.5431%" y="149" width="0.1884%" height="15" fill="rgb(238,81,41)" fg:x="7846" fg:w="15"/><text x="98.7931%" y="159.50"></text></g><g><title>realloc (10 samples, 0.13%)</title><rect x="98.6059%" y="133" width="0.1256%" height="15" fill="rgb(210,199,37)" fg:x="7851" fg:w="10"/><text x="98.8559%" y="143.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="98.6812%" y="117" width="0.0502%" height="15" fill="rgb(244,192,49)" fg:x="7857" fg:w="4"/><text x="98.9312%" y="127.50"></text></g><g><title>xword_generator::generate_xwords (6,249 samples, 78.49%)</title><rect x="20.2587%" y="213" width="78.4853%" height="15" fill="rgb(226,211,11)" fg:x="1613" fg:w="6249"/><text x="20.5087%" y="223.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (243 samples, 3.05%)</title><rect x="95.6920%" y="197" width="3.0520%" height="15" fill="rgb(236,162,54)" fg:x="7619" fg:w="243"/><text x="95.9420%" y="207.50">xwo..</text></g><g><title>xword_generator::get_matching_words (155 samples, 1.95%)</title><rect x="96.7973%" y="181" width="1.9467%" height="15" fill="rgb(220,229,9)" fg:x="7707" fg:w="155"/><text x="97.0473%" y="191.50">x..</text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="98.7315%" y="165" width="0.0126%" height="15" fill="rgb(250,87,22)" fg:x="7861" fg:w="1"/><text x="98.9815%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="98.7440%" y="197" width="0.0126%" height="15" fill="rgb(239,43,17)" fg:x="7862" fg:w="1"/><text x="98.9940%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="98.7440%" y="181" width="0.0126%" height="15" fill="rgb(231,177,25)" fg:x="7862" fg:w="1"/><text x="98.9940%" y="191.50"></text></g><g><title>xword_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="98.7566%" y="197" width="0.0126%" height="15" fill="rgb(219,179,1)" fg:x="7863" fg:w="1"/><text x="99.0066%" y="207.50"></text></g><g><title>xword_generator::generate_xwords (6,264 samples, 78.67%)</title><rect x="20.2587%" y="229" width="78.6737%" height="15" fill="rgb(238,219,53)" fg:x="1613" fg:w="6264"/><text x="20.5087%" y="239.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (15 samples, 0.19%)</title><rect x="98.7440%" y="213" width="0.1884%" height="15" fill="rgb(232,167,36)" fg:x="7862" fg:w="15"/><text x="98.9940%" y="223.50"></text></g><g><title>xword_generator::get_matching_words (13 samples, 0.16%)</title><rect x="98.7692%" y="197" width="0.1633%" height="15" fill="rgb(244,19,51)" fg:x="7864" fg:w="13"/><text x="99.0192%" y="207.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.05%)</title><rect x="98.8822%" y="181" width="0.0502%" height="15" fill="rgb(224,6,22)" fg:x="7873" fg:w="4"/><text x="99.1322%" y="191.50"></text></g><g><title>xword_generator::XWord::get_entry (1 samples, 0.01%)</title><rect x="98.9324%" y="213" width="0.0126%" height="15" fill="rgb(224,145,5)" fg:x="7877" fg:w="1"/><text x="99.1824%" y="223.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.01%)</title><rect x="98.9324%" y="197" width="0.0126%" height="15" fill="rgb(234,130,49)" fg:x="7877" fg:w="1"/><text x="99.1824%" y="207.50"></text></g><g><title>xword_generator::generate_xwords (6,266 samples, 78.70%)</title><rect x="20.2587%" y="245" width="78.6988%" height="15" fill="rgb(254,6,2)" fg:x="1613" fg:w="6266"/><text x="20.5087%" y="255.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (2 samples, 0.03%)</title><rect x="98.9324%" y="229" width="0.0251%" height="15" fill="rgb(208,96,46)" fg:x="7877" fg:w="2"/><text x="99.1824%" y="239.50"></text></g><g><title>xword_generator::get_matching_words (1 samples, 0.01%)</title><rect x="98.9450%" y="213" width="0.0126%" height="15" fill="rgb(239,3,39)" fg:x="7878" fg:w="1"/><text x="99.1950%" y="223.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="98.9450%" y="197" width="0.0126%" height="15" fill="rgb(233,210,1)" fg:x="7878" fg:w="1"/><text x="99.1950%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.06%)</title><rect x="98.9701%" y="229" width="0.0628%" height="15" fill="rgb(244,137,37)" fg:x="7880" fg:w="5"/><text x="99.2201%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="99.0078%" y="213" width="0.0251%" height="15" fill="rgb(240,136,2)" fg:x="7883" fg:w="2"/><text x="99.2578%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="99.0831%" y="213" width="0.0126%" height="15" fill="rgb(239,18,37)" fg:x="7889" fg:w="1"/><text x="99.3331%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="99.0957%" y="213" width="0.0251%" height="15" fill="rgb(218,185,22)" fg:x="7890" fg:w="2"/><text x="99.3457%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.03%)</title><rect x="99.0957%" y="197" width="0.0251%" height="15" fill="rgb(225,218,4)" fg:x="7890" fg:w="2"/><text x="99.3457%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="99.1083%" y="181" width="0.0126%" height="15" fill="rgb(230,182,32)" fg:x="7891" fg:w="1"/><text x="99.3583%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="99.1083%" y="165" width="0.0126%" height="15" fill="rgb(242,56,43)" fg:x="7891" fg:w="1"/><text x="99.3583%" y="175.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="99.1208%" y="213" width="0.0126%" height="15" fill="rgb(233,99,24)" fg:x="7892" fg:w="1"/><text x="99.3708%" y="223.50"></text></g><g><title>xword_generator::XWord::get_entry (9 samples, 0.11%)</title><rect x="99.0329%" y="229" width="0.1130%" height="15" fill="rgb(234,209,42)" fg:x="7885" fg:w="9"/><text x="99.2829%" y="239.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1 samples, 0.01%)</title><rect x="99.1334%" y="213" width="0.0126%" height="15" fill="rgb(227,7,12)" fg:x="7893" fg:w="1"/><text x="99.3834%" y="223.50"></text></g><g><title>xword_generator::XWord::set_entry (1 samples, 0.01%)</title><rect x="99.1459%" y="229" width="0.0126%" height="15" fill="rgb(245,203,43)" fg:x="7894" fg:w="1"/><text x="99.3959%" y="239.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.11%)</title><rect x="99.3720%" y="213" width="0.1130%" height="15" fill="rgb(238,205,33)" fg:x="7912" fg:w="9"/><text x="99.6220%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="99.4851%" y="213" width="0.0251%" height="15" fill="rgb(231,56,7)" fg:x="7921" fg:w="2"/><text x="99.7351%" y="223.50"></text></g><g><title>_start (6,426 samples, 80.71%)</title><rect x="18.8772%" y="341" width="80.7084%" height="15" fill="rgb(244,186,29)" fg:x="1503" fg:w="6426"/><text x="19.1272%" y="351.50">_start</text></g><g><title>__libc_start_main (6,426 samples, 80.71%)</title><rect x="18.8772%" y="325" width="80.7084%" height="15" fill="rgb(234,111,31)" fg:x="1503" fg:w="6426"/><text x="19.1272%" y="335.50">__libc_start_main</text></g><g><title>main (6,426 samples, 80.71%)</title><rect x="18.8772%" y="309" width="80.7084%" height="15" fill="rgb(241,149,10)" fg:x="1503" fg:w="6426"/><text x="19.1272%" y="319.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,426 samples, 80.71%)</title><rect x="18.8772%" y="293" width="80.7084%" height="15" fill="rgb(249,206,44)" fg:x="1503" fg:w="6426"/><text x="19.1272%" y="303.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>xword_generator::main (6,426 samples, 80.71%)</title><rect x="18.8772%" y="277" width="80.7084%" height="15" fill="rgb(251,153,30)" fg:x="1503" fg:w="6426"/><text x="19.1272%" y="287.50">xword_generator::main</text></g><g><title>xword_generator::generate_xwords (6,316 samples, 79.33%)</title><rect x="20.2587%" y="261" width="79.3268%" height="15" fill="rgb(239,152,38)" fg:x="1613" fg:w="6316"/><text x="20.5087%" y="271.50">xword_generator::generate_xwords</text></g><g><title>xword_generator::score (50 samples, 0.63%)</title><rect x="98.9575%" y="245" width="0.6280%" height="15" fill="rgb(249,139,47)" fg:x="7879" fg:w="50"/><text x="99.2075%" y="255.50"></text></g><g><title>xword_generator::get_matching_words (34 samples, 0.43%)</title><rect x="99.1585%" y="229" width="0.4270%" height="15" fill="rgb(244,64,35)" fg:x="7895" fg:w="34"/><text x="99.4085%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.08%)</title><rect x="99.5102%" y="213" width="0.0754%" height="15" fill="rgb(216,46,15)" fg:x="7923" fg:w="6"/><text x="99.7602%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="99.5353%" y="197" width="0.0502%" height="15" fill="rgb(250,74,19)" fg:x="7925" fg:w="4"/><text x="99.7853%" y="207.50"></text></g><g><title>realloc (4 samples, 0.05%)</title><rect x="99.5353%" y="181" width="0.0502%" height="15" fill="rgb(249,42,33)" fg:x="7925" fg:w="4"/><text x="99.7853%" y="191.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.5730%" y="165" width="0.0126%" height="15" fill="rgb(242,149,17)" fg:x="7928" fg:w="1"/><text x="99.8230%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.06%)</title><rect x="99.5855%" y="341" width="0.0628%" height="15" fill="rgb(244,29,21)" fg:x="7929" fg:w="5"/><text x="99.8355%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.10%)</title><rect x="99.6483%" y="341" width="0.1005%" height="15" fill="rgb(220,130,37)" fg:x="7934" fg:w="8"/><text x="99.8983%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="99.7488%" y="341" width="0.0377%" height="15" fill="rgb(211,67,2)" fg:x="7942" fg:w="3"/><text x="99.9988%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="99.7865%" y="341" width="0.0126%" height="15" fill="rgb(235,68,52)" fg:x="7945" fg:w="1"/><text x="100.0365%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (5 samples, 0.06%)</title><rect x="99.7990%" y="341" width="0.0628%" height="15" fill="rgb(246,142,3)" fg:x="7946" fg:w="5"/><text x="100.0490%" y="351.50"></text></g><g><title>xword_generator::XWord::get_entry (6 samples, 0.08%)</title><rect x="99.8618%" y="341" width="0.0754%" height="15" fill="rgb(241,25,7)" fg:x="7951" fg:w="6"/><text x="100.1118%" y="351.50"></text></g><g><title>xword_generator::get_matching_words (4 samples, 0.05%)</title><rect x="99.9372%" y="341" width="0.0502%" height="15" fill="rgb(242,119,39)" fg:x="7957" fg:w="4"/><text x="100.1872%" y="351.50"></text></g><g><title>all (7,962 samples, 100%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(241,98,45)" fg:x="0" fg:w="7962"/><text x="0.2500%" y="383.50"></text></g><g><title>xword-generator (7,962 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="7962"/><text x="0.2500%" y="367.50">xword-generator</text></g><g><title>xword_generator::score (1 samples, 0.01%)</title><rect x="99.9874%" y="341" width="0.0126%" height="15" fill="rgb(241,142,54)" fg:x="7961" fg:w="1"/><text x="100.2374%" y="351.50"></text></g></svg></svg>