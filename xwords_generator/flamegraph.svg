<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="549.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="102144"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (11 samples, 0.01%)</title><rect x="0.0049%" y="469" width="0.0108%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="11"/><text x="0.2549%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (30 samples, 0.03%)</title><rect x="0.0157%" y="469" width="0.0294%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="30"/><text x="0.2657%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="0.0450%" y="469" width="0.0108%" height="15" fill="rgb(221,193,54)" fg:x="46" fg:w="11"/><text x="0.2950%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.02%)</title><rect x="0.0558%" y="469" width="0.0206%" height="15" fill="rgb(248,212,6)" fg:x="57" fg:w="21"/><text x="0.3058%" y="479.50"></text></g><g><title>[libc-2.31.so] (313 samples, 0.31%)</title><rect x="0.0842%" y="469" width="0.3064%" height="15" fill="rgb(208,68,35)" fg:x="86" fg:w="313"/><text x="0.3342%" y="479.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="0.3975%" y="437" width="0.0108%" height="15" fill="rgb(232,128,0)" fg:x="406" fg:w="11"/><text x="0.6475%" y="447.50"></text></g><g><title>[xword-generator] (19 samples, 0.02%)</title><rect x="0.3906%" y="453" width="0.0186%" height="15" fill="rgb(207,160,47)" fg:x="399" fg:w="19"/><text x="0.6406%" y="463.50"></text></g><g><title>[xword-generator] (25 samples, 0.02%)</title><rect x="0.3906%" y="469" width="0.0245%" height="15" fill="rgb(228,23,34)" fg:x="399" fg:w="25"/><text x="0.6406%" y="479.50"></text></g><g><title>__libc_malloc (95 samples, 0.09%)</title><rect x="0.4151%" y="469" width="0.0930%" height="15" fill="rgb(218,30,26)" fg:x="424" fg:w="95"/><text x="0.6651%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (55 samples, 0.05%)</title><rect x="0.5091%" y="469" width="0.0538%" height="15" fill="rgb(220,122,19)" fg:x="520" fg:w="55"/><text x="0.7591%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="0.5629%" y="469" width="0.0264%" height="15" fill="rgb(250,228,42)" fg:x="575" fg:w="27"/><text x="0.8129%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="0.5766%" y="453" width="0.0127%" height="15" fill="rgb(240,193,28)" fg:x="589" fg:w="13"/><text x="0.8266%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (93 samples, 0.09%)</title><rect x="0.5894%" y="469" width="0.0910%" height="15" fill="rgb(216,20,37)" fg:x="602" fg:w="93"/><text x="0.8394%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.04%)</title><rect x="0.6804%" y="469" width="0.0362%" height="15" fill="rgb(206,188,39)" fg:x="695" fg:w="37"/><text x="0.9304%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11 samples, 0.01%)</title><rect x="0.7166%" y="469" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="732" fg:w="11"/><text x="0.9666%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17 samples, 0.02%)</title><rect x="0.7450%" y="469" width="0.0166%" height="15" fill="rgb(231,73,38)" fg:x="761" fg:w="17"/><text x="0.9950%" y="479.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (1,505 samples, 1.47%)</title><rect x="0.7783%" y="469" width="1.4734%" height="15" fill="rgb(225,20,46)" fg:x="795" fg:w="1505"/><text x="1.0283%" y="479.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (362 samples, 0.35%)</title><rect x="2.2517%" y="469" width="0.3544%" height="15" fill="rgb(210,31,41)" fg:x="2300" fg:w="362"/><text x="2.5017%" y="479.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (845 samples, 0.83%)</title><rect x="2.6061%" y="469" width="0.8273%" height="15" fill="rgb(221,200,47)" fg:x="2662" fg:w="845"/><text x="2.8561%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="3.4334%" y="469" width="0.0108%" height="15" fill="rgb(226,26,5)" fg:x="3507" fg:w="11"/><text x="3.6834%" y="479.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (368 samples, 0.36%)</title><rect x="3.4442%" y="469" width="0.3603%" height="15" fill="rgb(249,33,26)" fg:x="3518" fg:w="368"/><text x="3.6942%" y="479.50"></text></g><g><title>xword_generator::get_matching_words (95 samples, 0.09%)</title><rect x="3.8074%" y="469" width="0.0930%" height="15" fill="rgb(235,183,28)" fg:x="3889" fg:w="95"/><text x="4.0574%" y="479.50"></text></g><g><title>[[heap]] (4,065 samples, 3.98%)</title><rect x="0.0049%" y="485" width="3.9797%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="4065"/><text x="0.2549%" y="495.50">[[he..</text></g><g><title>xword_generator::insert_horizontal (86 samples, 0.08%)</title><rect x="3.9004%" y="469" width="0.0842%" height="15" fill="rgb(247,18,42)" fg:x="3984" fg:w="86"/><text x="4.1504%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (160 samples, 0.16%)</title><rect x="3.9846%" y="469" width="0.1566%" height="15" fill="rgb(241,131,45)" fg:x="4070" fg:w="160"/><text x="4.2346%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (74 samples, 0.07%)</title><rect x="4.0688%" y="453" width="0.0724%" height="15" fill="rgb(249,31,29)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="463.50"></text></g><g><title>alloc::string::String::push_str (74 samples, 0.07%)</title><rect x="4.0688%" y="437" width="0.0724%" height="15" fill="rgb(225,111,53)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74 samples, 0.07%)</title><rect x="4.0688%" y="421" width="0.0724%" height="15" fill="rgb(238,160,17)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74 samples, 0.07%)</title><rect x="4.0688%" y="405" width="0.0724%" height="15" fill="rgb(214,148,48)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74 samples, 0.07%)</title><rect x="4.0688%" y="389" width="0.0724%" height="15" fill="rgb(232,36,49)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.07%)</title><rect x="4.0688%" y="373" width="0.0724%" height="15" fill="rgb(209,103,24)" fg:x="4156" fg:w="74"/><text x="4.3188%" y="383.50"></text></g><g><title>[libc-2.31.so] (153 samples, 0.15%)</title><rect x="4.1500%" y="469" width="0.1498%" height="15" fill="rgb(229,88,8)" fg:x="4239" fg:w="153"/><text x="4.4000%" y="479.50"></text></g><g><title>[xword-generator] (19 samples, 0.02%)</title><rect x="4.2998%" y="469" width="0.0186%" height="15" fill="rgb(213,181,19)" fg:x="4392" fg:w="19"/><text x="4.5498%" y="479.50"></text></g><g><title>[xword-generator] (17 samples, 0.02%)</title><rect x="4.3018%" y="453" width="0.0166%" height="15" fill="rgb(254,191,54)" fg:x="4394" fg:w="17"/><text x="4.5518%" y="463.50"></text></g><g><title>__libc_malloc (35 samples, 0.03%)</title><rect x="4.3184%" y="469" width="0.0343%" height="15" fill="rgb(241,83,37)" fg:x="4411" fg:w="35"/><text x="4.5684%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (21 samples, 0.02%)</title><rect x="4.3781%" y="453" width="0.0206%" height="15" fill="rgb(233,36,39)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21 samples, 0.02%)</title><rect x="4.3781%" y="437" width="0.0206%" height="15" fill="rgb(226,3,54)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="4.3781%" y="421" width="0.0206%" height="15" fill="rgb(245,192,40)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="4.3781%" y="405" width="0.0206%" height="15" fill="rgb(238,167,29)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="4.3781%" y="389" width="0.0206%" height="15" fill="rgb(232,182,51)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="4.3781%" y="373" width="0.0206%" height="15" fill="rgb(231,60,39)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="4.3781%" y="357" width="0.0206%" height="15" fill="rgb(208,69,12)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="367.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="4.3781%" y="341" width="0.0206%" height="15" fill="rgb(235,93,37)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="351.50"></text></g><g><title>__rdl_alloc (21 samples, 0.02%)</title><rect x="4.3781%" y="325" width="0.0206%" height="15" fill="rgb(213,116,39)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (21 samples, 0.02%)</title><rect x="4.3781%" y="309" width="0.0206%" height="15" fill="rgb(222,207,29)" fg:x="4472" fg:w="21"/><text x="4.6281%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (78 samples, 0.08%)</title><rect x="4.3566%" y="469" width="0.0764%" height="15" fill="rgb(206,96,30)" fg:x="4450" fg:w="78"/><text x="4.6066%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (35 samples, 0.03%)</title><rect x="4.3987%" y="453" width="0.0343%" height="15" fill="rgb(218,138,4)" fg:x="4493" fg:w="35"/><text x="4.6487%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="4.4330%" y="469" width="0.0157%" height="15" fill="rgb(250,191,14)" fg:x="4528" fg:w="16"/><text x="4.6830%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="4.4330%" y="453" width="0.0157%" height="15" fill="rgb(239,60,40)" fg:x="4528" fg:w="16"/><text x="4.6830%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.03%)</title><rect x="4.4486%" y="469" width="0.0255%" height="15" fill="rgb(206,27,48)" fg:x="4544" fg:w="26"/><text x="4.6986%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (97 samples, 0.09%)</title><rect x="4.4741%" y="469" width="0.0950%" height="15" fill="rgb(225,35,8)" fg:x="4570" fg:w="97"/><text x="4.7241%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral (64 samples, 0.06%)</title><rect x="4.5710%" y="469" width="0.0627%" height="15" fill="rgb(250,213,24)" fg:x="4669" fg:w="64"/><text x="4.8210%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (29 samples, 0.03%)</title><rect x="4.6337%" y="469" width="0.0284%" height="15" fill="rgb(247,123,22)" fg:x="4733" fg:w="29"/><text x="4.8837%" y="479.50"></text></g><g><title>core::fmt::write (54 samples, 0.05%)</title><rect x="4.6660%" y="469" width="0.0529%" height="15" fill="rgb(231,138,38)" fg:x="4766" fg:w="54"/><text x="4.9160%" y="479.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (72 samples, 0.07%)</title><rect x="4.7247%" y="469" width="0.0705%" height="15" fill="rgb(231,145,46)" fg:x="4826" fg:w="72"/><text x="4.9747%" y="479.50"></text></g><g><title>[[stack]] (831 samples, 0.81%)</title><rect x="3.9846%" y="485" width="0.8136%" height="15" fill="rgb(251,118,11)" fg:x="4070" fg:w="831"/><text x="4.2346%" y="495.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="4.8040%" y="485" width="0.0108%" height="15" fill="rgb(217,147,25)" fg:x="4907" fg:w="11"/><text x="5.0540%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (76 samples, 0.07%)</title><rect x="4.8177%" y="469" width="0.0744%" height="15" fill="rgb(247,81,37)" fg:x="4921" fg:w="76"/><text x="5.0677%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="4.8921%" y="469" width="0.0137%" height="15" fill="rgb(209,12,38)" fg:x="4997" fg:w="14"/><text x="5.1421%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="4.9058%" y="469" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="5011" fg:w="12"/><text x="5.1558%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.02%)</title><rect x="4.9176%" y="469" width="0.0206%" height="15" fill="rgb(248,47,43)" fg:x="5023" fg:w="21"/><text x="5.1676%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.05%)</title><rect x="4.9381%" y="469" width="0.0460%" height="15" fill="rgb(221,10,30)" fg:x="5044" fg:w="47"/><text x="5.1881%" y="479.50"></text></g><g><title>[libc-2.31.so] (448 samples, 0.44%)</title><rect x="4.9841%" y="469" width="0.4386%" height="15" fill="rgb(210,229,1)" fg:x="5091" fg:w="448"/><text x="5.2341%" y="479.50"></text></g><g><title>__libc_malloc (79 samples, 0.08%)</title><rect x="5.4325%" y="469" width="0.0773%" height="15" fill="rgb(222,148,37)" fg:x="5549" fg:w="79"/><text x="5.6825%" y="479.50"></text></g><g><title>__log2_finite (473 samples, 0.46%)</title><rect x="5.5099%" y="469" width="0.4631%" height="15" fill="rgb(234,67,33)" fg:x="5628" fg:w="473"/><text x="5.7599%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="5.9769%" y="469" width="0.0294%" height="15" fill="rgb(247,98,35)" fg:x="6105" fg:w="30"/><text x="6.2269%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="5.9935%" y="453" width="0.0127%" height="15" fill="rgb(247,138,52)" fg:x="6122" fg:w="13"/><text x="6.2435%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (45 samples, 0.04%)</title><rect x="6.0062%" y="469" width="0.0441%" height="15" fill="rgb(213,79,30)" fg:x="6135" fg:w="45"/><text x="6.2562%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (165 samples, 0.16%)</title><rect x="6.0503%" y="469" width="0.1615%" height="15" fill="rgb(246,177,23)" fg:x="6180" fg:w="165"/><text x="6.3003%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad (19 samples, 0.02%)</title><rect x="6.2118%" y="469" width="0.0186%" height="15" fill="rgb(230,62,27)" fg:x="6345" fg:w="19"/><text x="6.4618%" y="479.50"></text></g><g><title>core::fmt::PostPadding::write (11 samples, 0.01%)</title><rect x="6.2197%" y="453" width="0.0108%" height="15" fill="rgb(216,154,8)" fg:x="6353" fg:w="11"/><text x="6.4697%" y="463.50"></text></g><g><title>core::fmt::Formatter::pad_integral (21 samples, 0.02%)</title><rect x="6.2304%" y="469" width="0.0206%" height="15" fill="rgb(244,35,45)" fg:x="6364" fg:w="21"/><text x="6.4804%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (36 samples, 0.04%)</title><rect x="6.2510%" y="469" width="0.0352%" height="15" fill="rgb(251,115,12)" fg:x="6385" fg:w="36"/><text x="6.5010%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (33 samples, 0.03%)</title><rect x="6.2862%" y="469" width="0.0323%" height="15" fill="rgb(240,54,50)" fg:x="6421" fg:w="33"/><text x="6.5362%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (21 samples, 0.02%)</title><rect x="6.2980%" y="453" width="0.0206%" height="15" fill="rgb(233,84,52)" fg:x="6433" fg:w="21"/><text x="6.5480%" y="463.50"></text></g><g><title>core::fmt::write (126 samples, 0.12%)</title><rect x="6.3185%" y="469" width="0.1234%" height="15" fill="rgb(207,117,47)" fg:x="6454" fg:w="126"/><text x="6.5685%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (116 samples, 0.11%)</title><rect x="6.4517%" y="469" width="0.1136%" height="15" fill="rgb(249,43,39)" fg:x="6590" fg:w="116"/><text x="6.7017%" y="479.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (2,322 samples, 2.27%)</title><rect x="6.5682%" y="469" width="2.2733%" height="15" fill="rgb(209,38,44)" fg:x="6709" fg:w="2322"/><text x="6.8182%" y="479.50">f..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (33 samples, 0.03%)</title><rect x="8.8414%" y="469" width="0.0323%" height="15" fill="rgb(236,212,23)" fg:x="9031" fg:w="33"/><text x="9.0914%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (11 samples, 0.01%)</title><rect x="8.8737%" y="469" width="0.0108%" height="15" fill="rgb(242,79,21)" fg:x="9064" fg:w="11"/><text x="9.1237%" y="479.50"></text></g><g><title>realloc (162 samples, 0.16%)</title><rect x="8.8845%" y="469" width="0.1586%" height="15" fill="rgb(211,96,35)" fg:x="9075" fg:w="162"/><text x="9.1345%" y="479.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (783 samples, 0.77%)</title><rect x="9.0470%" y="469" width="0.7666%" height="15" fill="rgb(253,215,40)" fg:x="9241" fg:w="783"/><text x="9.2970%" y="479.50"></text></g><g><title>[unknown] (5,113 samples, 5.01%)</title><rect x="4.8148%" y="485" width="5.0057%" height="15" fill="rgb(211,81,21)" fg:x="4918" fg:w="5113"/><text x="5.0648%" y="495.50">[unkno..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="9.8283%" y="469" width="0.0108%" height="15" fill="rgb(208,190,38)" fg:x="10039" fg:w="11"/><text x="10.0783%" y="479.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.04%)</title><rect x="9.8391%" y="469" width="0.0382%" height="15" fill="rgb(235,213,38)" fg:x="10050" fg:w="39"/><text x="10.0891%" y="479.50"></text></g><g><title>__libc_malloc (35 samples, 0.03%)</title><rect x="9.8772%" y="469" width="0.0343%" height="15" fill="rgb(237,122,38)" fg:x="10089" fg:w="35"/><text x="10.1272%" y="479.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (36 samples, 0.04%)</title><rect x="9.9174%" y="469" width="0.0352%" height="15" fill="rgb(244,218,35)" fg:x="10130" fg:w="36"/><text x="10.1674%" y="479.50"></text></g><g><title>[xword-generator] (141 samples, 0.14%)</title><rect x="9.8204%" y="485" width="0.1380%" height="15" fill="rgb(240,68,47)" fg:x="10031" fg:w="141"/><text x="10.0704%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (68 samples, 0.07%)</title><rect x="9.9624%" y="469" width="0.0666%" height="15" fill="rgb(210,16,53)" fg:x="10176" fg:w="68"/><text x="10.2124%" y="479.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.06%)</title><rect x="10.0290%" y="469" width="0.0597%" height="15" fill="rgb(235,124,12)" fg:x="10244" fg:w="61"/><text x="10.2790%" y="479.50"></text></g><g><title>__log2_finite (15 samples, 0.01%)</title><rect x="10.0887%" y="469" width="0.0147%" height="15" fill="rgb(224,169,11)" fg:x="10305" fg:w="15"/><text x="10.3387%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16 samples, 0.02%)</title><rect x="10.1034%" y="469" width="0.0157%" height="15" fill="rgb(250,166,2)" fg:x="10320" fg:w="16"/><text x="10.3534%" y="479.50"></text></g><g><title>__do_global_dtors_aux_fini_array_entry (184 samples, 0.18%)</title><rect x="9.9585%" y="485" width="0.1801%" height="15" fill="rgb(242,216,29)" fg:x="10172" fg:w="184"/><text x="10.2085%" y="495.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (17 samples, 0.02%)</title><rect x="10.1220%" y="469" width="0.0166%" height="15" fill="rgb(230,116,27)" fg:x="10339" fg:w="17"/><text x="10.3720%" y="479.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="10.2023%" y="405" width="0.0117%" height="15" fill="rgb(228,99,48)" fg:x="10421" fg:w="12"/><text x="10.4523%" y="415.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="10.2209%" y="405" width="0.0147%" height="15" fill="rgb(253,11,6)" fg:x="10440" fg:w="15"/><text x="10.4709%" y="415.50"></text></g><g><title>csv_core::reader::Reader::read_record (35 samples, 0.03%)</title><rect x="10.2375%" y="405" width="0.0343%" height="15" fill="rgb(247,143,39)" fg:x="10457" fg:w="35"/><text x="10.4875%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="10.3188%" y="373" width="0.0108%" height="15" fill="rgb(236,97,10)" fg:x="10540" fg:w="11"/><text x="10.5688%" y="383.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="10.3295%" y="373" width="0.0137%" height="15" fill="rgb(233,208,19)" fg:x="10551" fg:w="14"/><text x="10.5795%" y="383.50"></text></g><g><title>alloc::fmt::format::format_inner (16 samples, 0.02%)</title><rect x="10.3432%" y="373" width="0.0157%" height="15" fill="rgb(216,164,2)" fg:x="10565" fg:w="16"/><text x="10.5932%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.02%)</title><rect x="10.3432%" y="357" width="0.0157%" height="15" fill="rgb(220,129,5)" fg:x="10565" fg:w="16"/><text x="10.5932%" y="367.50"></text></g><g><title>core::fmt::write (15 samples, 0.01%)</title><rect x="10.3442%" y="341" width="0.0147%" height="15" fill="rgb(242,17,10)" fg:x="10566" fg:w="15"/><text x="10.5942%" y="351.50"></text></g><g><title>core::fmt::run (15 samples, 0.01%)</title><rect x="10.3442%" y="325" width="0.0147%" height="15" fill="rgb(242,107,0)" fg:x="10566" fg:w="15"/><text x="10.5942%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.01%)</title><rect x="10.3844%" y="357" width="0.0137%" height="15" fill="rgb(251,28,31)" fg:x="10607" fg:w="14"/><text x="10.6344%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="10.3863%" y="341" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="10609" fg:w="12"/><text x="10.6363%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="10.3863%" y="325" width="0.0117%" height="15" fill="rgb(215,21,27)" fg:x="10609" fg:w="12"/><text x="10.6363%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="10.4128%" y="277" width="0.0117%" height="15" fill="rgb(232,23,21)" fg:x="10636" fg:w="12"/><text x="10.6628%" y="287.50"></text></g><g><title>realloc (11 samples, 0.01%)</title><rect x="10.4137%" y="261" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="10637" fg:w="11"/><text x="10.6637%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.02%)</title><rect x="10.4079%" y="325" width="0.0176%" height="15" fill="rgb(226,81,46)" fg:x="10631" fg:w="18"/><text x="10.6579%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.01%)</title><rect x="10.4108%" y="309" width="0.0147%" height="15" fill="rgb(247,70,30)" fg:x="10634" fg:w="15"/><text x="10.6608%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.01%)</title><rect x="10.4108%" y="293" width="0.0147%" height="15" fill="rgb(212,68,19)" fg:x="10634" fg:w="15"/><text x="10.6608%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="10.4490%" y="293" width="0.0147%" height="15" fill="rgb(240,187,13)" fg:x="10673" fg:w="15"/><text x="10.6990%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="10.4519%" y="277" width="0.0117%" height="15" fill="rgb(223,113,26)" fg:x="10676" fg:w="12"/><text x="10.7019%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="10.4519%" y="261" width="0.0117%" height="15" fill="rgb(206,192,2)" fg:x="10676" fg:w="12"/><text x="10.7019%" y="271.50"></text></g><g><title>__log2_finite (11 samples, 0.01%)</title><rect x="10.5185%" y="197" width="0.0108%" height="15" fill="rgb(241,108,4)" fg:x="10744" fg:w="11"/><text x="10.7685%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.05%)</title><rect x="10.4842%" y="261" width="0.0480%" height="15" fill="rgb(247,173,49)" fg:x="10709" fg:w="49"/><text x="10.7342%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (49 samples, 0.05%)</title><rect x="10.4842%" y="245" width="0.0480%" height="15" fill="rgb(224,114,35)" fg:x="10709" fg:w="49"/><text x="10.7342%" y="255.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (45 samples, 0.04%)</title><rect x="10.4881%" y="229" width="0.0441%" height="15" fill="rgb(245,159,27)" fg:x="10713" fg:w="45"/><text x="10.7381%" y="239.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (40 samples, 0.04%)</title><rect x="10.4930%" y="213" width="0.0392%" height="15" fill="rgb(245,172,44)" fg:x="10718" fg:w="40"/><text x="10.7430%" y="223.50"></text></g><g><title>__libc_malloc (17 samples, 0.02%)</title><rect x="10.5900%" y="245" width="0.0166%" height="15" fill="rgb(236,23,11)" fg:x="10817" fg:w="17"/><text x="10.8400%" y="255.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="10.5958%" y="229" width="0.0108%" height="15" fill="rgb(205,117,38)" fg:x="10823" fg:w="11"/><text x="10.8458%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (22 samples, 0.02%)</title><rect x="10.6066%" y="245" width="0.0215%" height="15" fill="rgb(237,72,25)" fg:x="10834" fg:w="22"/><text x="10.8566%" y="255.50"></text></g><g><title>__log2_finite (241 samples, 0.24%)</title><rect x="11.1392%" y="229" width="0.2359%" height="15" fill="rgb(244,70,9)" fg:x="11378" fg:w="241"/><text x="11.3892%" y="239.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (795 samples, 0.78%)</title><rect x="10.6350%" y="245" width="0.7783%" height="15" fill="rgb(217,125,39)" fg:x="10863" fg:w="795"/><text x="10.8850%" y="255.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (39 samples, 0.04%)</title><rect x="11.3751%" y="229" width="0.0382%" height="15" fill="rgb(235,36,10)" fg:x="11619" fg:w="39"/><text x="11.6251%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (974 samples, 0.95%)</title><rect x="10.4637%" y="293" width="0.9536%" height="15" fill="rgb(251,123,47)" fg:x="10688" fg:w="974"/><text x="10.7137%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (963 samples, 0.94%)</title><rect x="10.4744%" y="277" width="0.9428%" height="15" fill="rgb(221,13,13)" fg:x="10699" fg:w="963"/><text x="10.7244%" y="287.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (888 samples, 0.87%)</title><rect x="10.5479%" y="261" width="0.8694%" height="15" fill="rgb(238,131,9)" fg:x="10774" fg:w="888"/><text x="10.7979%" y="271.50"></text></g><g><title>alloc::fmt::format::format_inner (20 samples, 0.02%)</title><rect x="11.4730%" y="277" width="0.0196%" height="15" fill="rgb(211,50,8)" fg:x="11719" fg:w="20"/><text x="11.7230%" y="287.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.02%)</title><rect x="11.4769%" y="261" width="0.0157%" height="15" fill="rgb(245,182,24)" fg:x="11723" fg:w="16"/><text x="11.7269%" y="271.50"></text></g><g><title>core::fmt::write (16 samples, 0.02%)</title><rect x="11.4769%" y="245" width="0.0157%" height="15" fill="rgb(242,14,37)" fg:x="11723" fg:w="16"/><text x="11.7269%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.02%)</title><rect x="11.4926%" y="277" width="0.0176%" height="15" fill="rgb(246,228,12)" fg:x="11739" fg:w="18"/><text x="11.7426%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="11.4965%" y="261" width="0.0137%" height="15" fill="rgb(213,55,15)" fg:x="11743" fg:w="14"/><text x="11.7465%" y="271.50"></text></g><g><title>__log2_finite (242 samples, 0.24%)</title><rect x="11.9175%" y="261" width="0.2369%" height="15" fill="rgb(209,9,3)" fg:x="12173" fg:w="242"/><text x="12.1675%" y="271.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (692 samples, 0.68%)</title><rect x="11.5190%" y="277" width="0.6775%" height="15" fill="rgb(230,59,30)" fg:x="11766" fg:w="692"/><text x="11.7690%" y="287.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (43 samples, 0.04%)</title><rect x="12.1544%" y="261" width="0.0421%" height="15" fill="rgb(209,121,21)" fg:x="12415" fg:w="43"/><text x="12.4044%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,813 samples, 1.77%)</title><rect x="10.4255%" y="325" width="1.7749%" height="15" fill="rgb(220,109,13)" fg:x="10649" fg:w="1813"/><text x="10.6755%" y="335.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,809 samples, 1.77%)</title><rect x="10.4294%" y="309" width="1.7710%" height="15" fill="rgb(232,18,1)" fg:x="10653" fg:w="1809"/><text x="10.6794%" y="319.50">c..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (791 samples, 0.77%)</title><rect x="11.4260%" y="293" width="0.7744%" height="15" fill="rgb(215,41,42)" fg:x="11671" fg:w="791"/><text x="11.6760%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.02%)</title><rect x="12.2533%" y="309" width="0.0206%" height="15" fill="rgb(224,123,36)" fg:x="12516" fg:w="21"/><text x="12.5033%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.02%)</title><rect x="12.2543%" y="293" width="0.0196%" height="15" fill="rgb(240,125,3)" fg:x="12517" fg:w="20"/><text x="12.5043%" y="303.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="12.2572%" y="277" width="0.0166%" height="15" fill="rgb(205,98,50)" fg:x="12520" fg:w="17"/><text x="12.5072%" y="287.50"></text></g><g><title>__log2_finite (121 samples, 0.12%)</title><rect x="12.5039%" y="293" width="0.1185%" height="15" fill="rgb(205,185,37)" fg:x="12772" fg:w="121"/><text x="12.7539%" y="303.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (379 samples, 0.37%)</title><rect x="12.2758%" y="309" width="0.3710%" height="15" fill="rgb(238,207,15)" fg:x="12539" fg:w="379"/><text x="12.5258%" y="319.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (25 samples, 0.02%)</title><rect x="12.6224%" y="293" width="0.0245%" height="15" fill="rgb(213,199,42)" fg:x="12893" fg:w="25"/><text x="12.8724%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,311 samples, 2.26%)</title><rect x="10.3981%" y="357" width="2.2625%" height="15" fill="rgb(235,201,11)" fg:x="10621" fg:w="2311"/><text x="10.6481%" y="367.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,310 samples, 2.26%)</title><rect x="10.3990%" y="341" width="2.2615%" height="15" fill="rgb(207,46,11)" fg:x="10622" fg:w="2310"/><text x="10.6490%" y="351.50">c..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (454 samples, 0.44%)</title><rect x="12.2161%" y="325" width="0.4445%" height="15" fill="rgb(241,35,35)" fg:x="12478" fg:w="454"/><text x="12.4661%" y="335.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (14 samples, 0.01%)</title><rect x="12.6469%" y="309" width="0.0137%" height="15" fill="rgb(243,32,47)" fg:x="12918" fg:w="14"/><text x="12.8969%" y="319.50"></text></g><g><title>__log2_finite (29 samples, 0.03%)</title><rect x="12.7957%" y="325" width="0.0284%" height="15" fill="rgb(247,202,23)" fg:x="13070" fg:w="29"/><text x="13.0457%" y="335.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (121 samples, 0.12%)</title><rect x="12.7134%" y="341" width="0.1185%" height="15" fill="rgb(219,102,11)" fg:x="12986" fg:w="121"/><text x="12.9634%" y="351.50"></text></g><g><title>xword_generator::get_matching_words (2,516 samples, 2.46%)</title><rect x="10.3755%" y="373" width="2.4632%" height="15" fill="rgb(243,110,44)" fg:x="10598" fg:w="2516"/><text x="10.6255%" y="383.50">xw..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (147 samples, 0.14%)</title><rect x="12.6948%" y="357" width="0.1439%" height="15" fill="rgb(222,74,54)" fg:x="12967" fg:w="147"/><text x="12.9448%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 0.06%)</title><rect x="13.3341%" y="309" width="0.0568%" height="15" fill="rgb(216,99,12)" fg:x="13620" fg:w="58"/><text x="13.5841%" y="319.50"></text></g><g><title>__libc_malloc (36 samples, 0.04%)</title><rect x="13.3557%" y="293" width="0.0352%" height="15" fill="rgb(226,22,26)" fg:x="13642" fg:w="36"/><text x="13.6057%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (204 samples, 0.20%)</title><rect x="13.1971%" y="357" width="0.1997%" height="15" fill="rgb(217,163,10)" fg:x="13480" fg:w="204"/><text x="13.4471%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (78 samples, 0.08%)</title><rect x="13.3204%" y="341" width="0.0764%" height="15" fill="rgb(213,25,53)" fg:x="13606" fg:w="78"/><text x="13.5704%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.08%)</title><rect x="13.3204%" y="325" width="0.0764%" height="15" fill="rgb(252,105,26)" fg:x="13606" fg:w="78"/><text x="13.5704%" y="335.50"></text></g><g><title>[libc-2.31.so] (259 samples, 0.25%)</title><rect x="13.3968%" y="357" width="0.2536%" height="15" fill="rgb(220,39,43)" fg:x="13684" fg:w="259"/><text x="13.6468%" y="367.50"></text></g><g><title>__libc_malloc (19 samples, 0.02%)</title><rect x="13.6503%" y="357" width="0.0186%" height="15" fill="rgb(229,68,48)" fg:x="13943" fg:w="19"/><text x="13.9003%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (15 samples, 0.01%)</title><rect x="13.7169%" y="293" width="0.0147%" height="15" fill="rgb(252,8,32)" fg:x="14011" fg:w="15"/><text x="13.9669%" y="303.50"></text></g><g><title>__libc_malloc (11 samples, 0.01%)</title><rect x="13.7717%" y="101" width="0.0108%" height="15" fill="rgb(223,20,43)" fg:x="14067" fg:w="11"/><text x="14.0217%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.02%)</title><rect x="13.7629%" y="117" width="0.0225%" height="15" fill="rgb(229,81,49)" fg:x="14058" fg:w="23"/><text x="14.0129%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (36 samples, 0.04%)</title><rect x="13.7522%" y="181" width="0.0352%" height="15" fill="rgb(236,28,36)" fg:x="14047" fg:w="36"/><text x="14.0022%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.04%)</title><rect x="13.7522%" y="165" width="0.0352%" height="15" fill="rgb(249,185,26)" fg:x="14047" fg:w="36"/><text x="14.0022%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="13.7580%" y="149" width="0.0294%" height="15" fill="rgb(249,174,33)" fg:x="14053" fg:w="30"/><text x="14.0080%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.03%)</title><rect x="13.7580%" y="133" width="0.0294%" height="15" fill="rgb(233,201,37)" fg:x="14053" fg:w="30"/><text x="14.0080%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (51 samples, 0.05%)</title><rect x="13.7443%" y="277" width="0.0499%" height="15" fill="rgb(221,78,26)" fg:x="14039" fg:w="51"/><text x="13.9943%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (47 samples, 0.05%)</title><rect x="13.7482%" y="261" width="0.0460%" height="15" fill="rgb(250,127,30)" fg:x="14043" fg:w="47"/><text x="13.9982%" y="271.50"></text></g><g><title>alloc::string::String::push_str (47 samples, 0.05%)</title><rect x="13.7482%" y="245" width="0.0460%" height="15" fill="rgb(230,49,44)" fg:x="14043" fg:w="47"/><text x="13.9982%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (47 samples, 0.05%)</title><rect x="13.7482%" y="229" width="0.0460%" height="15" fill="rgb(229,67,23)" fg:x="14043" fg:w="47"/><text x="13.9982%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (47 samples, 0.05%)</title><rect x="13.7482%" y="213" width="0.0460%" height="15" fill="rgb(249,83,47)" fg:x="14043" fg:w="47"/><text x="13.9982%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (47 samples, 0.05%)</title><rect x="13.7482%" y="197" width="0.0460%" height="15" fill="rgb(215,43,3)" fg:x="14043" fg:w="47"/><text x="13.9982%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="13.8011%" y="149" width="0.0186%" height="15" fill="rgb(238,154,13)" fg:x="14097" fg:w="19"/><text x="14.0511%" y="159.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (37 samples, 0.04%)</title><rect x="13.7943%" y="277" width="0.0362%" height="15" fill="rgb(219,56,2)" fg:x="14090" fg:w="37"/><text x="14.0443%" y="287.50"></text></g><g><title>core::str::count::count_chars (37 samples, 0.04%)</title><rect x="13.7943%" y="261" width="0.0362%" height="15" fill="rgb(233,0,4)" fg:x="14090" fg:w="37"/><text x="14.0443%" y="271.50"></text></g><g><title>core::str::count::char_count_general_case (35 samples, 0.03%)</title><rect x="13.7962%" y="245" width="0.0343%" height="15" fill="rgb(235,30,7)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (35 samples, 0.03%)</title><rect x="13.7962%" y="229" width="0.0343%" height="15" fill="rgb(250,79,13)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (35 samples, 0.03%)</title><rect x="13.7962%" y="213" width="0.0343%" height="15" fill="rgb(211,146,34)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="223.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (35 samples, 0.03%)</title><rect x="13.7962%" y="197" width="0.0343%" height="15" fill="rgb(228,22,38)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.03%)</title><rect x="13.7962%" y="181" width="0.0343%" height="15" fill="rgb(235,168,5)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 0.03%)</title><rect x="13.7962%" y="165" width="0.0343%" height="15" fill="rgb(221,155,16)" fg:x="14092" fg:w="35"/><text x="14.0462%" y="175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.01%)</title><rect x="13.8197%" y="149" width="0.0108%" height="15" fill="rgb(215,215,53)" fg:x="14116" fg:w="11"/><text x="14.0697%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="13.8510%" y="213" width="0.0157%" height="15" fill="rgb(223,4,10)" fg:x="14148" fg:w="16"/><text x="14.1010%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (19 samples, 0.02%)</title><rect x="13.8510%" y="261" width="0.0186%" height="15" fill="rgb(234,103,6)" fg:x="14148" fg:w="19"/><text x="14.1010%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (19 samples, 0.02%)</title><rect x="13.8510%" y="245" width="0.0186%" height="15" fill="rgb(227,97,0)" fg:x="14148" fg:w="19"/><text x="14.1010%" y="255.50"></text></g><g><title>alloc::string::String::push (19 samples, 0.02%)</title><rect x="13.8510%" y="229" width="0.0186%" height="15" fill="rgb(234,150,53)" fg:x="14148" fg:w="19"/><text x="14.1010%" y="239.50"></text></g><g><title>core::fmt::PostPadding::write (38 samples, 0.04%)</title><rect x="13.8354%" y="277" width="0.0372%" height="15" fill="rgb(228,201,54)" fg:x="14132" fg:w="38"/><text x="14.0854%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad (146 samples, 0.14%)</title><rect x="13.7316%" y="293" width="0.1429%" height="15" fill="rgb(222,22,37)" fg:x="14026" fg:w="146"/><text x="13.9816%" y="303.50"></text></g><g><title>alloc::fmt::format::format_inner (217 samples, 0.21%)</title><rect x="13.6689%" y="357" width="0.2124%" height="15" fill="rgb(237,53,32)" fg:x="13962" fg:w="217"/><text x="13.9189%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (206 samples, 0.20%)</title><rect x="13.6797%" y="341" width="0.2017%" height="15" fill="rgb(233,25,53)" fg:x="13973" fg:w="206"/><text x="13.9297%" y="351.50"></text></g><g><title>core::fmt::write (185 samples, 0.18%)</title><rect x="13.7003%" y="325" width="0.1811%" height="15" fill="rgb(210,40,34)" fg:x="13994" fg:w="185"/><text x="13.9503%" y="335.50"></text></g><g><title>core::fmt::run (176 samples, 0.17%)</title><rect x="13.7091%" y="309" width="0.1723%" height="15" fill="rgb(241,220,44)" fg:x="14003" fg:w="176"/><text x="13.9591%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="13.8882%" y="325" width="0.0215%" height="15" fill="rgb(235,28,35)" fg:x="14186" fg:w="22"/><text x="14.1382%" y="335.50"></text></g><g><title>__libc_malloc (17 samples, 0.02%)</title><rect x="13.8931%" y="309" width="0.0166%" height="15" fill="rgb(210,56,17)" fg:x="14191" fg:w="17"/><text x="14.1431%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="13.8814%" y="357" width="0.0294%" height="15" fill="rgb(224,130,29)" fg:x="14179" fg:w="30"/><text x="14.1314%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.03%)</title><rect x="13.8814%" y="341" width="0.0294%" height="15" fill="rgb(235,212,8)" fg:x="14179" fg:w="30"/><text x="14.1314%" y="351.50"></text></g><g><title>cfree (77 samples, 0.08%)</title><rect x="13.9108%" y="357" width="0.0754%" height="15" fill="rgb(223,33,50)" fg:x="14209" fg:w="77"/><text x="14.1608%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (143 samples, 0.14%)</title><rect x="13.9861%" y="357" width="0.1400%" height="15" fill="rgb(219,149,13)" fg:x="14286" fg:w="143"/><text x="14.2361%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.07%)</title><rect x="14.0596%" y="341" width="0.0666%" height="15" fill="rgb(250,156,29)" fg:x="14361" fg:w="68"/><text x="14.3096%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (37 samples, 0.04%)</title><rect x="14.1261%" y="357" width="0.0362%" height="15" fill="rgb(216,193,19)" fg:x="14429" fg:w="37"/><text x="14.3761%" y="367.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (202 samples, 0.20%)</title><rect x="14.1624%" y="357" width="0.1978%" height="15" fill="rgb(216,135,14)" fg:x="14466" fg:w="202"/><text x="14.4124%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (115 samples, 0.11%)</title><rect x="14.2475%" y="341" width="0.1126%" height="15" fill="rgb(241,47,5)" fg:x="14553" fg:w="115"/><text x="14.4975%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (51 samples, 0.05%)</title><rect x="14.3102%" y="325" width="0.0499%" height="15" fill="rgb(233,42,35)" fg:x="14617" fg:w="51"/><text x="14.5602%" y="335.50"></text></g><g><title>xword_generator::XWord::set_across (56 samples, 0.05%)</title><rect x="14.3601%" y="357" width="0.0548%" height="15" fill="rgb(231,13,6)" fg:x="14668" fg:w="56"/><text x="14.6101%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 samples, 0.14%)</title><rect x="14.6607%" y="293" width="0.1390%" height="15" fill="rgb(207,181,40)" fg:x="14975" fg:w="142"/><text x="14.9107%" y="303.50"></text></g><g><title>realloc (128 samples, 0.13%)</title><rect x="14.6744%" y="277" width="0.1253%" height="15" fill="rgb(254,173,49)" fg:x="14989" fg:w="128"/><text x="14.9244%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (173 samples, 0.17%)</title><rect x="14.6342%" y="341" width="0.1694%" height="15" fill="rgb(221,1,38)" fg:x="14948" fg:w="173"/><text x="14.8842%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 samples, 0.15%)</title><rect x="14.6528%" y="325" width="0.1508%" height="15" fill="rgb(206,124,46)" fg:x="14967" fg:w="154"/><text x="14.9028%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (154 samples, 0.15%)</title><rect x="14.6528%" y="309" width="0.1508%" height="15" fill="rgb(249,21,11)" fg:x="14967" fg:w="154"/><text x="14.9028%" y="319.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.02%)</title><rect x="14.8349%" y="325" width="0.0225%" height="15" fill="rgb(222,201,40)" fg:x="15153" fg:w="23"/><text x="15.0849%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (129 samples, 0.13%)</title><rect x="15.0307%" y="261" width="0.1263%" height="15" fill="rgb(235,61,29)" fg:x="15353" fg:w="129"/><text x="15.2807%" y="271.50"></text></g><g><title>realloc (118 samples, 0.12%)</title><rect x="15.0415%" y="245" width="0.1155%" height="15" fill="rgb(219,207,3)" fg:x="15364" fg:w="118"/><text x="15.2915%" y="255.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="15.1433%" y="229" width="0.0137%" height="15" fill="rgb(222,56,46)" fg:x="15468" fg:w="14"/><text x="15.3933%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (152 samples, 0.15%)</title><rect x="15.0112%" y="309" width="0.1488%" height="15" fill="rgb(239,76,54)" fg:x="15333" fg:w="152"/><text x="15.2612%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (139 samples, 0.14%)</title><rect x="15.0239%" y="293" width="0.1361%" height="15" fill="rgb(231,124,27)" fg:x="15346" fg:w="139"/><text x="15.2739%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (139 samples, 0.14%)</title><rect x="15.0239%" y="277" width="0.1361%" height="15" fill="rgb(249,195,6)" fg:x="15346" fg:w="139"/><text x="15.2739%" y="287.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.02%)</title><rect x="15.2305%" y="293" width="0.0225%" height="15" fill="rgb(237,174,47)" fg:x="15557" fg:w="23"/><text x="15.4805%" y="303.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="15.2530%" y="293" width="0.0108%" height="15" fill="rgb(206,201,31)" fg:x="15580" fg:w="11"/><text x="15.5030%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.08%)</title><rect x="15.4605%" y="229" width="0.0813%" height="15" fill="rgb(231,57,52)" fg:x="15792" fg:w="83"/><text x="15.7105%" y="239.50"></text></g><g><title>realloc (78 samples, 0.08%)</title><rect x="15.4654%" y="213" width="0.0764%" height="15" fill="rgb(248,177,22)" fg:x="15797" fg:w="78"/><text x="15.7154%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (111 samples, 0.11%)</title><rect x="15.4370%" y="277" width="0.1087%" height="15" fill="rgb(215,211,37)" fg:x="15768" fg:w="111"/><text x="15.6870%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (97 samples, 0.09%)</title><rect x="15.4507%" y="261" width="0.0950%" height="15" fill="rgb(241,128,51)" fg:x="15782" fg:w="97"/><text x="15.7007%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (97 samples, 0.09%)</title><rect x="15.4507%" y="245" width="0.0950%" height="15" fill="rgb(227,165,31)" fg:x="15782" fg:w="97"/><text x="15.7007%" y="255.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="15.5868%" y="261" width="0.0127%" height="15" fill="rgb(228,167,24)" fg:x="15921" fg:w="13"/><text x="15.8368%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="15.6828%" y="245" width="0.0137%" height="15" fill="rgb(228,143,12)" fg:x="16019" fg:w="14"/><text x="15.9328%" y="255.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.04%)</title><rect x="15.6965%" y="245" width="0.0352%" height="15" fill="rgb(249,149,8)" fg:x="16033" fg:w="36"/><text x="15.9465%" y="255.50"></text></g><g><title>__libc_malloc (31 samples, 0.03%)</title><rect x="15.7317%" y="245" width="0.0303%" height="15" fill="rgb(243,35,44)" fg:x="16069" fg:w="31"/><text x="15.9817%" y="255.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="15.7621%" y="245" width="0.0147%" height="15" fill="rgb(246,89,9)" fg:x="16100" fg:w="15"/><text x="16.0121%" y="255.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.05%)</title><rect x="16.1028%" y="229" width="0.0538%" height="15" fill="rgb(233,213,13)" fg:x="16448" fg:w="55"/><text x="16.3528%" y="239.50"></text></g><g><title>__libc_malloc (207 samples, 0.20%)</title><rect x="16.1566%" y="229" width="0.2027%" height="15" fill="rgb(233,141,41)" fg:x="16503" fg:w="207"/><text x="16.4066%" y="239.50"></text></g><g><title>[libc-2.31.so] (168 samples, 0.16%)</title><rect x="16.1948%" y="213" width="0.1645%" height="15" fill="rgb(239,167,4)" fg:x="16542" fg:w="168"/><text x="16.4448%" y="223.50"></text></g><g><title>alloc::string::String::with_capacity (47 samples, 0.05%)</title><rect x="16.3612%" y="213" width="0.0460%" height="15" fill="rgb(209,217,16)" fg:x="16712" fg:w="47"/><text x="16.6112%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (45 samples, 0.04%)</title><rect x="16.3632%" y="197" width="0.0441%" height="15" fill="rgb(219,88,35)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="16.3632%" y="181" width="0.0441%" height="15" fill="rgb(220,193,23)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="16.3632%" y="165" width="0.0441%" height="15" fill="rgb(230,90,52)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.04%)</title><rect x="16.3632%" y="149" width="0.0441%" height="15" fill="rgb(252,106,19)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="16.3632%" y="133" width="0.0441%" height="15" fill="rgb(206,74,20)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="16.3632%" y="117" width="0.0441%" height="15" fill="rgb(230,138,44)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="127.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.04%)</title><rect x="16.3632%" y="101" width="0.0441%" height="15" fill="rgb(235,182,43)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="111.50"></text></g><g><title>__rdl_alloc (45 samples, 0.04%)</title><rect x="16.3632%" y="85" width="0.0441%" height="15" fill="rgb(242,16,51)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (45 samples, 0.04%)</title><rect x="16.3632%" y="69" width="0.0441%" height="15" fill="rgb(248,9,4)" fg:x="16714" fg:w="45"/><text x="16.6132%" y="79.50"></text></g><g><title>__libc_malloc (44 samples, 0.04%)</title><rect x="16.3642%" y="53" width="0.0431%" height="15" fill="rgb(210,31,22)" fg:x="16715" fg:w="44"/><text x="16.6142%" y="63.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="16.4297%" y="133" width="0.0108%" height="15" fill="rgb(239,54,39)" fg:x="16782" fg:w="11"/><text x="16.6797%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.01%)</title><rect x="16.4297%" y="197" width="0.0137%" height="15" fill="rgb(230,99,41)" fg:x="16782" fg:w="14"/><text x="16.6797%" y="207.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.01%)</title><rect x="16.4297%" y="181" width="0.0137%" height="15" fill="rgb(253,106,12)" fg:x="16782" fg:w="14"/><text x="16.6797%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.01%)</title><rect x="16.4297%" y="165" width="0.0137%" height="15" fill="rgb(213,46,41)" fg:x="16782" fg:w="14"/><text x="16.6797%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.01%)</title><rect x="16.4297%" y="149" width="0.0137%" height="15" fill="rgb(215,133,35)" fg:x="16782" fg:w="14"/><text x="16.6797%" y="159.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (38 samples, 0.04%)</title><rect x="16.4072%" y="213" width="0.0372%" height="15" fill="rgb(213,28,5)" fg:x="16759" fg:w="38"/><text x="16.6572%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (38 samples, 0.04%)</title><rect x="16.4611%" y="181" width="0.0372%" height="15" fill="rgb(215,77,49)" fg:x="16814" fg:w="38"/><text x="16.7111%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 0.03%)</title><rect x="16.4650%" y="165" width="0.0333%" height="15" fill="rgb(248,100,22)" fg:x="16818" fg:w="34"/><text x="16.7150%" y="175.50"></text></g><g><title>alloc::string::String::push_str (34 samples, 0.03%)</title><rect x="16.4650%" y="149" width="0.0333%" height="15" fill="rgb(208,67,9)" fg:x="16818" fg:w="34"/><text x="16.7150%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.03%)</title><rect x="16.4650%" y="133" width="0.0333%" height="15" fill="rgb(219,133,21)" fg:x="16818" fg:w="34"/><text x="16.7150%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.03%)</title><rect x="16.4650%" y="117" width="0.0333%" height="15" fill="rgb(246,46,29)" fg:x="16818" fg:w="34"/><text x="16.7150%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.03%)</title><rect x="16.4650%" y="101" width="0.0333%" height="15" fill="rgb(246,185,52)" fg:x="16818" fg:w="34"/><text x="16.7150%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.03%)</title><rect x="16.4728%" y="85" width="0.0255%" height="15" fill="rgb(252,136,11)" fg:x="16826" fg:w="26"/><text x="16.7228%" y="95.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.02%)</title><rect x="16.4816%" y="69" width="0.0166%" height="15" fill="rgb(219,138,53)" fg:x="16835" fg:w="17"/><text x="16.7316%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.02%)</title><rect x="16.5325%" y="149" width="0.0157%" height="15" fill="rgb(211,51,23)" fg:x="16887" fg:w="16"/><text x="16.7825%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.01%)</title><rect x="16.5345%" y="133" width="0.0137%" height="15" fill="rgb(247,221,28)" fg:x="16889" fg:w="14"/><text x="16.7845%" y="143.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.01%)</title><rect x="16.5345%" y="117" width="0.0137%" height="15" fill="rgb(251,222,45)" fg:x="16889" fg:w="14"/><text x="16.7845%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.01%)</title><rect x="16.5345%" y="101" width="0.0137%" height="15" fill="rgb(217,162,53)" fg:x="16889" fg:w="14"/><text x="16.7845%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.01%)</title><rect x="16.5345%" y="85" width="0.0137%" height="15" fill="rgb(229,93,14)" fg:x="16889" fg:w="14"/><text x="16.7845%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.01%)</title><rect x="16.5345%" y="69" width="0.0137%" height="15" fill="rgb(209,67,49)" fg:x="16889" fg:w="14"/><text x="16.7845%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="16.5355%" y="53" width="0.0127%" height="15" fill="rgb(213,87,29)" fg:x="16890" fg:w="13"/><text x="16.7855%" y="63.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="16.5374%" y="37" width="0.0108%" height="15" fill="rgb(205,151,52)" fg:x="16892" fg:w="11"/><text x="16.7874%" y="47.50"></text></g><g><title>core::fmt::Formatter::pad_integral (25 samples, 0.02%)</title><rect x="16.5482%" y="149" width="0.0245%" height="15" fill="rgb(253,215,39)" fg:x="16903" fg:w="25"/><text x="16.7982%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (226 samples, 0.22%)</title><rect x="16.3593%" y="229" width="0.2213%" height="15" fill="rgb(221,220,41)" fg:x="16710" fg:w="226"/><text x="16.6093%" y="239.50"></text></g><g><title>core::fmt::Write::write_fmt (139 samples, 0.14%)</title><rect x="16.4444%" y="213" width="0.1361%" height="15" fill="rgb(218,133,21)" fg:x="16797" fg:w="139"/><text x="16.6944%" y="223.50"></text></g><g><title>core::fmt::write (134 samples, 0.13%)</title><rect x="16.4493%" y="197" width="0.1312%" height="15" fill="rgb(221,193,43)" fg:x="16802" fg:w="134"/><text x="16.6993%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (70 samples, 0.07%)</title><rect x="16.5120%" y="181" width="0.0685%" height="15" fill="rgb(240,128,52)" fg:x="16866" fg:w="70"/><text x="16.7620%" y="191.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (67 samples, 0.07%)</title><rect x="16.5149%" y="165" width="0.0656%" height="15" fill="rgb(253,114,12)" fg:x="16869" fg:w="67"/><text x="16.7649%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (35 samples, 0.03%)</title><rect x="16.5805%" y="229" width="0.0343%" height="15" fill="rgb(215,223,47)" fg:x="16936" fg:w="35"/><text x="16.8305%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.03%)</title><rect x="16.5854%" y="213" width="0.0294%" height="15" fill="rgb(248,225,23)" fg:x="16941" fg:w="30"/><text x="16.8354%" y="223.50"></text></g><g><title>__libc_malloc (23 samples, 0.02%)</title><rect x="16.5923%" y="197" width="0.0225%" height="15" fill="rgb(250,108,0)" fg:x="16948" fg:w="23"/><text x="16.8423%" y="207.50"></text></g><g><title>cfree (33 samples, 0.03%)</title><rect x="16.6148%" y="229" width="0.0323%" height="15" fill="rgb(228,208,7)" fg:x="16971" fg:w="33"/><text x="16.8648%" y="239.50"></text></g><g><title>__log2_finite (1,940 samples, 1.90%)</title><rect x="20.3996%" y="213" width="1.8993%" height="15" fill="rgb(244,45,10)" fg:x="20837" fg:w="1940"/><text x="20.6496%" y="223.50">_..</text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (6,120 samples, 5.99%)</title><rect x="16.6471%" y="229" width="5.9915%" height="15" fill="rgb(207,125,25)" fg:x="17004" fg:w="6120"/><text x="16.8971%" y="239.50">fid_rs::..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (347 samples, 0.34%)</title><rect x="22.2989%" y="213" width="0.3397%" height="15" fill="rgb(210,195,18)" fg:x="22777" fg:w="347"/><text x="22.5489%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,295 samples, 7.14%)</title><rect x="15.5457%" y="277" width="7.1419%" height="15" fill="rgb(249,80,12)" fg:x="15879" fg:w="7295"/><text x="15.7957%" y="287.50">&lt;core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7,235 samples, 7.08%)</title><rect x="15.6044%" y="261" width="7.0831%" height="15" fill="rgb(221,65,9)" fg:x="15939" fg:w="7235"/><text x="15.8544%" y="271.50">core::ops:..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (7,059 samples, 6.91%)</title><rect x="15.7767%" y="245" width="6.9108%" height="15" fill="rgb(235,49,36)" fg:x="16115" fg:w="7059"/><text x="16.0267%" y="255.50">trie_rs::..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (50 samples, 0.05%)</title><rect x="22.6386%" y="229" width="0.0490%" height="15" fill="rgb(225,32,20)" fg:x="23124" fg:w="50"/><text x="22.8886%" y="239.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.11%)</title><rect x="22.6876%" y="277" width="0.1106%" height="15" fill="rgb(215,141,46)" fg:x="23174" fg:w="113"/><text x="22.9376%" y="287.50"></text></g><g><title>__libc_malloc (79 samples, 0.08%)</title><rect x="22.7982%" y="277" width="0.0773%" height="15" fill="rgb(250,160,47)" fg:x="23287" fg:w="79"/><text x="23.0482%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="22.8755%" y="277" width="0.0137%" height="15" fill="rgb(216,222,40)" fg:x="23366" fg:w="14"/><text x="23.1255%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.01%)</title><rect x="22.8755%" y="261" width="0.0137%" height="15" fill="rgb(234,217,39)" fg:x="23366" fg:w="14"/><text x="23.1255%" y="271.50"></text></g><g><title>cfree (46 samples, 0.05%)</title><rect x="22.8893%" y="277" width="0.0450%" height="15" fill="rgb(207,178,40)" fg:x="23380" fg:w="46"/><text x="23.1393%" y="287.50"></text></g><g><title>[libc-2.31.so] (132 samples, 0.13%)</title><rect x="23.4052%" y="261" width="0.1292%" height="15" fill="rgb(221,136,13)" fg:x="23907" fg:w="132"/><text x="23.6552%" y="271.50"></text></g><g><title>__libc_malloc (272 samples, 0.27%)</title><rect x="23.5344%" y="261" width="0.2663%" height="15" fill="rgb(249,199,10)" fg:x="24039" fg:w="272"/><text x="23.7844%" y="271.50"></text></g><g><title>[libc-2.31.so] (176 samples, 0.17%)</title><rect x="23.6284%" y="245" width="0.1723%" height="15" fill="rgb(249,222,13)" fg:x="24135" fg:w="176"/><text x="23.8784%" y="255.50"></text></g><g><title>alloc::string::String::with_capacity (67 samples, 0.07%)</title><rect x="23.8027%" y="245" width="0.0656%" height="15" fill="rgb(244,185,38)" fg:x="24313" fg:w="67"/><text x="24.0527%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (64 samples, 0.06%)</title><rect x="23.8056%" y="229" width="0.0627%" height="15" fill="rgb(236,202,9)" fg:x="24316" fg:w="64"/><text x="24.0556%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="23.8056%" y="213" width="0.0627%" height="15" fill="rgb(250,229,37)" fg:x="24316" fg:w="64"/><text x="24.0556%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="23.8056%" y="197" width="0.0627%" height="15" fill="rgb(206,174,23)" fg:x="24316" fg:w="64"/><text x="24.0556%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (64 samples, 0.06%)</title><rect x="23.8056%" y="181" width="0.0627%" height="15" fill="rgb(211,33,43)" fg:x="24316" fg:w="64"/><text x="24.0556%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.06%)</title><rect x="23.8076%" y="165" width="0.0607%" height="15" fill="rgb(245,58,50)" fg:x="24318" fg:w="62"/><text x="24.0576%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.06%)</title><rect x="23.8076%" y="149" width="0.0607%" height="15" fill="rgb(244,68,36)" fg:x="24318" fg:w="62"/><text x="24.0576%" y="159.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.06%)</title><rect x="23.8076%" y="133" width="0.0607%" height="15" fill="rgb(232,229,15)" fg:x="24318" fg:w="62"/><text x="24.0576%" y="143.50"></text></g><g><title>__rdl_alloc (62 samples, 0.06%)</title><rect x="23.8076%" y="117" width="0.0607%" height="15" fill="rgb(254,30,23)" fg:x="24318" fg:w="62"/><text x="24.0576%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (62 samples, 0.06%)</title><rect x="23.8076%" y="101" width="0.0607%" height="15" fill="rgb(235,160,14)" fg:x="24318" fg:w="62"/><text x="24.0576%" y="111.50"></text></g><g><title>__libc_malloc (54 samples, 0.05%)</title><rect x="23.8154%" y="85" width="0.0529%" height="15" fill="rgb(212,155,44)" fg:x="24326" fg:w="54"/><text x="24.0654%" y="95.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="23.8839%" y="165" width="0.0166%" height="15" fill="rgb(226,2,50)" fg:x="24396" fg:w="17"/><text x="24.1339%" y="175.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (34 samples, 0.03%)</title><rect x="23.8683%" y="245" width="0.0333%" height="15" fill="rgb(234,177,6)" fg:x="24380" fg:w="34"/><text x="24.1183%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (18 samples, 0.02%)</title><rect x="23.8839%" y="229" width="0.0176%" height="15" fill="rgb(217,24,9)" fg:x="24396" fg:w="18"/><text x="24.1339%" y="239.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (18 samples, 0.02%)</title><rect x="23.8839%" y="213" width="0.0176%" height="15" fill="rgb(220,13,46)" fg:x="24396" fg:w="18"/><text x="24.1339%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="23.8839%" y="197" width="0.0176%" height="15" fill="rgb(239,221,27)" fg:x="24396" fg:w="18"/><text x="24.1339%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.02%)</title><rect x="23.8839%" y="181" width="0.0176%" height="15" fill="rgb(222,198,25)" fg:x="24396" fg:w="18"/><text x="24.1339%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (57 samples, 0.06%)</title><rect x="23.9378%" y="213" width="0.0558%" height="15" fill="rgb(211,99,13)" fg:x="24451" fg:w="57"/><text x="24.1878%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (47 samples, 0.05%)</title><rect x="23.9476%" y="197" width="0.0460%" height="15" fill="rgb(232,111,31)" fg:x="24461" fg:w="47"/><text x="24.1976%" y="207.50"></text></g><g><title>alloc::string::String::push_str (47 samples, 0.05%)</title><rect x="23.9476%" y="181" width="0.0460%" height="15" fill="rgb(245,82,37)" fg:x="24461" fg:w="47"/><text x="24.1976%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (47 samples, 0.05%)</title><rect x="23.9476%" y="165" width="0.0460%" height="15" fill="rgb(227,149,46)" fg:x="24461" fg:w="47"/><text x="24.1976%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (47 samples, 0.05%)</title><rect x="23.9476%" y="149" width="0.0460%" height="15" fill="rgb(218,36,50)" fg:x="24461" fg:w="47"/><text x="24.1976%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (47 samples, 0.05%)</title><rect x="23.9476%" y="133" width="0.0460%" height="15" fill="rgb(226,80,48)" fg:x="24461" fg:w="47"/><text x="24.1976%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.04%)</title><rect x="23.9574%" y="117" width="0.0362%" height="15" fill="rgb(238,224,15)" fg:x="24471" fg:w="37"/><text x="24.2074%" y="127.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.03%)</title><rect x="23.9652%" y="101" width="0.0284%" height="15" fill="rgb(241,136,10)" fg:x="24479" fg:w="29"/><text x="24.2152%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="23.9936%" y="213" width="0.0137%" height="15" fill="rgb(208,32,45)" fg:x="24508" fg:w="14"/><text x="24.2436%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="23.9936%" y="197" width="0.0137%" height="15" fill="rgb(207,135,9)" fg:x="24508" fg:w="14"/><text x="24.2436%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.02%)</title><rect x="24.0650%" y="181" width="0.0206%" height="15" fill="rgb(206,86,44)" fg:x="24581" fg:w="21"/><text x="24.3150%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.02%)</title><rect x="24.0670%" y="165" width="0.0186%" height="15" fill="rgb(245,177,15)" fg:x="24583" fg:w="19"/><text x="24.3170%" y="175.50"></text></g><g><title>alloc::string::String::push_str (19 samples, 0.02%)</title><rect x="24.0670%" y="149" width="0.0186%" height="15" fill="rgb(206,64,50)" fg:x="24583" fg:w="19"/><text x="24.3170%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.02%)</title><rect x="24.0670%" y="133" width="0.0186%" height="15" fill="rgb(234,36,40)" fg:x="24583" fg:w="19"/><text x="24.3170%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.02%)</title><rect x="24.0670%" y="117" width="0.0186%" height="15" fill="rgb(213,64,8)" fg:x="24583" fg:w="19"/><text x="24.3170%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.02%)</title><rect x="24.0670%" y="101" width="0.0186%" height="15" fill="rgb(210,75,36)" fg:x="24583" fg:w="19"/><text x="24.3170%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="24.0719%" y="85" width="0.0137%" height="15" fill="rgb(229,88,21)" fg:x="24588" fg:w="14"/><text x="24.3219%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (47 samples, 0.05%)</title><rect x="24.0856%" y="181" width="0.0460%" height="15" fill="rgb(252,204,47)" fg:x="24602" fg:w="47"/><text x="24.3356%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (12 samples, 0.01%)</title><rect x="24.1199%" y="165" width="0.0117%" height="15" fill="rgb(208,77,27)" fg:x="24637" fg:w="12"/><text x="24.3699%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (351 samples, 0.34%)</title><rect x="23.8007%" y="261" width="0.3436%" height="15" fill="rgb(221,76,26)" fg:x="24311" fg:w="351"/><text x="24.0507%" y="271.50"></text></g><g><title>core::fmt::Write::write_fmt (248 samples, 0.24%)</title><rect x="23.9016%" y="245" width="0.2428%" height="15" fill="rgb(225,139,18)" fg:x="24414" fg:w="248"/><text x="24.1516%" y="255.50"></text></g><g><title>core::fmt::write (236 samples, 0.23%)</title><rect x="23.9133%" y="229" width="0.2310%" height="15" fill="rgb(230,137,11)" fg:x="24426" fg:w="236"/><text x="24.1633%" y="239.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (130 samples, 0.13%)</title><rect x="24.0171%" y="213" width="0.1273%" height="15" fill="rgb(212,28,1)" fg:x="24532" fg:w="130"/><text x="24.2671%" y="223.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (125 samples, 0.12%)</title><rect x="24.0220%" y="197" width="0.1224%" height="15" fill="rgb(248,164,17)" fg:x="24537" fg:w="125"/><text x="24.2720%" y="207.50"></text></g><g><title>__libc_malloc (39 samples, 0.04%)</title><rect x="24.1747%" y="229" width="0.0382%" height="15" fill="rgb(222,171,42)" fg:x="24693" fg:w="39"/><text x="24.4247%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (87 samples, 0.09%)</title><rect x="24.1443%" y="261" width="0.0852%" height="15" fill="rgb(243,84,45)" fg:x="24662" fg:w="87"/><text x="24.3943%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 0.07%)</title><rect x="24.1571%" y="245" width="0.0724%" height="15" fill="rgb(252,49,23)" fg:x="24675" fg:w="74"/><text x="24.4071%" y="255.50"></text></g><g><title>realloc (17 samples, 0.02%)</title><rect x="24.2129%" y="229" width="0.0166%" height="15" fill="rgb(215,19,7)" fg:x="24732" fg:w="17"/><text x="24.4629%" y="239.50"></text></g><g><title>cfree (57 samples, 0.06%)</title><rect x="24.2295%" y="261" width="0.0558%" height="15" fill="rgb(238,81,41)" fg:x="24749" fg:w="57"/><text x="24.4795%" y="271.50"></text></g><g><title>__log2_finite (3,263 samples, 3.19%)</title><rect x="30.7076%" y="245" width="3.1945%" height="15" fill="rgb(210,199,37)" fg:x="31366" fg:w="3263"/><text x="30.9576%" y="255.50">__l..</text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (10,398 samples, 10.18%)</title><rect x="24.2853%" y="261" width="10.1797%" height="15" fill="rgb(244,192,49)" fg:x="24806" fg:w="10398"/><text x="24.5353%" y="271.50">fid_rs::fid::fi..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (575 samples, 0.56%)</title><rect x="33.9021%" y="245" width="0.5629%" height="15" fill="rgb(226,211,11)" fg:x="34629" fg:w="575"/><text x="34.1521%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,817 samples, 19.40%)</title><rect x="15.1600%" y="309" width="19.4010%" height="15" fill="rgb(236,162,54)" fg:x="15485" fg:w="19817"/><text x="15.4100%" y="319.50">&lt;core::iter::adapters::flatten..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19,711 samples, 19.30%)</title><rect x="15.2637%" y="293" width="19.2973%" height="15" fill="rgb(220,229,9)" fg:x="15591" fg:w="19711"/><text x="15.5137%" y="303.50">core::ops::function::impls::&lt;i..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (11,876 samples, 11.63%)</title><rect x="22.9343%" y="277" width="11.6267%" height="15" fill="rgb(250,87,22)" fg:x="23426" fg:w="11876"/><text x="23.1843%" y="287.50">trie_rs::trie::tr..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (98 samples, 0.10%)</title><rect x="34.4651%" y="261" width="0.0959%" height="15" fill="rgb(239,43,17)" fg:x="35204" fg:w="98"/><text x="34.7151%" y="271.50"></text></g><g><title>[libc-2.31.so] (117 samples, 0.11%)</title><rect x="34.5610%" y="309" width="0.1145%" height="15" fill="rgb(231,177,25)" fg:x="35302" fg:w="117"/><text x="34.8110%" y="319.50"></text></g><g><title>__libc_malloc (37 samples, 0.04%)</title><rect x="34.6756%" y="309" width="0.0362%" height="15" fill="rgb(219,179,1)" fg:x="35419" fg:w="37"/><text x="34.9256%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.02%)</title><rect x="34.7118%" y="309" width="0.0245%" height="15" fill="rgb(238,219,53)" fg:x="35456" fg:w="25"/><text x="34.9618%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="34.7128%" y="293" width="0.0235%" height="15" fill="rgb(232,167,36)" fg:x="35457" fg:w="24"/><text x="34.9628%" y="303.50"></text></g><g><title>realloc (24 samples, 0.02%)</title><rect x="34.7128%" y="277" width="0.0235%" height="15" fill="rgb(244,19,51)" fg:x="35457" fg:w="24"/><text x="34.9628%" y="287.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="34.7216%" y="261" width="0.0147%" height="15" fill="rgb(224,6,22)" fg:x="35466" fg:w="15"/><text x="34.9716%" y="271.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="34.7225%" y="245" width="0.0137%" height="15" fill="rgb(224,145,5)" fg:x="35467" fg:w="14"/><text x="34.9725%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="34.7411%" y="277" width="0.0274%" height="15" fill="rgb(234,130,49)" fg:x="35486" fg:w="28"/><text x="34.9911%" y="287.50"></text></g><g><title>realloc (14 samples, 0.01%)</title><rect x="34.7549%" y="261" width="0.0137%" height="15" fill="rgb(254,6,2)" fg:x="35500" fg:w="14"/><text x="35.0049%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.03%)</title><rect x="34.7363%" y="309" width="0.0333%" height="15" fill="rgb(208,96,46)" fg:x="35481" fg:w="34"/><text x="34.9863%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.03%)</title><rect x="34.7363%" y="293" width="0.0333%" height="15" fill="rgb(239,3,39)" fg:x="35481" fg:w="34"/><text x="34.9863%" y="303.50"></text></g><g><title>cfree (45 samples, 0.04%)</title><rect x="34.7695%" y="309" width="0.0441%" height="15" fill="rgb(233,210,1)" fg:x="35515" fg:w="45"/><text x="35.0195%" y="319.50"></text></g><g><title>[libc-2.31.so] (114 samples, 0.11%)</title><rect x="35.2072%" y="293" width="0.1116%" height="15" fill="rgb(244,137,37)" fg:x="35962" fg:w="114"/><text x="35.4572%" y="303.50"></text></g><g><title>__libc_malloc (72 samples, 0.07%)</title><rect x="35.3188%" y="293" width="0.0705%" height="15" fill="rgb(240,136,2)" fg:x="36076" fg:w="72"/><text x="35.5688%" y="303.50"></text></g><g><title>alloc::string::String::with_capacity (45 samples, 0.04%)</title><rect x="35.3922%" y="277" width="0.0441%" height="15" fill="rgb(239,18,37)" fg:x="36151" fg:w="45"/><text x="35.6422%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (43 samples, 0.04%)</title><rect x="35.3941%" y="261" width="0.0421%" height="15" fill="rgb(218,185,22)" fg:x="36153" fg:w="43"/><text x="35.6441%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="35.3941%" y="245" width="0.0421%" height="15" fill="rgb(225,218,4)" fg:x="36153" fg:w="43"/><text x="35.6441%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="35.3941%" y="229" width="0.0421%" height="15" fill="rgb(230,182,32)" fg:x="36153" fg:w="43"/><text x="35.6441%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="35.3941%" y="213" width="0.0421%" height="15" fill="rgb(242,56,43)" fg:x="36153" fg:w="43"/><text x="35.6441%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.04%)</title><rect x="35.4010%" y="197" width="0.0352%" height="15" fill="rgb(233,99,24)" fg:x="36160" fg:w="36"/><text x="35.6510%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.04%)</title><rect x="35.4010%" y="181" width="0.0352%" height="15" fill="rgb(234,209,42)" fg:x="36160" fg:w="36"/><text x="35.6510%" y="191.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.04%)</title><rect x="35.4010%" y="165" width="0.0352%" height="15" fill="rgb(227,7,12)" fg:x="36160" fg:w="36"/><text x="35.6510%" y="175.50"></text></g><g><title>__rdl_alloc (36 samples, 0.04%)</title><rect x="35.4010%" y="149" width="0.0352%" height="15" fill="rgb(245,203,43)" fg:x="36160" fg:w="36"/><text x="35.6510%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.04%)</title><rect x="35.4010%" y="133" width="0.0352%" height="15" fill="rgb(238,205,33)" fg:x="36160" fg:w="36"/><text x="35.6510%" y="143.50"></text></g><g><title>__libc_malloc (33 samples, 0.03%)</title><rect x="35.4039%" y="117" width="0.0323%" height="15" fill="rgb(231,56,7)" fg:x="36163" fg:w="33"/><text x="35.6539%" y="127.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (35 samples, 0.03%)</title><rect x="35.4362%" y="277" width="0.0343%" height="15" fill="rgb(244,186,29)" fg:x="36196" fg:w="35"/><text x="35.6862%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (37 samples, 0.04%)</title><rect x="35.5018%" y="245" width="0.0362%" height="15" fill="rgb(234,111,31)" fg:x="36263" fg:w="37"/><text x="35.7518%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31 samples, 0.03%)</title><rect x="35.5077%" y="229" width="0.0303%" height="15" fill="rgb(241,149,10)" fg:x="36269" fg:w="31"/><text x="35.7577%" y="239.50"></text></g><g><title>alloc::string::String::push_str (31 samples, 0.03%)</title><rect x="35.5077%" y="213" width="0.0303%" height="15" fill="rgb(249,206,44)" fg:x="36269" fg:w="31"/><text x="35.7577%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.03%)</title><rect x="35.5077%" y="197" width="0.0303%" height="15" fill="rgb(251,153,30)" fg:x="36269" fg:w="31"/><text x="35.7577%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.03%)</title><rect x="35.5077%" y="181" width="0.0303%" height="15" fill="rgb(239,152,38)" fg:x="36269" fg:w="31"/><text x="35.7577%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.03%)</title><rect x="35.5077%" y="165" width="0.0303%" height="15" fill="rgb(249,139,47)" fg:x="36269" fg:w="31"/><text x="35.7577%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="35.5136%" y="149" width="0.0245%" height="15" fill="rgb(244,64,35)" fg:x="36275" fg:w="25"/><text x="35.7636%" y="159.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.02%)</title><rect x="35.5224%" y="133" width="0.0157%" height="15" fill="rgb(216,46,15)" fg:x="36284" fg:w="16"/><text x="35.7724%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="35.5381%" y="245" width="0.0108%" height="15" fill="rgb(250,74,19)" fg:x="36300" fg:w="11"/><text x="35.7881%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="35.5381%" y="229" width="0.0108%" height="15" fill="rgb(249,42,33)" fg:x="36300" fg:w="11"/><text x="35.7881%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.01%)</title><rect x="35.5870%" y="213" width="0.0147%" height="15" fill="rgb(242,149,17)" fg:x="36350" fg:w="15"/><text x="35.8370%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="35.5900%" y="197" width="0.0117%" height="15" fill="rgb(244,29,21)" fg:x="36353" fg:w="12"/><text x="35.8400%" y="207.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.01%)</title><rect x="35.5900%" y="181" width="0.0117%" height="15" fill="rgb(220,130,37)" fg:x="36353" fg:w="12"/><text x="35.8400%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="35.5900%" y="165" width="0.0117%" height="15" fill="rgb(211,67,2)" fg:x="36353" fg:w="12"/><text x="35.8400%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="35.5900%" y="149" width="0.0117%" height="15" fill="rgb(235,68,52)" fg:x="36353" fg:w="12"/><text x="35.8400%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="35.5900%" y="133" width="0.0117%" height="15" fill="rgb(246,142,3)" fg:x="36353" fg:w="12"/><text x="35.8400%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral (25 samples, 0.02%)</title><rect x="35.6017%" y="213" width="0.0245%" height="15" fill="rgb(241,25,7)" fg:x="36365" fg:w="25"/><text x="35.8517%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (254 samples, 0.25%)</title><rect x="35.3893%" y="293" width="0.2487%" height="15" fill="rgb(242,119,39)" fg:x="36148" fg:w="254"/><text x="35.6393%" y="303.50"></text></g><g><title>core::fmt::Write::write_fmt (171 samples, 0.17%)</title><rect x="35.4705%" y="277" width="0.1674%" height="15" fill="rgb(241,98,45)" fg:x="36231" fg:w="171"/><text x="35.7205%" y="287.50"></text></g><g><title>core::fmt::write (161 samples, 0.16%)</title><rect x="35.4803%" y="261" width="0.1576%" height="15" fill="rgb(254,28,30)" fg:x="36241" fg:w="161"/><text x="35.7303%" y="271.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (83 samples, 0.08%)</title><rect x="35.5567%" y="245" width="0.0813%" height="15" fill="rgb(241,142,54)" fg:x="36319" fg:w="83"/><text x="35.8067%" y="255.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (82 samples, 0.08%)</title><rect x="35.5576%" y="229" width="0.0803%" height="15" fill="rgb(222,85,15)" fg:x="36320" fg:w="82"/><text x="35.8076%" y="239.50"></text></g><g><title>__libc_malloc (31 samples, 0.03%)</title><rect x="35.6790%" y="261" width="0.0303%" height="15" fill="rgb(210,85,47)" fg:x="36444" fg:w="31"/><text x="35.9290%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (191 samples, 0.19%)</title><rect x="35.6379%" y="293" width="0.1870%" height="15" fill="rgb(224,206,25)" fg:x="36402" fg:w="191"/><text x="35.8879%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (172 samples, 0.17%)</title><rect x="35.6565%" y="277" width="0.1684%" height="15" fill="rgb(243,201,19)" fg:x="36421" fg:w="172"/><text x="35.9065%" y="287.50"></text></g><g><title>realloc (118 samples, 0.12%)</title><rect x="35.7094%" y="261" width="0.1155%" height="15" fill="rgb(236,59,4)" fg:x="36475" fg:w="118"/><text x="35.9594%" y="271.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.07%)</title><rect x="35.7525%" y="245" width="0.0724%" height="15" fill="rgb(254,179,45)" fg:x="36519" fg:w="74"/><text x="36.0025%" y="255.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.06%)</title><rect x="35.7623%" y="229" width="0.0627%" height="15" fill="rgb(226,14,10)" fg:x="36529" fg:w="64"/><text x="36.0123%" y="239.50"></text></g><g><title>cfree (40 samples, 0.04%)</title><rect x="35.8249%" y="293" width="0.0392%" height="15" fill="rgb(244,27,41)" fg:x="36593" fg:w="40"/><text x="36.0749%" y="303.50"></text></g><g><title>__log2_finite (2,144 samples, 2.10%)</title><rect x="41.3720%" y="277" width="2.0990%" height="15" fill="rgb(235,35,32)" fg:x="42259" fg:w="2144"/><text x="41.6220%" y="287.50">_..</text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (8,237 samples, 8.06%)</title><rect x="35.8641%" y="293" width="8.0641%" height="15" fill="rgb(218,68,31)" fg:x="36633" fg:w="8237"/><text x="36.1141%" y="303.50">fid_rs::fid..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (467 samples, 0.46%)</title><rect x="43.4710%" y="277" width="0.4572%" height="15" fill="rgb(207,120,37)" fg:x="44403" fg:w="467"/><text x="43.7210%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,904 samples, 29.28%)</title><rect x="14.8036%" y="341" width="29.2763%" height="15" fill="rgb(227,98,0)" fg:x="15121" fg:w="29904"/><text x="15.0536%" y="351.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; ..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29,842 samples, 29.22%)</title><rect x="14.8643%" y="325" width="29.2156%" height="15" fill="rgb(207,7,3)" fg:x="15183" fg:w="29842"/><text x="15.1143%" y="335.50">core::ops::function::impls::&lt;impl core::ops::fu..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (9,465 samples, 9.27%)</title><rect x="34.8136%" y="309" width="9.2663%" height="15" fill="rgb(206,98,19)" fg:x="35560" fg:w="9465"/><text x="35.0636%" y="319.50">trie_rs::trie..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (155 samples, 0.15%)</title><rect x="43.9282%" y="293" width="0.1517%" height="15" fill="rgb(217,5,26)" fg:x="44870" fg:w="155"/><text x="44.1782%" y="303.50"></text></g><g><title>[libc-2.31.so] (190 samples, 0.19%)</title><rect x="44.0799%" y="341" width="0.1860%" height="15" fill="rgb(235,190,38)" fg:x="45025" fg:w="190"/><text x="44.3299%" y="351.50"></text></g><g><title>__libc_malloc (114 samples, 0.11%)</title><rect x="44.2659%" y="341" width="0.1116%" height="15" fill="rgb(247,86,24)" fg:x="45215" fg:w="114"/><text x="44.5159%" y="351.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.06%)</title><rect x="44.3149%" y="325" width="0.0627%" height="15" fill="rgb(205,101,16)" fg:x="45265" fg:w="64"/><text x="44.5649%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (60 samples, 0.06%)</title><rect x="44.3775%" y="341" width="0.0587%" height="15" fill="rgb(246,168,33)" fg:x="45329" fg:w="60"/><text x="44.6275%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (56 samples, 0.05%)</title><rect x="44.3815%" y="325" width="0.0548%" height="15" fill="rgb(231,114,1)" fg:x="45333" fg:w="56"/><text x="44.6315%" y="335.50"></text></g><g><title>realloc (55 samples, 0.05%)</title><rect x="44.3824%" y="309" width="0.0538%" height="15" fill="rgb(207,184,53)" fg:x="45334" fg:w="55"/><text x="44.6324%" y="319.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.04%)</title><rect x="44.3971%" y="293" width="0.0392%" height="15" fill="rgb(224,95,51)" fg:x="45349" fg:w="40"/><text x="44.6471%" y="303.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.04%)</title><rect x="44.4001%" y="277" width="0.0362%" height="15" fill="rgb(212,188,45)" fg:x="45352" fg:w="37"/><text x="44.6501%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.05%)</title><rect x="44.4382%" y="309" width="0.0490%" height="15" fill="rgb(223,154,38)" fg:x="45391" fg:w="50"/><text x="44.6882%" y="319.50"></text></g><g><title>realloc (36 samples, 0.04%)</title><rect x="44.4520%" y="293" width="0.0352%" height="15" fill="rgb(251,22,52)" fg:x="45405" fg:w="36"/><text x="44.7020%" y="303.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.02%)</title><rect x="44.4686%" y="277" width="0.0186%" height="15" fill="rgb(229,209,22)" fg:x="45422" fg:w="19"/><text x="44.7186%" y="287.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="44.4696%" y="261" width="0.0176%" height="15" fill="rgb(234,138,34)" fg:x="45423" fg:w="18"/><text x="44.7196%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.05%)</title><rect x="44.4363%" y="341" width="0.0519%" height="15" fill="rgb(212,95,11)" fg:x="45389" fg:w="53"/><text x="44.6863%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.05%)</title><rect x="44.4363%" y="325" width="0.0519%" height="15" fill="rgb(240,179,47)" fg:x="45389" fg:w="53"/><text x="44.6863%" y="335.50"></text></g><g><title>cfree (50 samples, 0.05%)</title><rect x="44.4882%" y="341" width="0.0490%" height="15" fill="rgb(240,163,11)" fg:x="45442" fg:w="50"/><text x="44.7382%" y="351.50"></text></g><g><title>core::str::converts::from_utf8 (42 samples, 0.04%)</title><rect x="44.5371%" y="341" width="0.0411%" height="15" fill="rgb(236,37,12)" fg:x="45492" fg:w="42"/><text x="44.7871%" y="351.50"></text></g><g><title>core::str::validations::run_utf8_validation (36 samples, 0.04%)</title><rect x="44.5430%" y="325" width="0.0352%" height="15" fill="rgb(232,164,16)" fg:x="45498" fg:w="36"/><text x="44.7930%" y="335.50"></text></g><g><title>[libc-2.31.so] (272 samples, 0.27%)</title><rect x="45.8020%" y="325" width="0.2663%" height="15" fill="rgb(244,205,15)" fg:x="46784" fg:w="272"/><text x="46.0520%" y="335.50"></text></g><g><title>__libc_malloc (131 samples, 0.13%)</title><rect x="46.0683%" y="325" width="0.1283%" height="15" fill="rgb(223,117,47)" fg:x="47056" fg:w="131"/><text x="46.3183%" y="335.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.02%)</title><rect x="46.1770%" y="309" width="0.0196%" height="15" fill="rgb(244,107,35)" fg:x="47167" fg:w="20"/><text x="46.4270%" y="319.50"></text></g><g><title>alloc::string::String::with_capacity (59 samples, 0.06%)</title><rect x="46.2024%" y="309" width="0.0578%" height="15" fill="rgb(205,140,8)" fg:x="47193" fg:w="59"/><text x="46.4524%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.06%)</title><rect x="46.2034%" y="293" width="0.0568%" height="15" fill="rgb(228,84,46)" fg:x="47194" fg:w="58"/><text x="46.4534%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.06%)</title><rect x="46.2034%" y="277" width="0.0568%" height="15" fill="rgb(254,188,9)" fg:x="47194" fg:w="58"/><text x="46.4534%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (58 samples, 0.06%)</title><rect x="46.2034%" y="261" width="0.0568%" height="15" fill="rgb(206,112,54)" fg:x="47194" fg:w="58"/><text x="46.4534%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (58 samples, 0.06%)</title><rect x="46.2034%" y="245" width="0.0568%" height="15" fill="rgb(216,84,49)" fg:x="47194" fg:w="58"/><text x="46.4534%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.05%)</title><rect x="46.2112%" y="229" width="0.0490%" height="15" fill="rgb(214,194,35)" fg:x="47202" fg:w="50"/><text x="46.4612%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.05%)</title><rect x="46.2112%" y="213" width="0.0490%" height="15" fill="rgb(249,28,3)" fg:x="47202" fg:w="50"/><text x="46.4612%" y="223.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.05%)</title><rect x="46.2112%" y="197" width="0.0490%" height="15" fill="rgb(222,56,52)" fg:x="47202" fg:w="50"/><text x="46.4612%" y="207.50"></text></g><g><title>__rdl_alloc (50 samples, 0.05%)</title><rect x="46.2112%" y="181" width="0.0490%" height="15" fill="rgb(245,217,50)" fg:x="47202" fg:w="50"/><text x="46.4612%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (50 samples, 0.05%)</title><rect x="46.2112%" y="165" width="0.0490%" height="15" fill="rgb(213,201,24)" fg:x="47202" fg:w="50"/><text x="46.4612%" y="175.50"></text></g><g><title>__libc_malloc (44 samples, 0.04%)</title><rect x="46.2171%" y="149" width="0.0431%" height="15" fill="rgb(248,116,28)" fg:x="47208" fg:w="44"/><text x="46.4671%" y="159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="46.2866%" y="229" width="0.0127%" height="15" fill="rgb(219,72,43)" fg:x="47279" fg:w="13"/><text x="46.5366%" y="239.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (43 samples, 0.04%)</title><rect x="46.2602%" y="309" width="0.0421%" height="15" fill="rgb(209,138,14)" fg:x="47252" fg:w="43"/><text x="46.5102%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (16 samples, 0.02%)</title><rect x="46.2866%" y="293" width="0.0157%" height="15" fill="rgb(222,18,33)" fg:x="47279" fg:w="16"/><text x="46.5366%" y="303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (16 samples, 0.02%)</title><rect x="46.2866%" y="277" width="0.0157%" height="15" fill="rgb(213,199,7)" fg:x="47279" fg:w="16"/><text x="46.5366%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.02%)</title><rect x="46.2866%" y="261" width="0.0157%" height="15" fill="rgb(250,110,10)" fg:x="47279" fg:w="16"/><text x="46.5366%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.02%)</title><rect x="46.2866%" y="245" width="0.0157%" height="15" fill="rgb(248,123,6)" fg:x="47279" fg:w="16"/><text x="46.5366%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="46.3591%" y="181" width="0.0166%" height="15" fill="rgb(206,91,31)" fg:x="47353" fg:w="17"/><text x="46.6091%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="46.3610%" y="165" width="0.0147%" height="15" fill="rgb(211,154,13)" fg:x="47355" fg:w="15"/><text x="46.6110%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (14 samples, 0.01%)</title><rect x="46.3620%" y="149" width="0.0137%" height="15" fill="rgb(225,148,7)" fg:x="47356" fg:w="14"/><text x="46.6120%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (74 samples, 0.07%)</title><rect x="46.3463%" y="277" width="0.0724%" height="15" fill="rgb(220,160,43)" fg:x="47340" fg:w="74"/><text x="46.5963%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (63 samples, 0.06%)</title><rect x="46.3571%" y="261" width="0.0617%" height="15" fill="rgb(213,52,39)" fg:x="47351" fg:w="63"/><text x="46.6071%" y="271.50"></text></g><g><title>alloc::string::String::push_str (63 samples, 0.06%)</title><rect x="46.3571%" y="245" width="0.0617%" height="15" fill="rgb(243,137,7)" fg:x="47351" fg:w="63"/><text x="46.6071%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (63 samples, 0.06%)</title><rect x="46.3571%" y="229" width="0.0617%" height="15" fill="rgb(230,79,13)" fg:x="47351" fg:w="63"/><text x="46.6071%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (63 samples, 0.06%)</title><rect x="46.3571%" y="213" width="0.0617%" height="15" fill="rgb(247,105,23)" fg:x="47351" fg:w="63"/><text x="46.6071%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (63 samples, 0.06%)</title><rect x="46.3571%" y="197" width="0.0617%" height="15" fill="rgb(223,179,41)" fg:x="47351" fg:w="63"/><text x="46.6071%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.04%)</title><rect x="46.3757%" y="181" width="0.0431%" height="15" fill="rgb(218,9,34)" fg:x="47370" fg:w="44"/><text x="46.6257%" y="191.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.03%)</title><rect x="46.3875%" y="165" width="0.0313%" height="15" fill="rgb(222,106,8)" fg:x="47382" fg:w="32"/><text x="46.6375%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (32 samples, 0.03%)</title><rect x="46.4756%" y="245" width="0.0313%" height="15" fill="rgb(211,220,0)" fg:x="47472" fg:w="32"/><text x="46.7256%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.03%)</title><rect x="46.4805%" y="229" width="0.0264%" height="15" fill="rgb(229,52,16)" fg:x="47477" fg:w="27"/><text x="46.7305%" y="239.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.03%)</title><rect x="46.4805%" y="213" width="0.0264%" height="15" fill="rgb(212,155,18)" fg:x="47477" fg:w="27"/><text x="46.7305%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.03%)</title><rect x="46.4805%" y="197" width="0.0264%" height="15" fill="rgb(242,21,14)" fg:x="47477" fg:w="27"/><text x="46.7305%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.03%)</title><rect x="46.4805%" y="181" width="0.0264%" height="15" fill="rgb(222,19,48)" fg:x="47477" fg:w="27"/><text x="46.7305%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.03%)</title><rect x="46.4805%" y="165" width="0.0264%" height="15" fill="rgb(232,45,27)" fg:x="47477" fg:w="27"/><text x="46.7305%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="46.4873%" y="149" width="0.0196%" height="15" fill="rgb(249,103,42)" fg:x="47484" fg:w="20"/><text x="46.7373%" y="159.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="46.4942%" y="133" width="0.0127%" height="15" fill="rgb(246,81,33)" fg:x="47491" fg:w="13"/><text x="46.7442%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral (52 samples, 0.05%)</title><rect x="46.5069%" y="245" width="0.0509%" height="15" fill="rgb(252,33,42)" fg:x="47504" fg:w="52"/><text x="46.7569%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (22 samples, 0.02%)</title><rect x="46.5363%" y="229" width="0.0215%" height="15" fill="rgb(209,212,41)" fg:x="47534" fg:w="22"/><text x="46.7863%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (372 samples, 0.36%)</title><rect x="46.1965%" y="325" width="0.3642%" height="15" fill="rgb(207,154,6)" fg:x="47187" fg:w="372"/><text x="46.4465%" y="335.50"></text></g><g><title>core::fmt::Write::write_fmt (264 samples, 0.26%)</title><rect x="46.3023%" y="309" width="0.2585%" height="15" fill="rgb(223,64,47)" fg:x="47295" fg:w="264"/><text x="46.5523%" y="319.50"></text></g><g><title>core::fmt::write (256 samples, 0.25%)</title><rect x="46.3101%" y="293" width="0.2506%" height="15" fill="rgb(211,161,38)" fg:x="47303" fg:w="256"/><text x="46.5601%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (128 samples, 0.13%)</title><rect x="46.4354%" y="277" width="0.1253%" height="15" fill="rgb(219,138,40)" fg:x="47431" fg:w="128"/><text x="46.6854%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (121 samples, 0.12%)</title><rect x="46.4423%" y="261" width="0.1185%" height="15" fill="rgb(241,228,46)" fg:x="47438" fg:w="121"/><text x="46.6923%" y="271.50"></text></g><g><title>__libc_malloc (54 samples, 0.05%)</title><rect x="46.7262%" y="293" width="0.0529%" height="15" fill="rgb(223,209,38)" fg:x="47728" fg:w="54"/><text x="46.9762%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,368 samples, 1.34%)</title><rect x="46.5607%" y="325" width="1.3393%" height="15" fill="rgb(236,164,45)" fg:x="47559" fg:w="1368"/><text x="46.8107%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,275 samples, 1.25%)</title><rect x="46.6518%" y="309" width="1.2482%" height="15" fill="rgb(231,15,5)" fg:x="47652" fg:w="1275"/><text x="46.9018%" y="319.50"></text></g><g><title>realloc (1,145 samples, 1.12%)</title><rect x="46.7791%" y="293" width="1.1210%" height="15" fill="rgb(252,35,15)" fg:x="47782" fg:w="1145"/><text x="47.0291%" y="303.50"></text></g><g><title>[libc-2.31.so] (703 samples, 0.69%)</title><rect x="47.2118%" y="277" width="0.6882%" height="15" fill="rgb(248,181,18)" fg:x="48224" fg:w="703"/><text x="47.4618%" y="287.50"></text></g><g><title>[libc-2.31.so] (614 samples, 0.60%)</title><rect x="47.2989%" y="261" width="0.6011%" height="15" fill="rgb(233,39,42)" fg:x="48313" fg:w="614"/><text x="47.5489%" y="271.50"></text></g><g><title>[libc-2.31.so] (115 samples, 0.11%)</title><rect x="47.7874%" y="245" width="0.1126%" height="15" fill="rgb(238,110,33)" fg:x="48812" fg:w="115"/><text x="48.0374%" y="255.50"></text></g><g><title>cfree (49 samples, 0.05%)</title><rect x="47.9000%" y="325" width="0.0480%" height="15" fill="rgb(233,195,10)" fg:x="48927" fg:w="49"/><text x="48.1500%" y="335.50"></text></g><g><title>__log2_finite (5,719 samples, 5.60%)</title><rect x="60.5067%" y="309" width="5.5990%" height="15" fill="rgb(254,105,3)" fg:x="61804" fg:w="5719"/><text x="60.7567%" y="319.50">__log2_..</text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (19,700 samples, 19.29%)</title><rect x="47.9480%" y="325" width="19.2865%" height="15" fill="rgb(221,225,9)" fg:x="48976" fg:w="19700"/><text x="48.1980%" y="335.50">fid_rs::fid::fid::&lt;impl fid_rs..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (1,153 samples, 1.13%)</title><rect x="66.1057%" y="309" width="1.1288%" height="15" fill="rgb(224,227,45)" fg:x="67523" fg:w="1153"/><text x="66.3557%" y="319.50"></text></g><g><title>xword_generator::get_matching_words (54,826 samples, 53.68%)</title><rect x="14.4149%" y="357" width="53.6752%" height="15" fill="rgb(229,198,43)" fg:x="14724" fg:w="54826"/><text x="14.6649%" y="367.50">xword_generator::get_matching_words</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (24,016 samples, 23.51%)</title><rect x="44.5782%" y="341" width="23.5119%" height="15" fill="rgb(206,209,35)" fg:x="45534" fg:w="24016"/><text x="44.8282%" y="351.50">trie_rs::trie::trie::&lt;impl trie_rs::t..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (874 samples, 0.86%)</title><rect x="67.2345%" y="325" width="0.8557%" height="15" fill="rgb(245,195,53)" fg:x="68676" fg:w="874"/><text x="67.4845%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="68.2615%" y="293" width="0.0127%" height="15" fill="rgb(240,92,26)" fg:x="69725" fg:w="13"/><text x="68.5115%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (51 samples, 0.05%)</title><rect x="68.2253%" y="341" width="0.0499%" height="15" fill="rgb(207,40,23)" fg:x="69688" fg:w="51"/><text x="68.4753%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.02%)</title><rect x="68.2566%" y="325" width="0.0186%" height="15" fill="rgb(223,111,35)" fg:x="69720" fg:w="19"/><text x="68.5066%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.02%)</title><rect x="68.2566%" y="309" width="0.0186%" height="15" fill="rgb(229,147,28)" fg:x="69720" fg:w="19"/><text x="68.5066%" y="319.50"></text></g><g><title>[libc-2.31.so] (114 samples, 0.11%)</title><rect x="68.2752%" y="341" width="0.1116%" height="15" fill="rgb(211,29,28)" fg:x="69739" fg:w="114"/><text x="68.5252%" y="351.50"></text></g><g><title>__libc_malloc (15 samples, 0.01%)</title><rect x="68.3868%" y="341" width="0.0147%" height="15" fill="rgb(228,72,33)" fg:x="69853" fg:w="15"/><text x="68.6368%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad (29 samples, 0.03%)</title><rect x="68.4259%" y="277" width="0.0284%" height="15" fill="rgb(205,214,31)" fg:x="69893" fg:w="29"/><text x="68.6759%" y="287.50"></text></g><g><title>alloc::fmt::format::format_inner (56 samples, 0.05%)</title><rect x="68.4015%" y="341" width="0.0548%" height="15" fill="rgb(224,111,15)" fg:x="69868" fg:w="56"/><text x="68.6515%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (51 samples, 0.05%)</title><rect x="68.4064%" y="325" width="0.0499%" height="15" fill="rgb(253,21,26)" fg:x="69873" fg:w="51"/><text x="68.6564%" y="335.50"></text></g><g><title>core::fmt::write (46 samples, 0.05%)</title><rect x="68.4113%" y="309" width="0.0450%" height="15" fill="rgb(245,139,43)" fg:x="69878" fg:w="46"/><text x="68.6613%" y="319.50"></text></g><g><title>core::fmt::run (43 samples, 0.04%)</title><rect x="68.4142%" y="293" width="0.0421%" height="15" fill="rgb(252,170,7)" fg:x="69881" fg:w="43"/><text x="68.6642%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="68.4602%" y="309" width="0.0186%" height="15" fill="rgb(231,118,14)" fg:x="69928" fg:w="19"/><text x="68.7102%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.03%)</title><rect x="68.4563%" y="341" width="0.0255%" height="15" fill="rgb(238,83,0)" fg:x="69924" fg:w="26"/><text x="68.7063%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.03%)</title><rect x="68.4563%" y="325" width="0.0255%" height="15" fill="rgb(221,39,39)" fg:x="69924" fg:w="26"/><text x="68.7063%" y="335.50"></text></g><g><title>cfree (34 samples, 0.03%)</title><rect x="68.4818%" y="341" width="0.0333%" height="15" fill="rgb(222,119,46)" fg:x="69950" fg:w="34"/><text x="68.7318%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (53 samples, 0.05%)</title><rect x="68.5150%" y="341" width="0.0519%" height="15" fill="rgb(222,165,49)" fg:x="69984" fg:w="53"/><text x="68.7650%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.03%)</title><rect x="68.5405%" y="325" width="0.0264%" height="15" fill="rgb(219,113,52)" fg:x="70010" fg:w="27"/><text x="68.7905%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (33 samples, 0.03%)</title><rect x="68.5669%" y="341" width="0.0323%" height="15" fill="rgb(214,7,15)" fg:x="70037" fg:w="33"/><text x="68.8169%" y="351.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (42 samples, 0.04%)</title><rect x="68.5992%" y="341" width="0.0411%" height="15" fill="rgb(235,32,4)" fg:x="70070" fg:w="42"/><text x="68.8492%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.02%)</title><rect x="68.6208%" y="325" width="0.0196%" height="15" fill="rgb(238,90,54)" fg:x="70092" fg:w="20"/><text x="68.8708%" y="335.50"></text></g><g><title>xword_generator::XWord::set_across (30 samples, 0.03%)</title><rect x="68.6404%" y="341" width="0.0294%" height="15" fill="rgb(213,208,19)" fg:x="70112" fg:w="30"/><text x="68.8904%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.04%)</title><rect x="68.8459%" y="277" width="0.0421%" height="15" fill="rgb(233,156,4)" fg:x="70322" fg:w="43"/><text x="69.0959%" y="287.50"></text></g><g><title>realloc (39 samples, 0.04%)</title><rect x="68.8499%" y="261" width="0.0382%" height="15" fill="rgb(207,194,5)" fg:x="70326" fg:w="39"/><text x="69.0999%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (58 samples, 0.06%)</title><rect x="68.8322%" y="325" width="0.0568%" height="15" fill="rgb(206,111,30)" fg:x="70308" fg:w="58"/><text x="69.0822%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.05%)</title><rect x="68.8391%" y="309" width="0.0499%" height="15" fill="rgb(243,70,54)" fg:x="70315" fg:w="51"/><text x="69.0891%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.05%)</title><rect x="68.8391%" y="293" width="0.0499%" height="15" fill="rgb(242,28,8)" fg:x="70315" fg:w="51"/><text x="69.0891%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.04%)</title><rect x="68.9615%" y="245" width="0.0411%" height="15" fill="rgb(219,106,18)" fg:x="70440" fg:w="42"/><text x="69.2115%" y="255.50"></text></g><g><title>realloc (37 samples, 0.04%)</title><rect x="68.9664%" y="229" width="0.0362%" height="15" fill="rgb(244,222,10)" fg:x="70445" fg:w="37"/><text x="69.2164%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (54 samples, 0.05%)</title><rect x="68.9527%" y="293" width="0.0529%" height="15" fill="rgb(236,179,52)" fg:x="70431" fg:w="54"/><text x="69.2027%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 0.05%)</title><rect x="68.9595%" y="277" width="0.0460%" height="15" fill="rgb(213,23,39)" fg:x="70438" fg:w="47"/><text x="69.2095%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 0.05%)</title><rect x="68.9595%" y="261" width="0.0460%" height="15" fill="rgb(238,48,10)" fg:x="70438" fg:w="47"/><text x="69.2095%" y="271.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.02%)</title><rect x="69.0692%" y="261" width="0.0225%" height="15" fill="rgb(251,196,23)" fg:x="70550" fg:w="23"/><text x="69.3192%" y="271.50"></text></g><g><title>__libc_malloc (18 samples, 0.02%)</title><rect x="69.0917%" y="261" width="0.0176%" height="15" fill="rgb(250,152,24)" fg:x="70573" fg:w="18"/><text x="69.3417%" y="271.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.03%)</title><rect x="69.2395%" y="245" width="0.0343%" height="15" fill="rgb(209,150,17)" fg:x="70724" fg:w="35"/><text x="69.4895%" y="255.50"></text></g><g><title>__libc_malloc (124 samples, 0.12%)</title><rect x="69.2738%" y="245" width="0.1214%" height="15" fill="rgb(234,202,34)" fg:x="70759" fg:w="124"/><text x="69.5238%" y="255.50"></text></g><g><title>[libc-2.31.so] (97 samples, 0.09%)</title><rect x="69.3002%" y="229" width="0.0950%" height="15" fill="rgb(253,148,53)" fg:x="70786" fg:w="97"/><text x="69.5502%" y="239.50"></text></g><g><title>alloc::string::String::with_capacity (20 samples, 0.02%)</title><rect x="69.3952%" y="229" width="0.0196%" height="15" fill="rgb(218,129,16)" fg:x="70883" fg:w="20"/><text x="69.6452%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.02%)</title><rect x="69.3952%" y="213" width="0.0196%" height="15" fill="rgb(216,85,19)" fg:x="70883" fg:w="20"/><text x="69.6452%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="69.3952%" y="197" width="0.0196%" height="15" fill="rgb(235,228,7)" fg:x="70883" fg:w="20"/><text x="69.6452%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="69.3952%" y="181" width="0.0196%" height="15" fill="rgb(245,175,0)" fg:x="70883" fg:w="20"/><text x="69.6452%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="69.3952%" y="165" width="0.0196%" height="15" fill="rgb(208,168,36)" fg:x="70883" fg:w="20"/><text x="69.6452%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="69.3981%" y="149" width="0.0166%" height="15" fill="rgb(246,171,24)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="69.3981%" y="133" width="0.0166%" height="15" fill="rgb(215,142,24)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="143.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="69.3981%" y="117" width="0.0166%" height="15" fill="rgb(250,187,7)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="127.50"></text></g><g><title>__rdl_alloc (17 samples, 0.02%)</title><rect x="69.3981%" y="101" width="0.0166%" height="15" fill="rgb(228,66,33)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (17 samples, 0.02%)</title><rect x="69.3981%" y="85" width="0.0166%" height="15" fill="rgb(234,215,21)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="95.50"></text></g><g><title>__libc_malloc (17 samples, 0.02%)</title><rect x="69.3981%" y="69" width="0.0166%" height="15" fill="rgb(222,191,20)" fg:x="70886" fg:w="17"/><text x="69.6481%" y="79.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (11 samples, 0.01%)</title><rect x="69.4147%" y="229" width="0.0108%" height="15" fill="rgb(245,79,54)" fg:x="70903" fg:w="11"/><text x="69.6647%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="69.4373%" y="197" width="0.0117%" height="15" fill="rgb(240,10,37)" fg:x="70926" fg:w="12"/><text x="69.6873%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (92 samples, 0.09%)</title><rect x="69.3952%" y="245" width="0.0901%" height="15" fill="rgb(214,192,32)" fg:x="70883" fg:w="92"/><text x="69.6452%" y="255.50"></text></g><g><title>core::fmt::Write::write_fmt (61 samples, 0.06%)</title><rect x="69.4255%" y="229" width="0.0597%" height="15" fill="rgb(209,36,54)" fg:x="70914" fg:w="61"/><text x="69.6755%" y="239.50"></text></g><g><title>core::fmt::write (59 samples, 0.06%)</title><rect x="69.4275%" y="213" width="0.0578%" height="15" fill="rgb(220,10,11)" fg:x="70916" fg:w="59"/><text x="69.6775%" y="223.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (30 samples, 0.03%)</title><rect x="69.4559%" y="197" width="0.0294%" height="15" fill="rgb(221,106,17)" fg:x="70945" fg:w="30"/><text x="69.7059%" y="207.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (29 samples, 0.03%)</title><rect x="69.4568%" y="181" width="0.0284%" height="15" fill="rgb(251,142,44)" fg:x="70946" fg:w="29"/><text x="69.7068%" y="191.50"></text></g><g><title>__log2_finite (824 samples, 0.81%)</title><rect x="71.1192%" y="229" width="0.8067%" height="15" fill="rgb(238,13,15)" fg:x="72644" fg:w="824"/><text x="71.3692%" y="239.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (2,610 samples, 2.56%)</title><rect x="69.5029%" y="245" width="2.5552%" height="15" fill="rgb(208,107,27)" fg:x="70993" fg:w="2610"/><text x="69.7529%" y="255.50">fi..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (135 samples, 0.13%)</title><rect x="71.9259%" y="229" width="0.1322%" height="15" fill="rgb(205,136,37)" fg:x="73468" fg:w="135"/><text x="72.1759%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,133 samples, 3.07%)</title><rect x="69.0055%" y="293" width="3.0672%" height="15" fill="rgb(250,205,27)" fg:x="70485" fg:w="3133"/><text x="69.2555%" y="303.50">&lt;co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,103 samples, 3.04%)</title><rect x="69.0349%" y="277" width="3.0379%" height="15" fill="rgb(210,80,43)" fg:x="70515" fg:w="3103"/><text x="69.2849%" y="287.50">cor..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (3,020 samples, 2.96%)</title><rect x="69.1161%" y="261" width="2.9566%" height="15" fill="rgb(247,160,36)" fg:x="70598" fg:w="3020"/><text x="69.3661%" y="271.50">tri..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (15 samples, 0.01%)</title><rect x="72.0581%" y="245" width="0.0147%" height="15" fill="rgb(234,13,49)" fg:x="73603" fg:w="15"/><text x="72.3081%" y="255.50"></text></g><g><title>[libc-2.31.so] (41 samples, 0.04%)</title><rect x="72.0728%" y="293" width="0.0401%" height="15" fill="rgb(234,122,0)" fg:x="73618" fg:w="41"/><text x="72.3228%" y="303.50"></text></g><g><title>__libc_malloc (21 samples, 0.02%)</title><rect x="72.1129%" y="293" width="0.0206%" height="15" fill="rgb(207,146,38)" fg:x="73659" fg:w="21"/><text x="72.3629%" y="303.50"></text></g><g><title>cfree (13 samples, 0.01%)</title><rect x="72.1413%" y="293" width="0.0127%" height="15" fill="rgb(207,177,25)" fg:x="73688" fg:w="13"/><text x="72.3913%" y="303.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.03%)</title><rect x="72.3038%" y="277" width="0.0343%" height="15" fill="rgb(211,178,42)" fg:x="73854" fg:w="35"/><text x="72.5538%" y="287.50"></text></g><g><title>__libc_malloc (21 samples, 0.02%)</title><rect x="72.3381%" y="277" width="0.0206%" height="15" fill="rgb(230,69,54)" fg:x="73889" fg:w="21"/><text x="72.5881%" y="287.50"></text></g><g><title>alloc::string::String::with_capacity (15 samples, 0.01%)</title><rect x="72.3586%" y="261" width="0.0147%" height="15" fill="rgb(214,135,41)" fg:x="73910" fg:w="15"/><text x="72.6086%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="72.3625%" y="245" width="0.0108%" height="15" fill="rgb(237,67,25)" fg:x="73914" fg:w="11"/><text x="72.6125%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="72.3625%" y="229" width="0.0108%" height="15" fill="rgb(222,189,50)" fg:x="73914" fg:w="11"/><text x="72.6125%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="72.3625%" y="213" width="0.0108%" height="15" fill="rgb(245,148,34)" fg:x="73914" fg:w="11"/><text x="72.6125%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="72.3625%" y="197" width="0.0108%" height="15" fill="rgb(222,29,6)" fg:x="73914" fg:w="11"/><text x="72.6125%" y="207.50"></text></g><g><title>core::fmt::Formatter::pad_integral (14 samples, 0.01%)</title><rect x="72.4213%" y="197" width="0.0137%" height="15" fill="rgb(221,189,43)" fg:x="73974" fg:w="14"/><text x="72.6713%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (79 samples, 0.08%)</title><rect x="72.3586%" y="277" width="0.0773%" height="15" fill="rgb(207,36,27)" fg:x="73910" fg:w="79"/><text x="72.6086%" y="287.50"></text></g><g><title>core::fmt::Write::write_fmt (56 samples, 0.05%)</title><rect x="72.3811%" y="261" width="0.0548%" height="15" fill="rgb(217,90,24)" fg:x="73933" fg:w="56"/><text x="72.6311%" y="271.50"></text></g><g><title>core::fmt::write (53 samples, 0.05%)</title><rect x="72.3841%" y="245" width="0.0519%" height="15" fill="rgb(224,66,35)" fg:x="73936" fg:w="53"/><text x="72.6341%" y="255.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (32 samples, 0.03%)</title><rect x="72.4046%" y="229" width="0.0313%" height="15" fill="rgb(221,13,50)" fg:x="73957" fg:w="32"/><text x="72.6546%" y="239.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (30 samples, 0.03%)</title><rect x="72.4066%" y="213" width="0.0294%" height="15" fill="rgb(236,68,49)" fg:x="73959" fg:w="30"/><text x="72.6566%" y="223.50"></text></g><g><title>__libc_malloc (16 samples, 0.02%)</title><rect x="72.4467%" y="245" width="0.0157%" height="15" fill="rgb(229,146,28)" fg:x="74000" fg:w="16"/><text x="72.6967%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (36 samples, 0.04%)</title><rect x="72.4360%" y="277" width="0.0352%" height="15" fill="rgb(225,31,38)" fg:x="73989" fg:w="36"/><text x="72.6860%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.03%)</title><rect x="72.4428%" y="261" width="0.0284%" height="15" fill="rgb(250,208,3)" fg:x="73996" fg:w="29"/><text x="72.6928%" y="271.50"></text></g><g><title>cfree (20 samples, 0.02%)</title><rect x="72.4712%" y="277" width="0.0196%" height="15" fill="rgb(246,54,23)" fg:x="74025" fg:w="20"/><text x="72.7212%" y="287.50"></text></g><g><title>__log2_finite (839 samples, 0.82%)</title><rect x="74.0895%" y="261" width="0.8214%" height="15" fill="rgb(243,76,11)" fg:x="75678" fg:w="839"/><text x="74.3395%" y="271.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (2,598 samples, 2.54%)</title><rect x="72.4908%" y="277" width="2.5435%" height="15" fill="rgb(245,21,50)" fg:x="74045" fg:w="2598"/><text x="72.7408%" y="287.50">fi..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (126 samples, 0.12%)</title><rect x="74.9109%" y="261" width="0.1234%" height="15" fill="rgb(228,9,43)" fg:x="76517" fg:w="126"/><text x="75.1609%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,312 samples, 6.18%)</title><rect x="68.8890%" y="325" width="6.1795%" height="15" fill="rgb(208,100,47)" fg:x="70366" fg:w="6312"/><text x="69.1390%" y="335.50">&lt;core::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,290 samples, 6.16%)</title><rect x="68.9106%" y="309" width="6.1580%" height="15" fill="rgb(232,26,8)" fg:x="70388" fg:w="6290"/><text x="69.1606%" y="319.50">core::op..</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (2,977 samples, 2.91%)</title><rect x="72.1540%" y="293" width="2.9145%" height="15" fill="rgb(216,166,38)" fg:x="73701" fg:w="2977"/><text x="72.4040%" y="303.50">tr..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (35 samples, 0.03%)</title><rect x="75.0343%" y="277" width="0.0343%" height="15" fill="rgb(251,202,51)" fg:x="76643" fg:w="35"/><text x="75.2843%" y="287.50"></text></g><g><title>[libc-2.31.so] (93 samples, 0.09%)</title><rect x="75.0685%" y="325" width="0.0910%" height="15" fill="rgb(254,216,34)" fg:x="76678" fg:w="93"/><text x="75.3185%" y="335.50"></text></g><g><title>__libc_malloc (24 samples, 0.02%)</title><rect x="75.1596%" y="325" width="0.0235%" height="15" fill="rgb(251,32,27)" fg:x="76771" fg:w="24"/><text x="75.4096%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.01%)</title><rect x="75.1889%" y="325" width="0.0117%" height="15" fill="rgb(208,127,28)" fg:x="76801" fg:w="12"/><text x="75.4389%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="75.1889%" y="309" width="0.0117%" height="15" fill="rgb(224,137,22)" fg:x="76801" fg:w="12"/><text x="75.4389%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="75.1899%" y="293" width="0.0108%" height="15" fill="rgb(254,70,32)" fg:x="76802" fg:w="11"/><text x="75.4399%" y="303.50"></text></g><g><title>cfree (39 samples, 0.04%)</title><rect x="75.2007%" y="325" width="0.0382%" height="15" fill="rgb(229,75,37)" fg:x="76813" fg:w="39"/><text x="75.4507%" y="335.50"></text></g><g><title>core::str::converts::from_utf8 (14 samples, 0.01%)</title><rect x="75.2389%" y="325" width="0.0137%" height="15" fill="rgb(252,64,23)" fg:x="76852" fg:w="14"/><text x="75.4889%" y="335.50"></text></g><g><title>core::str::validations::run_utf8_validation (12 samples, 0.01%)</title><rect x="75.2408%" y="309" width="0.0117%" height="15" fill="rgb(232,162,48)" fg:x="76854" fg:w="12"/><text x="75.4908%" y="319.50"></text></g><g><title>[libc-2.31.so] (313 samples, 0.31%)</title><rect x="76.4852%" y="309" width="0.3064%" height="15" fill="rgb(246,160,12)" fg:x="78125" fg:w="313"/><text x="76.7352%" y="319.50"></text></g><g><title>__libc_malloc (166 samples, 0.16%)</title><rect x="76.7916%" y="309" width="0.1625%" height="15" fill="rgb(247,166,0)" fg:x="78438" fg:w="166"/><text x="77.0416%" y="319.50"></text></g><g><title>[libc-2.31.so] (42 samples, 0.04%)</title><rect x="76.9130%" y="293" width="0.0411%" height="15" fill="rgb(249,219,21)" fg:x="78562" fg:w="42"/><text x="77.1630%" y="303.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="76.9433%" y="277" width="0.0108%" height="15" fill="rgb(205,209,3)" fg:x="78593" fg:w="11"/><text x="77.1933%" y="287.50"></text></g><g><title>alloc::string::String::with_capacity (64 samples, 0.06%)</title><rect x="76.9551%" y="293" width="0.0627%" height="15" fill="rgb(243,44,1)" fg:x="78605" fg:w="64"/><text x="77.2051%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (61 samples, 0.06%)</title><rect x="76.9580%" y="277" width="0.0597%" height="15" fill="rgb(206,159,16)" fg:x="78608" fg:w="61"/><text x="77.2080%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (61 samples, 0.06%)</title><rect x="76.9580%" y="261" width="0.0597%" height="15" fill="rgb(244,77,30)" fg:x="78608" fg:w="61"/><text x="77.2080%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.06%)</title><rect x="76.9580%" y="245" width="0.0597%" height="15" fill="rgb(218,69,12)" fg:x="78608" fg:w="61"/><text x="77.2080%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.06%)</title><rect x="76.9580%" y="229" width="0.0597%" height="15" fill="rgb(212,87,7)" fg:x="78608" fg:w="61"/><text x="77.2080%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.05%)</title><rect x="76.9649%" y="213" width="0.0529%" height="15" fill="rgb(245,114,25)" fg:x="78615" fg:w="54"/><text x="77.2149%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.05%)</title><rect x="76.9649%" y="197" width="0.0529%" height="15" fill="rgb(210,61,42)" fg:x="78615" fg:w="54"/><text x="77.2149%" y="207.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.05%)</title><rect x="76.9649%" y="181" width="0.0529%" height="15" fill="rgb(211,52,33)" fg:x="78615" fg:w="54"/><text x="77.2149%" y="191.50"></text></g><g><title>__rdl_alloc (54 samples, 0.05%)</title><rect x="76.9649%" y="165" width="0.0529%" height="15" fill="rgb(234,58,33)" fg:x="78615" fg:w="54"/><text x="77.2149%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (54 samples, 0.05%)</title><rect x="76.9649%" y="149" width="0.0529%" height="15" fill="rgb(220,115,36)" fg:x="78615" fg:w="54"/><text x="77.2149%" y="159.50"></text></g><g><title>__libc_malloc (48 samples, 0.05%)</title><rect x="76.9707%" y="133" width="0.0470%" height="15" fill="rgb(243,153,54)" fg:x="78621" fg:w="48"/><text x="77.2207%" y="143.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (44 samples, 0.04%)</title><rect x="77.0177%" y="293" width="0.0431%" height="15" fill="rgb(251,47,18)" fg:x="78669" fg:w="44"/><text x="77.2677%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (17 samples, 0.02%)</title><rect x="77.0442%" y="277" width="0.0166%" height="15" fill="rgb(242,102,42)" fg:x="78696" fg:w="17"/><text x="77.2942%" y="287.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (17 samples, 0.02%)</title><rect x="77.0442%" y="261" width="0.0166%" height="15" fill="rgb(234,31,38)" fg:x="78696" fg:w="17"/><text x="77.2942%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.02%)</title><rect x="77.0442%" y="245" width="0.0166%" height="15" fill="rgb(221,117,51)" fg:x="78696" fg:w="17"/><text x="77.2942%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.02%)</title><rect x="77.0442%" y="229" width="0.0166%" height="15" fill="rgb(212,20,18)" fg:x="78696" fg:w="17"/><text x="77.2942%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="77.0442%" y="213" width="0.0166%" height="15" fill="rgb(245,133,36)" fg:x="78696" fg:w="17"/><text x="77.2942%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (69 samples, 0.07%)</title><rect x="77.1235%" y="261" width="0.0676%" height="15" fill="rgb(212,6,19)" fg:x="78777" fg:w="69"/><text x="77.3735%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (62 samples, 0.06%)</title><rect x="77.1303%" y="245" width="0.0607%" height="15" fill="rgb(218,1,36)" fg:x="78784" fg:w="62"/><text x="77.3803%" y="255.50"></text></g><g><title>alloc::string::String::push_str (62 samples, 0.06%)</title><rect x="77.1303%" y="229" width="0.0607%" height="15" fill="rgb(246,84,54)" fg:x="78784" fg:w="62"/><text x="77.3803%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (62 samples, 0.06%)</title><rect x="77.1303%" y="213" width="0.0607%" height="15" fill="rgb(242,110,6)" fg:x="78784" fg:w="62"/><text x="77.3803%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (62 samples, 0.06%)</title><rect x="77.1303%" y="197" width="0.0607%" height="15" fill="rgb(214,47,5)" fg:x="78784" fg:w="62"/><text x="77.3803%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (62 samples, 0.06%)</title><rect x="77.1303%" y="181" width="0.0607%" height="15" fill="rgb(218,159,25)" fg:x="78784" fg:w="62"/><text x="77.3803%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.05%)</title><rect x="77.1391%" y="165" width="0.0519%" height="15" fill="rgb(215,211,28)" fg:x="78793" fg:w="53"/><text x="77.3891%" y="175.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.04%)</title><rect x="77.1548%" y="149" width="0.0362%" height="15" fill="rgb(238,59,32)" fg:x="78809" fg:w="37"/><text x="77.4048%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.1910%" y="261" width="0.0147%" height="15" fill="rgb(226,82,3)" fg:x="78846" fg:w="15"/><text x="77.4410%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="77.1910%" y="245" width="0.0147%" height="15" fill="rgb(240,164,32)" fg:x="78846" fg:w="15"/><text x="77.4410%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.03%)</title><rect x="77.2468%" y="229" width="0.0255%" height="15" fill="rgb(232,46,7)" fg:x="78903" fg:w="26"/><text x="77.4968%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.02%)</title><rect x="77.2527%" y="213" width="0.0196%" height="15" fill="rgb(229,129,53)" fg:x="78909" fg:w="20"/><text x="77.5027%" y="223.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.02%)</title><rect x="77.2527%" y="197" width="0.0196%" height="15" fill="rgb(234,188,29)" fg:x="78909" fg:w="20"/><text x="77.5027%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.02%)</title><rect x="77.2527%" y="181" width="0.0196%" height="15" fill="rgb(246,141,4)" fg:x="78909" fg:w="20"/><text x="77.5027%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.02%)</title><rect x="77.2527%" y="165" width="0.0196%" height="15" fill="rgb(229,23,39)" fg:x="78909" fg:w="20"/><text x="77.5027%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="77.2527%" y="149" width="0.0196%" height="15" fill="rgb(206,12,3)" fg:x="78909" fg:w="20"/><text x="77.5027%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="77.2586%" y="133" width="0.0137%" height="15" fill="rgb(252,226,20)" fg:x="78915" fg:w="14"/><text x="77.5086%" y="143.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="77.2596%" y="117" width="0.0127%" height="15" fill="rgb(216,123,35)" fg:x="78916" fg:w="13"/><text x="77.5096%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (56 samples, 0.05%)</title><rect x="77.2723%" y="229" width="0.0548%" height="15" fill="rgb(212,68,40)" fg:x="78929" fg:w="56"/><text x="77.5223%" y="239.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (14 samples, 0.01%)</title><rect x="77.3134%" y="213" width="0.0137%" height="15" fill="rgb(254,125,32)" fg:x="78971" fg:w="14"/><text x="77.5634%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (385 samples, 0.38%)</title><rect x="76.9541%" y="309" width="0.3769%" height="15" fill="rgb(253,97,22)" fg:x="78604" fg:w="385"/><text x="77.2041%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (276 samples, 0.27%)</title><rect x="77.0608%" y="293" width="0.2702%" height="15" fill="rgb(241,101,14)" fg:x="78713" fg:w="276"/><text x="77.3108%" y="303.50"></text></g><g><title>core::fmt::write (263 samples, 0.26%)</title><rect x="77.0735%" y="277" width="0.2575%" height="15" fill="rgb(238,103,29)" fg:x="78726" fg:w="263"/><text x="77.3235%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (122 samples, 0.12%)</title><rect x="77.2116%" y="261" width="0.1194%" height="15" fill="rgb(233,195,47)" fg:x="78867" fg:w="122"/><text x="77.4616%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (117 samples, 0.11%)</title><rect x="77.2165%" y="245" width="0.1145%" height="15" fill="rgb(246,218,30)" fg:x="78872" fg:w="117"/><text x="77.4665%" y="255.50"></text></g><g><title>__libc_malloc (35 samples, 0.03%)</title><rect x="77.4984%" y="277" width="0.0343%" height="15" fill="rgb(219,145,47)" fg:x="79160" fg:w="35"/><text x="77.7484%" y="287.50"></text></g><g><title>@plt (11 samples, 0.01%)</title><rect x="78.0359%" y="245" width="0.0108%" height="15" fill="rgb(243,12,26)" fg:x="79709" fg:w="11"/><text x="78.2859%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,348 samples, 1.32%)</title><rect x="77.3310%" y="309" width="1.3197%" height="15" fill="rgb(214,87,16)" fg:x="78989" fg:w="1348"/><text x="77.5810%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,251 samples, 1.22%)</title><rect x="77.4260%" y="293" width="1.2247%" height="15" fill="rgb(208,99,42)" fg:x="79086" fg:w="1251"/><text x="77.6760%" y="303.50"></text></g><g><title>realloc (1,142 samples, 1.12%)</title><rect x="77.5327%" y="277" width="1.1180%" height="15" fill="rgb(253,99,2)" fg:x="79195" fg:w="1142"/><text x="77.7827%" y="287.50"></text></g><g><title>[libc-2.31.so] (688 samples, 0.67%)</title><rect x="77.9772%" y="261" width="0.6736%" height="15" fill="rgb(220,168,23)" fg:x="79649" fg:w="688"/><text x="78.2272%" y="271.50"></text></g><g><title>[libc-2.31.so] (617 samples, 0.60%)</title><rect x="78.0467%" y="245" width="0.6040%" height="15" fill="rgb(242,38,24)" fg:x="79720" fg:w="617"/><text x="78.2967%" y="255.50"></text></g><g><title>[libc-2.31.so] (108 samples, 0.11%)</title><rect x="78.5450%" y="229" width="0.1057%" height="15" fill="rgb(225,182,9)" fg:x="80229" fg:w="108"/><text x="78.7950%" y="239.50"></text></g><g><title>cfree (69 samples, 0.07%)</title><rect x="78.6507%" y="309" width="0.0676%" height="15" fill="rgb(243,178,37)" fg:x="80337" fg:w="69"/><text x="78.9007%" y="319.50"></text></g><g><title>__log2_finite (6,452 samples, 6.32%)</title><rect x="91.1272%" y="293" width="6.3166%" height="15" fill="rgb(232,139,19)" fg:x="93081" fg:w="6452"/><text x="91.3772%" y="303.50">__log2_f..</text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (20,254 samples, 19.83%)</title><rect x="78.7183%" y="309" width="19.8289%" height="15" fill="rgb(225,201,24)" fg:x="80406" fg:w="20254"/><text x="78.9683%" y="319.50">fid_rs::fid::fid::&lt;impl fid_rs:..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (1,127 samples, 1.10%)</title><rect x="97.4438%" y="293" width="1.1033%" height="15" fill="rgb(221,47,46)" fg:x="99533" fg:w="1127"/><text x="97.6938%" y="303.50"></text></g><g><title>xword_generator::get_matching_words (31,385 samples, 30.73%)</title><rect x="68.6697%" y="341" width="30.7262%" height="15" fill="rgb(249,23,13)" fg:x="70142" fg:w="31385"/><text x="68.9197%" y="351.50">xword_generator::get_matching_words</text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (24,661 samples, 24.14%)</title><rect x="75.2526%" y="325" width="24.1434%" height="15" fill="rgb(219,9,5)" fg:x="76866" fg:w="24661"/><text x="75.5026%" y="335.50">trie_rs::trie::trie::&lt;impl trie_rs::tr..</text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (867 samples, 0.85%)</title><rect x="98.5471%" y="309" width="0.8488%" height="15" fill="rgb(254,171,16)" fg:x="100660" fg:w="867"/><text x="98.7971%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (16 samples, 0.02%)</title><rect x="99.4429%" y="293" width="0.0157%" height="15" fill="rgb(230,171,20)" fg:x="101575" fg:w="16"/><text x="99.6929%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="99.4449%" y="277" width="0.0137%" height="15" fill="rgb(210,71,41)" fg:x="101577" fg:w="14"/><text x="99.6949%" y="287.50"></text></g><g><title>realloc (13 samples, 0.01%)</title><rect x="99.4459%" y="261" width="0.0127%" height="15" fill="rgb(206,173,20)" fg:x="101578" fg:w="13"/><text x="99.6959%" y="271.50"></text></g><g><title>__log2_finite (91 samples, 0.09%)</title><rect x="99.6397%" y="277" width="0.0891%" height="15" fill="rgb(233,88,34)" fg:x="101776" fg:w="91"/><text x="99.8897%" y="287.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (296 samples, 0.29%)</title><rect x="99.4586%" y="293" width="0.2898%" height="15" fill="rgb(223,209,46)" fg:x="101591" fg:w="296"/><text x="99.7086%" y="303.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::clone_sub (20 samples, 0.02%)</title><rect x="99.7288%" y="277" width="0.0196%" height="15" fill="rgb(250,43,18)" fg:x="101867" fg:w="20"/><text x="99.9788%" y="287.50"></text></g><g><title>_start (91,539 samples, 89.62%)</title><rect x="10.1455%" y="485" width="89.6176%" height="15" fill="rgb(208,13,10)" fg:x="10363" fg:w="91539"/><text x="10.3955%" y="495.50">_start</text></g><g><title>__libc_start_main (91,539 samples, 89.62%)</title><rect x="10.1455%" y="469" width="89.6176%" height="15" fill="rgb(212,200,36)" fg:x="10363" fg:w="91539"/><text x="10.3955%" y="479.50">__libc_start_main</text></g><g><title>main (91,539 samples, 89.62%)</title><rect x="10.1455%" y="453" width="89.6176%" height="15" fill="rgb(225,90,30)" fg:x="10363" fg:w="91539"/><text x="10.3955%" y="463.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (91,539 samples, 89.62%)</title><rect x="10.1455%" y="437" width="89.6176%" height="15" fill="rgb(236,182,39)" fg:x="10363" fg:w="91539"/><text x="10.3955%" y="447.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>xword_generator::main (91,539 samples, 89.62%)</title><rect x="10.1455%" y="421" width="89.6176%" height="15" fill="rgb(212,144,35)" fg:x="10363" fg:w="91539"/><text x="10.3955%" y="431.50">xword_generator::main</text></g><g><title>xword_generator::insert_horizontal (91,406 samples, 89.49%)</title><rect x="10.2757%" y="405" width="89.4874%" height="15" fill="rgb(228,63,44)" fg:x="10496" fg:w="91406"/><text x="10.5257%" y="415.50">xword_generator::insert_horizontal</text></g><g><title>xword_generator::insert_horizontal (91,404 samples, 89.49%)</title><rect x="10.2776%" y="389" width="89.4854%" height="15" fill="rgb(228,109,6)" fg:x="10498" fg:w="91404"/><text x="10.5276%" y="399.50">xword_generator::insert_horizontal</text></g><g><title>xword_generator::insert_horizontal (88,788 samples, 86.92%)</title><rect x="12.8387%" y="373" width="86.9243%" height="15" fill="rgb(238,117,24)" fg:x="13114" fg:w="88788"/><text x="13.0887%" y="383.50">xword_generator::insert_horizontal</text></g><g><title>xword_generator::insert_horizontal (32,352 samples, 31.67%)</title><rect x="68.0901%" y="357" width="31.6729%" height="15" fill="rgb(242,26,26)" fg:x="69550" fg:w="32352"/><text x="68.3401%" y="367.50">xword_generator::insert_horizontal</text></g><g><title>xword_generator::insert_horizontal (375 samples, 0.37%)</title><rect x="99.3960%" y="341" width="0.3671%" height="15" fill="rgb(221,92,48)" fg:x="101527" fg:w="375"/><text x="99.6460%" y="351.50"></text></g><g><title>xword_generator::get_matching_words (361 samples, 0.35%)</title><rect x="99.4097%" y="325" width="0.3534%" height="15" fill="rgb(209,209,32)" fg:x="101541" fg:w="361"/><text x="99.6597%" y="335.50"></text></g><g><title>trie_rs::trie::trie::&lt;impl trie_rs::trie::Trie&lt;Label&gt;&gt;::children_node_nums (356 samples, 0.35%)</title><rect x="99.4146%" y="309" width="0.3485%" height="15" fill="rgb(221,70,22)" fg:x="101546" fg:w="356"/><text x="99.6646%" y="319.50"></text></g><g><title>fid_rs::internal_data_structure::raw_bit_vector::RawBitVector::access (15 samples, 0.01%)</title><rect x="99.7484%" y="293" width="0.0147%" height="15" fill="rgb(248,145,5)" fg:x="101887" fg:w="15"/><text x="99.9984%" y="303.50"></text></g><g><title>clone (112 samples, 0.11%)</title><rect x="99.7660%" y="485" width="0.1096%" height="15" fill="rgb(226,116,26)" fg:x="101905" fg:w="112"/><text x="100.0160%" y="495.50"></text></g><g><title>start_thread (55 samples, 0.05%)</title><rect x="99.8218%" y="469" width="0.0538%" height="15" fill="rgb(244,5,17)" fg:x="101962" fg:w="55"/><text x="100.0718%" y="479.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (45 samples, 0.04%)</title><rect x="99.8316%" y="453" width="0.0441%" height="15" fill="rgb(252,159,33)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45 samples, 0.04%)</title><rect x="99.8316%" y="437" width="0.0441%" height="15" fill="rgb(206,71,0)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45 samples, 0.04%)</title><rect x="99.8316%" y="421" width="0.0441%" height="15" fill="rgb(233,118,54)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (45 samples, 0.04%)</title><rect x="99.8316%" y="405" width="0.0441%" height="15" fill="rgb(234,83,48)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 0.04%)</title><rect x="99.8316%" y="389" width="0.0441%" height="15" fill="rgb(228,3,54)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (45 samples, 0.04%)</title><rect x="99.8316%" y="373" width="0.0441%" height="15" fill="rgb(226,155,13)" fg:x="101972" fg:w="45"/><text x="100.0816%" y="383.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (36 samples, 0.04%)</title><rect x="99.8404%" y="357" width="0.0352%" height="15" fill="rgb(241,28,37)" fg:x="101981" fg:w="36"/><text x="100.0904%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::wait (32 samples, 0.03%)</title><rect x="99.8443%" y="341" width="0.0313%" height="15" fill="rgb(233,93,10)" fg:x="101985" fg:w="32"/><text x="100.0943%" y="351.50"></text></g><g><title>syscall (28 samples, 0.03%)</title><rect x="99.8483%" y="325" width="0.0274%" height="15" fill="rgb(225,113,19)" fg:x="101989" fg:w="28"/><text x="100.0983%" y="335.50"></text></g><g><title>core::fmt::write (12 samples, 0.01%)</title><rect x="99.8806%" y="485" width="0.0117%" height="15" fill="rgb(241,2,18)" fg:x="102022" fg:w="12"/><text x="100.1306%" y="495.50"></text></g><g><title>fid_rs::fid::fid::&lt;impl fid_rs::fid::Fid&gt;::rank (92 samples, 0.09%)</title><rect x="99.8943%" y="485" width="0.0901%" height="15" fill="rgb(228,207,21)" fg:x="102036" fg:w="92"/><text x="100.1443%" y="495.50"></text></g><g><title>realloc (14 samples, 0.01%)</title><rect x="99.9843%" y="485" width="0.0137%" height="15" fill="rgb(213,211,35)" fg:x="102128" fg:w="14"/><text x="100.2343%" y="495.50"></text></g><g><title>all (102,144 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(209,83,10)" fg:x="0" fg:w="102144"/><text x="0.2500%" y="527.50"></text></g><g><title>xword-generator (102,144 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(209,164,1)" fg:x="0" fg:w="102144"/><text x="0.2500%" y="511.50">xword-generator</text></g></svg></svg>